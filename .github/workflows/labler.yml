name: Get Label on PR

on: 
    pull_request:
        types: [opened, synchronize, reopened, labeled, unlabeled]


jobs:
  Label:
    runs-on: ubuntu-latest
    steps:
      - name: PR commit message
        run : |
          echo "PR commit message: ${{ github.event.pull_request.title }}"
          echo "PR commit message: ${{ github.event.pull_request.body }}"
          echo "PR commit message: ${{ github.event.pull_request.head }}"
          echo "PR commit message: ${{ github.event.pull_request.head.sha }}"
          echo "PR commit message: ${{ github.event.pull_request.merge_commit_sha }}"
      - name: Run a script
        run: increment.sh
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Use Incremented Versions
        run: |
            echo "Incremented Major Version: ${{ steps.increment_version.outputs.incremented_major_version }}"
            echo "Incremented Minor Version: ${{ steps.increment_version.outputs.incremented_minor_version }}"
            echo "Incremented Patch Version: ${{ steps.increment_version.outputs.incremented_patch_version }}"
  
  
    #   - name : Get tag 
    #     run: |
    #      echo $RELEASE_VERSION
    #      echo ${{ steps.vars.outputs.tag }}
    #   - uses: actions/checkout@v3
    #     with:
    #       fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
    #   - name: 'Get Previous tag'
    #     id: previoustag
    #     uses: "WyriHaximus/github-action-get-previous-tag@v1"
    #   - name: 'Get next minor version'
    #     id: semvers
    #     uses: "WyriHaximus/github-action-next-semvers@v1"
    #     with:
    #       version: ${{ steps.previoustag.outputs.tag }}
  
    #   - name: 'Get Label'
    #     run: |
    #       echo "Label: ${{ steps.semvers.outputs.patch }}"

    #   - name: 'Create new milestone'
    #     id: createmilestone
    #     uses: "WyriHaximus/github-action-create-milestone@v1"
    #     with:
    #       title: ${{ steps.semvers.outputs.patch }}
    #     env:
    #       GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"