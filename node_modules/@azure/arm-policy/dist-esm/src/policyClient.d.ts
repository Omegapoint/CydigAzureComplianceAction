import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { DataPolicyManifests, PolicyAssignments, PolicyDefinitions, PolicySetDefinitions, PolicyExemptions } from "./operationsInterfaces";
import { PolicyClientOptionalParams } from "./models";
export declare class PolicyClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId?: string;
    /**
     * Initializes a new instance of the PolicyClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: PolicyClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: PolicyClientOptionalParams);
    dataPolicyManifests: DataPolicyManifests;
    policyAssignments: PolicyAssignments;
    policyDefinitions: PolicyDefinitions;
    policySetDefinitions: PolicySetDefinitions;
    policyExemptions: PolicyExemptions;
}
//# sourceMappingURL=policyClient.d.ts.map