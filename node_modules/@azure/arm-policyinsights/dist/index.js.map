{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/policyTrackedResources.ts","../src/operations/remediations.ts","../src/operations/policyEvents.ts","../src/lroImpl.ts","../src/operations/policyStates.ts","../src/operations/operations.ts","../src/operations/policyMetadataOperations.ts","../src/operations/policyRestrictions.ts","../src/operations/attestations.ts","../src/policyInsightsClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Query results. */\nexport interface PolicyTrackedResourcesQueryResults {\n  /**\n   * Query results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: PolicyTrackedResource[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Policy tracked resource record. */\nexport interface PolicyTrackedResource {\n  /**\n   * The ID of the policy tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly trackedResourceId?: string;\n  /**\n   * The details of the policy that require the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDetails?: PolicyDetails;\n  /**\n   * The details of the policy triggered deployment that created the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: TrackedResourceModificationDetails;\n  /**\n   * The details of the policy triggered deployment that modified the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedBy?: TrackedResourceModificationDetails;\n  /**\n   * Timestamp of the last update to the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdateUtc?: Date;\n}\n\n/** The policy details. */\nexport interface PolicyDetails {\n  /**\n   * The ID of the policy definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDefinitionId?: string;\n  /**\n   * The ID of the policy assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyAssignmentId?: string;\n  /**\n   * The display name of the policy assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyAssignmentDisplayName?: string;\n  /**\n   * The scope of the policy assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyAssignmentScope?: string;\n  /**\n   * The ID of the policy set definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policySetDefinitionId?: string;\n  /**\n   * The policy definition reference ID within the policy set definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDefinitionReferenceId?: string;\n}\n\n/** The details of the policy triggered deployment that created or modified the tracked resource. */\nexport interface TrackedResourceModificationDetails {\n  /**\n   * The details of the policy that created or modified the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDetails?: PolicyDetails;\n  /**\n   * The ID of the deployment that created or modified the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deploymentId?: string;\n  /**\n   * Timestamp of the deployment that created or modified the tracked resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deploymentTime?: Date;\n}\n\n/** Error response. */\nexport interface QueryFailure {\n  /** Error definition. */\n  error?: QueryFailureError;\n}\n\n/** Error definition. */\nexport interface QueryFailureError {\n  /**\n   * Service specific error code which serves as the substatus for the HTTP error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Description of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** List of deployments for a remediation. */\nexport interface RemediationDeploymentsListResult {\n  /**\n   * Array of deployments for the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RemediationDeployment[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Details of a single deployment created by the remediation. */\nexport interface RemediationDeployment {\n  /**\n   * Resource ID of the resource that is being remediated by the deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remediatedResourceId?: string;\n  /**\n   * Resource ID of the template deployment that will remediate the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deploymentId?: string;\n  /**\n   * Status of the remediation deployment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Location of the resource that is being remediated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceLocation?: string;\n  /**\n   * Error encountered while remediated the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorDefinition;\n  /**\n   * The time at which the remediation was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * The time at which the remediation deployment was last updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdatedOn?: Date;\n}\n\n/** Error definition. */\nexport interface ErrorDefinition {\n  /**\n   * Service specific error code which serves as the substatus for the HTTP error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Description of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The target of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * Internal error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDefinition[];\n  /**\n   * Additional scenario specific error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: TypedErrorInfo[];\n}\n\n/** Scenario specific error details. */\nexport interface TypedErrorInfo {\n  /**\n   * The type of included error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The scenario specific error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: any;\n}\n\n/** Error response. */\nexport interface ErrorResponse {\n  /** The error details. */\n  error?: ErrorDefinition;\n}\n\n/** The remediation definition. */\nexport interface Remediation {\n  /**\n   * The ID of the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The type of the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The name of the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The resource ID of the policy assignment that should be remediated. */\n  policyAssignmentId?: string;\n  /** The policy definition reference ID of the individual definition that should be remediated. Required when the policy assignment being remediated assigns a policy set definition. */\n  policyDefinitionReferenceId?: string;\n  /** The way resources to remediate are discovered. Defaults to ExistingNonCompliant if not specified. */\n  resourceDiscoveryMode?: ResourceDiscoveryMode;\n  /**\n   * The status of the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The time at which the remediation was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * The time at which the remediation was last updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdatedOn?: Date;\n  /** The filters that will be applied to determine which resources to remediate. */\n  filters?: RemediationFilters;\n  /**\n   * The deployment status summary for all deployments created by the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deploymentStatus?: RemediationDeploymentSummary;\n  /**\n   * The remediation status message. Provides additional details regarding the state of the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusMessage?: string;\n  /**\n   * The remediation correlation Id. Can be used to find events related to the remediation in the activity log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly correlationId?: string;\n  /** Determines the max number of resources that can be remediated by the remediation job. If not provided, the default resource count is used. */\n  resourceCount?: number;\n  /** Determines how many resources to remediate at any given time. Can be used to increase or reduce the pace of the remediation. If not provided, the default parallel deployments value is used. */\n  parallelDeployments?: number;\n  /** The remediation failure threshold settings */\n  failureThreshold?: RemediationPropertiesFailureThreshold;\n}\n\n/** The filters that will be applied to determine which resources to remediate. */\nexport interface RemediationFilters {\n  /** The resource locations that will be remediated. */\n  locations?: string[];\n}\n\n/** The deployment status summary for all deployments created by the remediation. */\nexport interface RemediationDeploymentSummary {\n  /**\n   * The number of deployments required by the remediation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalDeployments?: number;\n  /**\n   * The number of deployments required by the remediation that have succeeded.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly successfulDeployments?: number;\n  /**\n   * The number of deployments required by the remediation that have failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failedDeployments?: number;\n}\n\n/** The remediation failure threshold settings */\nexport interface RemediationPropertiesFailureThreshold {\n  /** A number between 0.0 to 1.0 representing the percentage failure threshold. The remediation will fail if the percentage of failed remediation operations (i.e. failed deployments) exceeds this threshold. */\n  percentage?: number;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** List of remediations. */\nexport interface RemediationListResult {\n  /**\n   * Array of remediation definitions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Remediation[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Query results. */\nexport interface PolicyEventsQueryResults {\n  /** OData context string; used by OData clients to resolve type information based on metadata. */\n  odataContext?: string;\n  /** OData entity count; represents the number of policy event records returned. */\n  odataCount?: number;\n  /** Odata next link; URL to get the next set of results. */\n  odataNextLink?: string;\n  /** Query results. */\n  value?: PolicyEvent[];\n}\n\n/** Policy event record. */\nexport interface PolicyEvent {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** OData entity ID; always set to null since policy event records do not have an entity ID. */\n  odataId?: string;\n  /** OData context string; used by OData clients to resolve type information based on metadata. */\n  odataContext?: string;\n  /** Timestamp for the policy event record. */\n  timestamp?: Date;\n  /** Resource ID. */\n  resourceId?: string;\n  /** Policy assignment ID. */\n  policyAssignmentId?: string;\n  /** Policy definition ID. */\n  policyDefinitionId?: string;\n  /** Effective parameters for the policy assignment. */\n  effectiveParameters?: string;\n  /** Flag which states whether the resource is compliant against the policy assignment it was evaluated against. */\n  isCompliant?: boolean;\n  /** Subscription ID. */\n  subscriptionId?: string;\n  /** Resource type. */\n  resourceType?: string;\n  /** Resource location. */\n  resourceLocation?: string;\n  /** Resource group name. */\n  resourceGroup?: string;\n  /** List of resource tags. */\n  resourceTags?: string;\n  /** Policy assignment name. */\n  policyAssignmentName?: string;\n  /** Policy assignment owner. */\n  policyAssignmentOwner?: string;\n  /** Policy assignment parameters. */\n  policyAssignmentParameters?: string;\n  /** Policy assignment scope. */\n  policyAssignmentScope?: string;\n  /** Policy definition name. */\n  policyDefinitionName?: string;\n  /** Policy definition action, i.e. effect. */\n  policyDefinitionAction?: string;\n  /** Policy definition category. */\n  policyDefinitionCategory?: string;\n  /** Policy set definition ID, if the policy assignment is for a policy set. */\n  policySetDefinitionId?: string;\n  /** Policy set definition name, if the policy assignment is for a policy set. */\n  policySetDefinitionName?: string;\n  /** Policy set definition owner, if the policy assignment is for a policy set. */\n  policySetDefinitionOwner?: string;\n  /** Policy set definition category, if the policy assignment is for a policy set. */\n  policySetDefinitionCategory?: string;\n  /** Policy set definition parameters, if the policy assignment is for a policy set. */\n  policySetDefinitionParameters?: string;\n  /** Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under. */\n  managementGroupIds?: string;\n  /** Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set. */\n  policyDefinitionReferenceId?: string;\n  /** Compliance state of the resource. */\n  complianceState?: string;\n  /** Tenant ID for the policy event record. */\n  tenantId?: string;\n  /** Principal object ID for the user who initiated the resource operation that triggered the policy event. */\n  principalOid?: string;\n  /** Components events records populated only when URL contains $expand=components clause. */\n  components?: ComponentEventDetails[];\n}\n\n/** Component event details. */\nexport interface ComponentEventDetails {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Component Id. */\n  id?: string;\n  /** Component type. */\n  type?: string;\n  /** Component name. */\n  name?: string;\n  /** Timestamp for component policy event record. */\n  timestamp?: Date;\n  /** Tenant ID for the policy event record. */\n  tenantId?: string;\n  /** Principal object ID for the user who initiated the resource component operation that triggered the policy event. */\n  principalOid?: string;\n  /** Policy definition action, i.e. effect. */\n  policyDefinitionAction?: string;\n}\n\n/** Query results. */\nexport interface PolicyStatesQueryResults {\n  /** OData context string; used by OData clients to resolve type information based on metadata. */\n  odataContext?: string;\n  /** OData entity count; represents the number of policy state records returned. */\n  odataCount?: number;\n  /** Odata next link; URL to get the next set of results. */\n  odataNextLink?: string;\n  /** Query results. */\n  value?: PolicyState[];\n}\n\n/** Policy state record. */\nexport interface PolicyState {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** OData entity ID; always set to null since policy state records do not have an entity ID. */\n  odataId?: string;\n  /** OData context string; used by OData clients to resolve type information based on metadata. */\n  odataContext?: string;\n  /** Timestamp for the policy state record. */\n  timestamp?: Date;\n  /** Resource ID. */\n  resourceId?: string;\n  /** Policy assignment ID. */\n  policyAssignmentId?: string;\n  /** Policy definition ID. */\n  policyDefinitionId?: string;\n  /** Effective parameters for the policy assignment. */\n  effectiveParameters?: string;\n  /** Flag which states whether the resource is compliant against the policy assignment it was evaluated against. This property is deprecated; please use ComplianceState instead. */\n  isCompliant?: boolean;\n  /** Subscription ID. */\n  subscriptionId?: string;\n  /** Resource type. */\n  resourceType?: string;\n  /** Resource location. */\n  resourceLocation?: string;\n  /** Resource group name. */\n  resourceGroup?: string;\n  /** List of resource tags. */\n  resourceTags?: string;\n  /** Policy assignment name. */\n  policyAssignmentName?: string;\n  /** Policy assignment owner. */\n  policyAssignmentOwner?: string;\n  /** Policy assignment parameters. */\n  policyAssignmentParameters?: string;\n  /** Policy assignment scope. */\n  policyAssignmentScope?: string;\n  /** Policy definition name. */\n  policyDefinitionName?: string;\n  /** Policy definition action, i.e. effect. */\n  policyDefinitionAction?: string;\n  /** Policy definition category. */\n  policyDefinitionCategory?: string;\n  /** Policy set definition ID, if the policy assignment is for a policy set. */\n  policySetDefinitionId?: string;\n  /** Policy set definition name, if the policy assignment is for a policy set. */\n  policySetDefinitionName?: string;\n  /** Policy set definition owner, if the policy assignment is for a policy set. */\n  policySetDefinitionOwner?: string;\n  /** Policy set definition category, if the policy assignment is for a policy set. */\n  policySetDefinitionCategory?: string;\n  /** Policy set definition parameters, if the policy assignment is for a policy set. */\n  policySetDefinitionParameters?: string;\n  /** Comma separated list of management group IDs, which represent the hierarchy of the management groups the resource is under. */\n  managementGroupIds?: string;\n  /** Reference ID for the policy definition inside the policy set, if the policy assignment is for a policy set. */\n  policyDefinitionReferenceId?: string;\n  /** Compliance state of the resource. */\n  complianceState?: string;\n  /** Policy evaluation details. */\n  policyEvaluationDetails?: PolicyEvaluationDetails;\n  /** Policy definition group names. */\n  policyDefinitionGroupNames?: string[];\n  /** Components state compliance records populated only when URL contains $expand=components clause. */\n  components?: ComponentStateDetails[];\n  /**\n   * Evaluated policy definition version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDefinitionVersion?: string;\n  /**\n   * Evaluated policy set definition version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policySetDefinitionVersion?: string;\n  /**\n   * Evaluated policy assignment version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyAssignmentVersion?: string;\n}\n\n/** Policy evaluation details. */\nexport interface PolicyEvaluationDetails {\n  /** Details of the evaluated expressions. */\n  evaluatedExpressions?: ExpressionEvaluationDetails[];\n  /** Evaluation details of IfNotExists effect. */\n  ifNotExistsDetails?: IfNotExistsEvaluationDetails;\n}\n\n/** Evaluation details of policy language expressions. */\nexport interface ExpressionEvaluationDetails {\n  /** Evaluation result. */\n  result?: string;\n  /** Expression evaluated. */\n  expression?: string;\n  /**\n   * The kind of expression that was evaluated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expressionKind?: string;\n  /** Property path if the expression is a field or an alias. */\n  path?: string;\n  /** Value of the expression. */\n  expressionValue?: Record<string, unknown>;\n  /** Target value to be compared with the expression value. */\n  targetValue?: Record<string, unknown>;\n  /** Operator to compare the expression value and the target value. */\n  operator?: string;\n}\n\n/** Evaluation details of IfNotExists effect. */\nexport interface IfNotExistsEvaluationDetails {\n  /** ID of the last evaluated resource for IfNotExists effect. */\n  resourceId?: string;\n  /** Total number of resources to which the existence condition is applicable. */\n  totalResources?: number;\n}\n\n/** Component state details. */\nexport interface ComponentStateDetails {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Component Id. */\n  id?: string;\n  /** Component type. */\n  type?: string;\n  /** Component name. */\n  name?: string;\n  /** Component compliance evaluation timestamp. */\n  timestamp?: Date;\n  /** Component compliance state. */\n  complianceState?: string;\n}\n\n/** Summarize action results. */\nexport interface SummarizeResults {\n  /** OData context string; used by OData clients to resolve type information based on metadata. */\n  odataContext?: string;\n  /** OData entity count; represents the number of summaries returned; always set to 1. */\n  odataCount?: number;\n  /** Summarize action results. */\n  value?: Summary[];\n}\n\n/** Summary results. */\nexport interface Summary {\n  /** OData entity ID; always set to null since summaries do not have an entity ID. */\n  odataId?: string;\n  /** OData context string; used by OData clients to resolve type information based on metadata. */\n  odataContext?: string;\n  /** Compliance summary for all policy assignments. */\n  results?: SummaryResults;\n  /** Policy assignments summary. */\n  policyAssignments?: PolicyAssignmentSummary[];\n}\n\n/** Compliance summary on a particular summary level. */\nexport interface SummaryResults {\n  /** HTTP POST URI for queryResults action on Microsoft.PolicyInsights to retrieve raw results for the compliance summary. This property will not be available by default in future API versions, but could be queried explicitly. */\n  queryResultsUri?: string;\n  /** Number of non-compliant resources. */\n  nonCompliantResources?: number;\n  /** Number of non-compliant policies. */\n  nonCompliantPolicies?: number;\n  /** The resources summary at this level. */\n  resourceDetails?: ComplianceDetail[];\n  /** The policy artifact summary at this level. For query scope level, it represents policy assignment summary. For policy assignment level, it represents policy definitions summary. */\n  policyDetails?: ComplianceDetail[];\n  /** The policy definition group summary at this level. */\n  policyGroupDetails?: ComplianceDetail[];\n}\n\n/** The compliance state rollup. */\nexport interface ComplianceDetail {\n  /** The compliance state. */\n  complianceState?: string;\n  /** Summarized count value for this compliance state. */\n  count?: number;\n}\n\n/** Policy assignment summary. */\nexport interface PolicyAssignmentSummary {\n  /** Policy assignment ID. */\n  policyAssignmentId?: string;\n  /** Policy set definition ID, if the policy assignment is for a policy set. */\n  policySetDefinitionId?: string;\n  /** Compliance summary for the policy assignment. */\n  results?: SummaryResults;\n  /** Policy definitions summary. */\n  policyDefinitions?: PolicyDefinitionSummary[];\n  /** Policy definition group summary. */\n  policyGroups?: PolicyGroupSummary[];\n}\n\n/** Policy definition summary. */\nexport interface PolicyDefinitionSummary {\n  /** Policy definition ID. */\n  policyDefinitionId?: string;\n  /** Policy definition reference ID. */\n  policyDefinitionReferenceId?: string;\n  /** Policy definition group names. */\n  policyDefinitionGroupNames?: string[];\n  /** Policy effect, i.e. policy definition action. */\n  effect?: string;\n  /** Compliance summary for the policy definition. */\n  results?: SummaryResults;\n}\n\n/** Policy definition group summary. */\nexport interface PolicyGroupSummary {\n  /** Policy group name. */\n  policyGroupName?: string;\n  /** Compliance summary for the policy definition group. */\n  results?: SummaryResults;\n}\n\n/** List of available operations. */\nexport interface OperationsListResults {\n  /** OData entity count; represents the number of operations returned. */\n  odataCount?: number;\n  /** List of available operations. */\n  value?: Operation[];\n}\n\n/** Operation definition. */\nexport interface Operation {\n  /** Operation name. */\n  name?: string;\n  /** Display metadata associated with the operation. */\n  display?: OperationDisplay;\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /** Resource provider name. */\n  provider?: string;\n  /** Resource name on which the operation is performed. */\n  resource?: string;\n  /** Operation name. */\n  operation?: string;\n  /** Operation description. */\n  description?: string;\n}\n\n/** Policy metadata resource definition. */\nexport interface PolicyMetadata {\n  /**\n   * The ID of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The type of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The name of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The policy metadata identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadataId?: string;\n  /**\n   * The category of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly category?: string;\n  /**\n   * The title of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly title?: string;\n  /**\n   * The owner of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly owner?: string;\n  /**\n   * Url for getting additional content about the resource metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalContentUrl?: string;\n  /**\n   * Additional metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: Record<string, unknown>;\n  /**\n   * The description of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The requirements of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requirements?: string;\n}\n\n/** The properties of the policy metadata, excluding properties containing large strings */\nexport interface PolicyMetadataSlimProperties {\n  /**\n   * The policy metadata identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadataId?: string;\n  /**\n   * The category of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly category?: string;\n  /**\n   * The title of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly title?: string;\n  /**\n   * The owner of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly owner?: string;\n  /**\n   * Url for getting additional content about the resource metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalContentUrl?: string;\n  /**\n   * Additional metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: Record<string, unknown>;\n}\n\n/** Error response. */\nexport interface ErrorResponseAutoGenerated {\n  /** The error details. */\n  error?: ErrorDefinitionAutoGenerated;\n}\n\n/** Error definition. */\nexport interface ErrorDefinitionAutoGenerated {\n  /**\n   * Service specific error code which serves as the substatus for the HTTP error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Description of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The target of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * Internal error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDefinitionAutoGenerated[];\n  /**\n   * Additional scenario specific error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: TypedErrorInfo[];\n}\n\n/** Collection of policy metadata resources. */\nexport interface PolicyMetadataCollection {\n  /**\n   * Array of policy metadata definitions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SlimPolicyMetadata[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Slim version of policy metadata resource definition, excluding properties with large strings */\nexport interface SlimPolicyMetadata {\n  /**\n   * The ID of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The type of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The name of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The policy metadata identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadataId?: string;\n  /**\n   * The category of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly category?: string;\n  /**\n   * The title of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly title?: string;\n  /**\n   * The owner of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly owner?: string;\n  /**\n   * Url for getting additional content about the resource metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalContentUrl?: string;\n  /**\n   * Additional metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metadata?: Record<string, unknown>;\n}\n\n/** The check policy restrictions parameters describing the resource that is being evaluated. */\nexport interface CheckRestrictionsRequest {\n  /** The information about the resource that will be evaluated. */\n  resourceDetails: CheckRestrictionsResourceDetails;\n  /** The list of fields and values that should be evaluated for potential restrictions. */\n  pendingFields?: PendingField[];\n}\n\n/** The information about the resource that will be evaluated. */\nexport interface CheckRestrictionsResourceDetails {\n  /** The resource content. This should include whatever properties are already known and can be a partial set of all resource properties. */\n  resourceContent: Record<string, unknown>;\n  /** The api-version of the resource content. */\n  apiVersion?: string;\n  /** The scope where the resource is being created. For example, if the resource is a child resource this would be the parent resource's resource ID. */\n  scope?: string;\n}\n\n/** A field that should be evaluated against Azure Policy to determine restrictions. */\nexport interface PendingField {\n  /** The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias. */\n  field: string;\n  /** The list of potential values for the field that should be evaluated against Azure Policy. */\n  values?: string[];\n}\n\n/** The result of a check policy restrictions evaluation on a resource. */\nexport interface CheckRestrictionsResult {\n  /**\n   * The restrictions that will be placed on various fields in the resource by policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fieldRestrictions?: FieldRestrictions[];\n  /**\n   * Evaluation results for the provided partial resource content.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly contentEvaluationResult?: CheckRestrictionsResultContentEvaluationResult;\n}\n\n/** The restrictions that will be placed on a field in the resource by policy. */\nexport interface FieldRestrictions {\n  /**\n   * The name of the field. This can be a top-level property like 'name' or 'type' or an Azure Policy field alias.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly field?: string;\n  /** The restrictions placed on that field by policy. */\n  restrictions?: FieldRestriction[];\n}\n\n/** The restrictions on a field imposed by a specific policy. */\nexport interface FieldRestriction {\n  /**\n   * The type of restriction that is imposed on the field.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly result?: FieldRestrictionResult;\n  /**\n   * The value that policy will set for the field if the user does not provide a value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultValue?: string;\n  /**\n   * The values that policy either requires or denies for the field.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly values?: string[];\n  /**\n   * The details of the policy that is causing the field restriction.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policy?: PolicyReference;\n}\n\n/** Resource identifiers for a policy. */\nexport interface PolicyReference {\n  /**\n   * The resource identifier of the policy definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDefinitionId?: string;\n  /**\n   * The resource identifier of the policy set definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policySetDefinitionId?: string;\n  /**\n   * The reference identifier of a specific policy definition within a policy set definition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyDefinitionReferenceId?: string;\n  /**\n   * The resource identifier of the policy assignment.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyAssignmentId?: string;\n}\n\n/** Evaluation results for the provided partial resource content. */\nexport interface CheckRestrictionsResultContentEvaluationResult {\n  /** Policy evaluation results against the given resource content. This will indicate if the partial content that was provided will be denied as-is. */\n  policyEvaluations?: PolicyEvaluationResult[];\n}\n\n/** The result of a non-compliant policy evaluation against the given resource content. */\nexport interface PolicyEvaluationResult {\n  /**\n   * The details of the policy that was evaluated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyInfo?: PolicyReference;\n  /**\n   * The result of the policy evaluation against the resource. This will typically be 'NonCompliant' but may contain other values if errors were encountered.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly evaluationResult?: string;\n  /**\n   * The detailed results of the policy expressions and values that were evaluated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly evaluationDetails?: PolicyEvaluationDetails;\n}\n\n/** List of attestations. */\nexport interface AttestationListResult {\n  /**\n   * Array of attestation definitions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Attestation[];\n  /**\n   * The URL to get the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A piece of evidence supporting the compliance state set in the attestation. */\nexport interface AttestationEvidence {\n  /** The description for this piece of evidence. */\n  description?: string;\n  /** The URI location of the evidence. */\n  sourceUri?: string;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Error response. */\nexport interface ErrorResponseAutoGenerated2 {\n  /** The error details. */\n  error?: ErrorDefinitionAutoGenerated2;\n}\n\n/** Error definition. */\nexport interface ErrorDefinitionAutoGenerated2 {\n  /**\n   * Service specific error code which serves as the substatus for the HTTP error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Description of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The target of the error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * Internal error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDefinitionAutoGenerated2[];\n  /**\n   * Additional scenario specific error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: TypedErrorInfo[];\n}\n\n/** The properties of the policy metadata. */\nexport type PolicyMetadataProperties = PolicyMetadataSlimProperties & {\n  /**\n   * The description of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * The requirements of the policy metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requirements?: string;\n};\n\n/** An attestation resource. */\nexport type Attestation = Resource & {\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The resource ID of the policy assignment that the attestation is setting the state for. */\n  policyAssignmentId: string;\n  /** The policy definition reference ID from a policy set definition that the attestation is setting the state for. If the policy assignment assigns a policy set definition the attestation can choose a definition within the set definition with this property or omit this and set the state for the entire set definition. */\n  policyDefinitionReferenceId?: string;\n  /** The compliance state that should be set on the resource. */\n  complianceState?: ComplianceState;\n  /** The time the compliance state should expire. */\n  expiresOn?: Date;\n  /** The person responsible for setting the state of the resource. This value is typically an Azure Active Directory object ID. */\n  owner?: string;\n  /** Comments describing why this attestation was created. */\n  comments?: string;\n  /** The evidence supporting the compliance state set in this attestation. */\n  evidence?: AttestationEvidence[];\n  /**\n   * The status of the attestation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /**\n   * The time the compliance state was last changed in this attestation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastComplianceStateChangeAt?: Date;\n};\n\n/** Parameter group */\nexport interface QueryOptions {\n  /** Maximum number of records to return. */\n  top?: number;\n  /** OData filter expression. */\n  filter?: string;\n  /** Ordering expression using OData notation. One or more comma-separated column names with an optional \"desc\" (the default) or \"asc\", e.g. \"$orderby=PolicyAssignmentId, ResourceId asc\". */\n  orderBy?: string;\n  /** Select expression using OData notation. Limits the columns on each record to just those requested, e.g. \"$select=PolicyAssignmentId, ResourceId\". */\n  select?: string;\n  /** ISO 8601 formatted timestamp specifying the start time of the interval to query. When not specified, the service uses ($to - 1-day). */\n  from?: Date;\n  /** ISO 8601 formatted timestamp specifying the end time of the interval to query. When not specified, the service uses request time. */\n  to?: Date;\n  /** OData apply expression for aggregations. */\n  apply?: string;\n  /** Skiptoken is only provided if a previous response returned a partial result as a part of nextLink element. */\n  skipToken?: string;\n  /** The $expand query parameter. For example, to expand components use $expand=components */\n  expand?: string;\n}\n\n/** Known values of {@link ResourceDiscoveryMode} that the service accepts. */\nexport enum KnownResourceDiscoveryMode {\n  /** Remediate resources that are already known to be non-compliant. */\n  ExistingNonCompliant = \"ExistingNonCompliant\",\n  /** Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant. */\n  ReEvaluateCompliance = \"ReEvaluateCompliance\"\n}\n\n/**\n * Defines values for ResourceDiscoveryMode. \\\n * {@link KnownResourceDiscoveryMode} can be used interchangeably with ResourceDiscoveryMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ExistingNonCompliant**: Remediate resources that are already known to be non-compliant. \\\n * **ReEvaluateCompliance**: Re-evaluate the compliance state of resources and then remediate the resources found to be non-compliant.\n */\nexport type ResourceDiscoveryMode = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  User = \"User\",\n  Application = \"Application\",\n  ManagedIdentity = \"ManagedIdentity\",\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link PolicyStatesResource} that the service accepts. */\nexport enum KnownPolicyStatesResource {\n  Default = \"default\",\n  Latest = \"latest\"\n}\n\n/**\n * Defines values for PolicyStatesResource. \\\n * {@link KnownPolicyStatesResource} can be used interchangeably with PolicyStatesResource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default** \\\n * **latest**\n */\nexport type PolicyStatesResource = string;\n\n/** Known values of {@link FieldRestrictionResult} that the service accepts. */\nexport enum KnownFieldRestrictionResult {\n  /** The field and/or values are required by policy. */\n  Required = \"Required\",\n  /** The field will be removed by policy. */\n  Removed = \"Removed\",\n  /** The field and/or values will be denied by policy. */\n  Deny = \"Deny\"\n}\n\n/**\n * Defines values for FieldRestrictionResult. \\\n * {@link KnownFieldRestrictionResult} can be used interchangeably with FieldRestrictionResult,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Required**: The field and\\/or values are required by policy. \\\n * **Removed**: The field will be removed by policy. \\\n * **Deny**: The field and\\/or values will be denied by policy.\n */\nexport type FieldRestrictionResult = string;\n\n/** Known values of {@link ComplianceState} that the service accepts. */\nexport enum KnownComplianceState {\n  /** The resource is in compliance with the policy. */\n  Compliant = \"Compliant\",\n  /** The resource is not in compliance with the policy. */\n  NonCompliant = \"NonCompliant\",\n  /** The compliance state of the resource is not known. */\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for ComplianceState. \\\n * {@link KnownComplianceState} can be used interchangeably with ComplianceState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Compliant**: The resource is in compliance with the policy. \\\n * **NonCompliant**: The resource is not in compliance with the policy. \\\n * **Unknown**: The compliance state of the resource is not known.\n */\nexport type ComplianceState = string;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForManagementGroup operation. */\nexport type PolicyTrackedResourcesListQueryResultsForManagementGroupResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscription operation. */\nexport type PolicyTrackedResourcesListQueryResultsForSubscriptionResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroup operation. */\nexport type PolicyTrackedResourcesListQueryResultsForResourceGroupResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResource operation. */\nexport type PolicyTrackedResourcesListQueryResultsForResourceResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForManagementGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForManagementGroupNext operation. */\nexport type PolicyTrackedResourcesListQueryResultsForManagementGroupNextResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionNext operation. */\nexport type PolicyTrackedResourcesListQueryResultsForSubscriptionNextResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupNext operation. */\nexport type PolicyTrackedResourcesListQueryResultsForResourceGroupNextResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyTrackedResourcesListQueryResultsForResourceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceNext operation. */\nexport type PolicyTrackedResourcesListQueryResultsForResourceNextResponse = PolicyTrackedResourcesQueryResults;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtManagementGroup operation. */\nexport type RemediationsListDeploymentsAtManagementGroupResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCancelAtManagementGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the cancelAtManagementGroup operation. */\nexport type RemediationsCancelAtManagementGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListForManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForManagementGroup operation. */\nexport type RemediationsListForManagementGroupResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCreateOrUpdateAtManagementGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAtManagementGroup operation. */\nexport type RemediationsCreateOrUpdateAtManagementGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsGetAtManagementGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtManagementGroup operation. */\nexport type RemediationsGetAtManagementGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsDeleteAtManagementGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteAtManagementGroup operation. */\nexport type RemediationsDeleteAtManagementGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtSubscription operation. */\nexport type RemediationsListDeploymentsAtSubscriptionResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCancelAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the cancelAtSubscription operation. */\nexport type RemediationsCancelAtSubscriptionResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForSubscription operation. */\nexport type RemediationsListForSubscriptionResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCreateOrUpdateAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAtSubscription operation. */\nexport type RemediationsCreateOrUpdateAtSubscriptionResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsGetAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscription operation. */\nexport type RemediationsGetAtSubscriptionResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsDeleteAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteAtSubscription operation. */\nexport type RemediationsDeleteAtSubscriptionResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtResourceGroup operation. */\nexport type RemediationsListDeploymentsAtResourceGroupResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCancelAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the cancelAtResourceGroup operation. */\nexport type RemediationsCancelAtResourceGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResourceGroup operation. */\nexport type RemediationsListForResourceGroupResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCreateOrUpdateAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAtResourceGroup operation. */\nexport type RemediationsCreateOrUpdateAtResourceGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsGetAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtResourceGroup operation. */\nexport type RemediationsGetAtResourceGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsDeleteAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteAtResourceGroup operation. */\nexport type RemediationsDeleteAtResourceGroupResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtResource operation. */\nexport type RemediationsListDeploymentsAtResourceResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCancelAtResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the cancelAtResource operation. */\nexport type RemediationsCancelAtResourceResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResource operation. */\nexport type RemediationsListForResourceResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsCreateOrUpdateAtResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateAtResource operation. */\nexport type RemediationsCreateOrUpdateAtResourceResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsGetAtResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtResource operation. */\nexport type RemediationsGetAtResourceResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsDeleteAtResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteAtResource operation. */\nexport type RemediationsDeleteAtResourceResponse = Remediation;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtManagementGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtManagementGroupNext operation. */\nexport type RemediationsListDeploymentsAtManagementGroupNextResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListForManagementGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForManagementGroupNext operation. */\nexport type RemediationsListForManagementGroupNextResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtSubscriptionNext operation. */\nexport type RemediationsListDeploymentsAtSubscriptionNextResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListForSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForSubscriptionNext operation. */\nexport type RemediationsListForSubscriptionNextResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtResourceGroupNext operation. */\nexport type RemediationsListDeploymentsAtResourceGroupNextResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResourceGroupNext operation. */\nexport type RemediationsListForResourceGroupNextResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListDeploymentsAtResourceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listDeploymentsAtResourceNext operation. */\nexport type RemediationsListDeploymentsAtResourceNextResponse = RemediationDeploymentsListResult;\n\n/** Optional parameters. */\nexport interface RemediationsListForResourceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResourceNext operation. */\nexport type RemediationsListForResourceNextResponse = RemediationListResult;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForManagementGroup operation. */\nexport type PolicyEventsListQueryResultsForManagementGroupResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscription operation. */\nexport type PolicyEventsListQueryResultsForSubscriptionResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroup operation. */\nexport type PolicyEventsListQueryResultsForResourceGroupResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResource operation. */\nexport type PolicyEventsListQueryResultsForResourceResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicySetDefinition operation. */\nexport type PolicyEventsListQueryResultsForPolicySetDefinitionResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicyDefinition operation. */\nexport type PolicyEventsListQueryResultsForPolicyDefinitionResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation. */\nexport type PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation. */\nexport type PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForManagementGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForManagementGroupNext operation. */\nexport type PolicyEventsListQueryResultsForManagementGroupNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionNext operation. */\nexport type PolicyEventsListQueryResultsForSubscriptionNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupNext operation. */\nexport type PolicyEventsListQueryResultsForResourceGroupNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForResourceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceNext operation. */\nexport type PolicyEventsListQueryResultsForResourceNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForPolicySetDefinitionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicySetDefinitionNext operation. */\nexport type PolicyEventsListQueryResultsForPolicySetDefinitionNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForPolicyDefinitionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicyDefinitionNext operation. */\nexport type PolicyEventsListQueryResultsForPolicyDefinitionNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignmentNext operation. */\nexport type PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignmentNext operation. */\nexport type PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse = PolicyEventsQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForManagementGroup operation. */\nexport type PolicyStatesListQueryResultsForManagementGroupResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForManagementGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForManagementGroup operation. */\nexport type PolicyStatesSummarizeForManagementGroupResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscription operation. */\nexport type PolicyStatesListQueryResultsForSubscriptionResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForSubscription operation. */\nexport type PolicyStatesSummarizeForSubscriptionResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroup operation. */\nexport type PolicyStatesListQueryResultsForResourceGroupResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForResourceGroup operation. */\nexport type PolicyStatesSummarizeForResourceGroupResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResource operation. */\nexport type PolicyStatesListQueryResultsForResourceResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForResource operation. */\nexport type PolicyStatesSummarizeForResourceResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesTriggerSubscriptionEvaluationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PolicyStatesTriggerResourceGroupEvaluationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicySetDefinition operation. */\nexport type PolicyStatesListQueryResultsForPolicySetDefinitionResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForPolicySetDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForPolicySetDefinition operation. */\nexport type PolicyStatesSummarizeForPolicySetDefinitionResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicyDefinition operation. */\nexport type PolicyStatesListQueryResultsForPolicyDefinitionResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForPolicyDefinitionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForPolicyDefinition operation. */\nexport type PolicyStatesSummarizeForPolicyDefinitionResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignment operation. */\nexport type PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForSubscriptionLevelPolicyAssignment operation. */\nexport type PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignment operation. */\nexport type PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the summarizeForResourceGroupLevelPolicyAssignment operation. */\nexport type PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentResponse = SummarizeResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForManagementGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForManagementGroupNext operation. */\nexport type PolicyStatesListQueryResultsForManagementGroupNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionNext operation. */\nexport type PolicyStatesListQueryResultsForSubscriptionNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupNext operation. */\nexport type PolicyStatesListQueryResultsForResourceGroupNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForResourceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceNext operation. */\nexport type PolicyStatesListQueryResultsForResourceNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForPolicySetDefinitionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicySetDefinitionNext operation. */\nexport type PolicyStatesListQueryResultsForPolicySetDefinitionNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForPolicyDefinitionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForPolicyDefinitionNext operation. */\nexport type PolicyStatesListQueryResultsForPolicyDefinitionNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForSubscriptionLevelPolicyAssignmentNext operation. */\nexport type PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listQueryResultsForResourceGroupLevelPolicyAssignmentNext operation. */\nexport type PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse = PolicyStatesQueryResults;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationsListResults;\n\n/** Optional parameters. */\nexport interface PolicyMetadataGetResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getResource operation. */\nexport type PolicyMetadataGetResourceResponse = PolicyMetadata;\n\n/** Optional parameters. */\nexport interface PolicyMetadataListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the list operation. */\nexport type PolicyMetadataListResponse = PolicyMetadataCollection;\n\n/** Optional parameters. */\nexport interface PolicyMetadataListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listNext operation. */\nexport type PolicyMetadataListNextResponse = PolicyMetadataCollection;\n\n/** Optional parameters. */\nexport interface PolicyRestrictionsCheckAtSubscriptionScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkAtSubscriptionScope operation. */\nexport type PolicyRestrictionsCheckAtSubscriptionScopeResponse = CheckRestrictionsResult;\n\n/** Optional parameters. */\nexport interface PolicyRestrictionsCheckAtResourceGroupScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkAtResourceGroupScope operation. */\nexport type PolicyRestrictionsCheckAtResourceGroupScopeResponse = CheckRestrictionsResult;\n\n/** Optional parameters. */\nexport interface AttestationsListForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForSubscription operation. */\nexport type AttestationsListForSubscriptionResponse = AttestationListResult;\n\n/** Optional parameters. */\nexport interface AttestationsCreateOrUpdateAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtSubscription operation. */\nexport type AttestationsCreateOrUpdateAtSubscriptionResponse = Attestation;\n\n/** Optional parameters. */\nexport interface AttestationsGetAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtSubscription operation. */\nexport type AttestationsGetAtSubscriptionResponse = Attestation;\n\n/** Optional parameters. */\nexport interface AttestationsDeleteAtSubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface AttestationsListForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResourceGroup operation. */\nexport type AttestationsListForResourceGroupResponse = AttestationListResult;\n\n/** Optional parameters. */\nexport interface AttestationsCreateOrUpdateAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtResourceGroup operation. */\nexport type AttestationsCreateOrUpdateAtResourceGroupResponse = Attestation;\n\n/** Optional parameters. */\nexport interface AttestationsGetAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtResourceGroup operation. */\nexport type AttestationsGetAtResourceGroupResponse = Attestation;\n\n/** Optional parameters. */\nexport interface AttestationsDeleteAtResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface AttestationsListForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResource operation. */\nexport type AttestationsListForResourceResponse = AttestationListResult;\n\n/** Optional parameters. */\nexport interface AttestationsCreateOrUpdateAtResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdateAtResource operation. */\nexport type AttestationsCreateOrUpdateAtResourceResponse = Attestation;\n\n/** Optional parameters. */\nexport interface AttestationsGetAtResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAtResource operation. */\nexport type AttestationsGetAtResourceResponse = Attestation;\n\n/** Optional parameters. */\nexport interface AttestationsDeleteAtResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface AttestationsListForSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForSubscriptionNext operation. */\nexport type AttestationsListForSubscriptionNextResponse = AttestationListResult;\n\n/** Optional parameters. */\nexport interface AttestationsListForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResourceGroupNext operation. */\nexport type AttestationsListForResourceGroupNextResponse = AttestationListResult;\n\n/** Optional parameters. */\nexport interface AttestationsListForResourceNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameter group */\n  queryOptions?: QueryOptions;\n}\n\n/** Contains response data for the listForResourceNext operation. */\nexport type AttestationsListForResourceNextResponse = AttestationListResult;\n\n/** Optional parameters. */\nexport interface PolicyInsightsClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const PolicyTrackedResourcesQueryResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyTrackedResourcesQueryResults\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyTrackedResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyTrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyTrackedResource\",\n    modelProperties: {\n      trackedResourceId: {\n        serializedName: \"trackedResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDetails: {\n        serializedName: \"policyDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyDetails\"\n        }\n      },\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"Composite\",\n          className: \"TrackedResourceModificationDetails\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"Composite\",\n          className: \"TrackedResourceModificationDetails\"\n        }\n      },\n      lastUpdateUtc: {\n        serializedName: \"lastUpdateUtc\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyDetails\",\n    modelProperties: {\n      policyDefinitionId: {\n        serializedName: \"policyDefinitionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentId: {\n        serializedName: \"policyAssignmentId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentDisplayName: {\n        serializedName: \"policyAssignmentDisplayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentScope: {\n        serializedName: \"policyAssignmentScope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionId: {\n        serializedName: \"policySetDefinitionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"policyDefinitionReferenceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResourceModificationDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResourceModificationDetails\",\n    modelProperties: {\n      policyDetails: {\n        serializedName: \"policyDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyDetails\"\n        }\n      },\n      deploymentId: {\n        serializedName: \"deploymentId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentTime: {\n        serializedName: \"deploymentTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryFailure: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryFailure\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryFailureError\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryFailureError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryFailureError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemediationDeploymentsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemediationDeploymentsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RemediationDeployment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemediationDeployment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemediationDeployment\",\n    modelProperties: {\n      remediatedResourceId: {\n        serializedName: \"remediatedResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deploymentId: {\n        serializedName: \"deploymentId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"resourceLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDefinition\"\n        }\n      },\n      createdOn: {\n        serializedName: \"createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdatedOn: {\n        serializedName: \"lastUpdatedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDefinition\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDefinition\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TypedErrorInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TypedErrorInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TypedErrorInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDefinition\"\n        }\n      }\n    }\n  }\n};\n\nexport const Remediation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Remediation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      policyAssignmentId: {\n        serializedName: \"properties.policyAssignmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"properties.policyDefinitionReferenceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceDiscoveryMode: {\n        serializedName: \"properties.resourceDiscoveryMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdatedOn: {\n        serializedName: \"properties.lastUpdatedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      filters: {\n        serializedName: \"properties.filters\",\n        type: {\n          name: \"Composite\",\n          className: \"RemediationFilters\"\n        }\n      },\n      deploymentStatus: {\n        serializedName: \"properties.deploymentStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"RemediationDeploymentSummary\"\n        }\n      },\n      statusMessage: {\n        serializedName: \"properties.statusMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      correlationId: {\n        serializedName: \"properties.correlationId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceCount: {\n        serializedName: \"properties.resourceCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      parallelDeployments: {\n        serializedName: \"properties.parallelDeployments\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      failureThreshold: {\n        serializedName: \"properties.failureThreshold\",\n        type: {\n          name: \"Composite\",\n          className: \"RemediationPropertiesFailureThreshold\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemediationFilters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemediationFilters\",\n    modelProperties: {\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RemediationDeploymentSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemediationDeploymentSummary\",\n    modelProperties: {\n      totalDeployments: {\n        serializedName: \"totalDeployments\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      successfulDeployments: {\n        serializedName: \"successfulDeployments\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      failedDeployments: {\n        serializedName: \"failedDeployments\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemediationPropertiesFailureThreshold: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemediationPropertiesFailureThreshold\",\n    modelProperties: {\n      percentage: {\n        serializedName: \"percentage\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemediationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemediationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Remediation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyEventsQueryResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyEventsQueryResults\",\n    modelProperties: {\n      odataContext: {\n        serializedName: \"@odata\\\\.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      odataCount: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"@odata\\\\.count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      odataNextLink: {\n        serializedName: \"@odata\\\\.nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyEvent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyEvent\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      odataId: {\n        serializedName: \"@odata\\\\.id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      odataContext: {\n        serializedName: \"@odata\\\\.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentId: {\n        serializedName: \"policyAssignmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionId: {\n        serializedName: \"policyDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveParameters: {\n        serializedName: \"effectiveParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCompliant: {\n        serializedName: \"isCompliant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"resourceLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTags: {\n        serializedName: \"resourceTags\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentName: {\n        serializedName: \"policyAssignmentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentOwner: {\n        serializedName: \"policyAssignmentOwner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentParameters: {\n        serializedName: \"policyAssignmentParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentScope: {\n        serializedName: \"policyAssignmentScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionName: {\n        serializedName: \"policyDefinitionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionAction: {\n        serializedName: \"policyDefinitionAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionCategory: {\n        serializedName: \"policyDefinitionCategory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionId: {\n        serializedName: \"policySetDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionName: {\n        serializedName: \"policySetDefinitionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionOwner: {\n        serializedName: \"policySetDefinitionOwner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionCategory: {\n        serializedName: \"policySetDefinitionCategory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionParameters: {\n        serializedName: \"policySetDefinitionParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managementGroupIds: {\n        serializedName: \"managementGroupIds\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"policyDefinitionReferenceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      complianceState: {\n        serializedName: \"complianceState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalOid: {\n        serializedName: \"principalOid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      components: {\n        serializedName: \"components\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComponentEventDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentEventDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentEventDetails\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalOid: {\n        serializedName: \"principalOid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionAction: {\n        serializedName: \"policyDefinitionAction\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyStatesQueryResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyStatesQueryResults\",\n    modelProperties: {\n      odataContext: {\n        serializedName: \"@odata\\\\.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      odataCount: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"@odata\\\\.count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      odataNextLink: {\n        serializedName: \"@odata\\\\.nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyState\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyState\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      odataId: {\n        serializedName: \"@odata\\\\.id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      odataContext: {\n        serializedName: \"@odata\\\\.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentId: {\n        serializedName: \"policyAssignmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionId: {\n        serializedName: \"policyDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveParameters: {\n        serializedName: \"effectiveParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isCompliant: {\n        serializedName: \"isCompliant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceLocation: {\n        serializedName: \"resourceLocation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceGroup: {\n        serializedName: \"resourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTags: {\n        serializedName: \"resourceTags\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentName: {\n        serializedName: \"policyAssignmentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentOwner: {\n        serializedName: \"policyAssignmentOwner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentParameters: {\n        serializedName: \"policyAssignmentParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentScope: {\n        serializedName: \"policyAssignmentScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionName: {\n        serializedName: \"policyDefinitionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionAction: {\n        serializedName: \"policyDefinitionAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionCategory: {\n        serializedName: \"policyDefinitionCategory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionId: {\n        serializedName: \"policySetDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionName: {\n        serializedName: \"policySetDefinitionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionOwner: {\n        serializedName: \"policySetDefinitionOwner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionCategory: {\n        serializedName: \"policySetDefinitionCategory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionParameters: {\n        serializedName: \"policySetDefinitionParameters\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managementGroupIds: {\n        serializedName: \"managementGroupIds\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"policyDefinitionReferenceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      complianceState: {\n        serializedName: \"complianceState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyEvaluationDetails: {\n        serializedName: \"policyEvaluationDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyEvaluationDetails\"\n        }\n      },\n      policyDefinitionGroupNames: {\n        serializedName: \"policyDefinitionGroupNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      components: {\n        serializedName: \"components\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComponentStateDetails\"\n            }\n          }\n        }\n      },\n      policyDefinitionVersion: {\n        serializedName: \"policyDefinitionVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionVersion: {\n        serializedName: \"policySetDefinitionVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentVersion: {\n        serializedName: \"policyAssignmentVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyEvaluationDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyEvaluationDetails\",\n    modelProperties: {\n      evaluatedExpressions: {\n        serializedName: \"evaluatedExpressions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExpressionEvaluationDetails\"\n            }\n          }\n        }\n      },\n      ifNotExistsDetails: {\n        serializedName: \"ifNotExistsDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"IfNotExistsEvaluationDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpressionEvaluationDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpressionEvaluationDetails\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expression: {\n        serializedName: \"expression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expressionKind: {\n        serializedName: \"expressionKind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expressionValue: {\n        serializedName: \"expressionValue\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      targetValue: {\n        serializedName: \"targetValue\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      operator: {\n        serializedName: \"operator\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IfNotExistsEvaluationDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IfNotExistsEvaluationDetails\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalResources: {\n        serializedName: \"totalResources\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentStateDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComponentStateDetails\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      complianceState: {\n        serializedName: \"complianceState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SummarizeResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SummarizeResults\",\n    modelProperties: {\n      odataContext: {\n        serializedName: \"@odata\\\\.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      odataCount: {\n        constraints: {\n          InclusiveMaximum: 1,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"@odata\\\\.count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Summary\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Summary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Summary\",\n    modelProperties: {\n      odataId: {\n        serializedName: \"@odata\\\\.id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      odataContext: {\n        serializedName: \"@odata\\\\.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Composite\",\n          className: \"SummaryResults\"\n        }\n      },\n      policyAssignments: {\n        serializedName: \"policyAssignments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyAssignmentSummary\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SummaryResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SummaryResults\",\n    modelProperties: {\n      queryResultsUri: {\n        serializedName: \"queryResultsUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonCompliantResources: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"nonCompliantResources\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nonCompliantPolicies: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"nonCompliantPolicies\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      resourceDetails: {\n        serializedName: \"resourceDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComplianceDetail\"\n            }\n          }\n        }\n      },\n      policyDetails: {\n        serializedName: \"policyDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComplianceDetail\"\n            }\n          }\n        }\n      },\n      policyGroupDetails: {\n        serializedName: \"policyGroupDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ComplianceDetail\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ComplianceDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ComplianceDetail\",\n    modelProperties: {\n      complianceState: {\n        serializedName: \"complianceState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      count: {\n        serializedName: \"count\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyAssignmentSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyAssignmentSummary\",\n    modelProperties: {\n      policyAssignmentId: {\n        serializedName: \"policyAssignmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionId: {\n        serializedName: \"policySetDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Composite\",\n          className: \"SummaryResults\"\n        }\n      },\n      policyDefinitions: {\n        serializedName: \"policyDefinitions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyDefinitionSummary\"\n            }\n          }\n        }\n      },\n      policyGroups: {\n        serializedName: \"policyGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyGroupSummary\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyDefinitionSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyDefinitionSummary\",\n    modelProperties: {\n      policyDefinitionId: {\n        serializedName: \"policyDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"policyDefinitionReferenceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionGroupNames: {\n        serializedName: \"policyDefinitionGroupNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      effect: {\n        serializedName: \"effect\",\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Composite\",\n          className: \"SummaryResults\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyGroupSummary: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyGroupSummary\",\n    modelProperties: {\n      policyGroupName: {\n        serializedName: \"policyGroupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      results: {\n        serializedName: \"results\",\n        type: {\n          name: \"Composite\",\n          className: \"SummaryResults\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationsListResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationsListResults\",\n    modelProperties: {\n      odataCount: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"@odata\\\\.count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyMetadata\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadataId: {\n        serializedName: \"properties.metadataId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"properties.category\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"properties.title\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"properties.owner\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalContentUrl: {\n        serializedName: \"properties.additionalContentUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requirements: {\n        serializedName: \"properties.requirements\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyMetadataSlimProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyMetadataSlimProperties\",\n    modelProperties: {\n      metadataId: {\n        serializedName: \"metadataId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"title\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"owner\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalContentUrl: {\n        serializedName: \"additionalContentUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseAutoGenerated\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDefinitionAutoGenerated\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDefinitionAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDefinitionAutoGenerated\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDefinitionAutoGenerated\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TypedErrorInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyMetadataCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyMetadataCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SlimPolicyMetadata\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SlimPolicyMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SlimPolicyMetadata\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadataId: {\n        serializedName: \"properties.metadataId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"properties.category\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      title: {\n        serializedName: \"properties.title\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"properties.owner\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalContentUrl: {\n        serializedName: \"properties.additionalContentUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CheckRestrictionsRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckRestrictionsRequest\",\n    modelProperties: {\n      resourceDetails: {\n        serializedName: \"resourceDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"CheckRestrictionsResourceDetails\"\n        }\n      },\n      pendingFields: {\n        serializedName: \"pendingFields\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PendingField\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CheckRestrictionsResourceDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckRestrictionsResourceDetails\",\n    modelProperties: {\n      resourceContent: {\n        serializedName: \"resourceContent\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      apiVersion: {\n        serializedName: \"apiVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PendingField: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PendingField\",\n    modelProperties: {\n      field: {\n        serializedName: \"field\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CheckRestrictionsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckRestrictionsResult\",\n    modelProperties: {\n      fieldRestrictions: {\n        serializedName: \"fieldRestrictions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FieldRestrictions\"\n            }\n          }\n        }\n      },\n      contentEvaluationResult: {\n        serializedName: \"contentEvaluationResult\",\n        type: {\n          name: \"Composite\",\n          className: \"CheckRestrictionsResultContentEvaluationResult\"\n        }\n      }\n    }\n  }\n};\n\nexport const FieldRestrictions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FieldRestrictions\",\n    modelProperties: {\n      field: {\n        serializedName: \"field\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FieldRestriction\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FieldRestriction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FieldRestriction\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultValue: {\n        serializedName: \"defaultValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      policy: {\n        serializedName: \"policy\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyReference\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyReference\",\n    modelProperties: {\n      policyDefinitionId: {\n        serializedName: \"policyDefinitionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policySetDefinitionId: {\n        serializedName: \"policySetDefinitionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"policyDefinitionReferenceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyAssignmentId: {\n        serializedName: \"policyAssignmentId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckRestrictionsResultContentEvaluationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckRestrictionsResultContentEvaluationResult\",\n    modelProperties: {\n      policyEvaluations: {\n        serializedName: \"policyEvaluations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PolicyEvaluationResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyEvaluationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyEvaluationResult\",\n    modelProperties: {\n      policyInfo: {\n        serializedName: \"policyInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyReference\"\n        }\n      },\n      evaluationResult: {\n        serializedName: \"evaluationResult\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      evaluationDetails: {\n        serializedName: \"evaluationDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyEvaluationDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttestationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttestationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Attestation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttestationEvidence: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttestationEvidence\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceUri: {\n        serializedName: \"sourceUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseAutoGenerated2: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseAutoGenerated2\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDefinitionAutoGenerated2\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDefinitionAutoGenerated2: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDefinitionAutoGenerated2\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDefinitionAutoGenerated2\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TypedErrorInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyMetadataProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyMetadataProperties\",\n    modelProperties: {\n      ...PolicyMetadataSlimProperties.type.modelProperties,\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requirements: {\n        serializedName: \"requirements\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Attestation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Attestation\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      policyAssignmentId: {\n        serializedName: \"properties.policyAssignmentId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      policyDefinitionReferenceId: {\n        serializedName: \"properties.policyDefinitionReferenceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      complianceState: {\n        serializedName: \"properties.complianceState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"properties.expiresOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      owner: {\n        serializedName: \"properties.owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      comments: {\n        serializedName: \"properties.comments\",\n        type: {\n          name: \"String\"\n        }\n      },\n      evidence: {\n        serializedName: \"properties.evidence\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AttestationEvidence\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastComplianceStateChangeAt: {\n        serializedName: \"properties.lastComplianceStateChangeAt\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  Remediation as RemediationMapper,\n  CheckRestrictionsRequest as CheckRestrictionsRequestMapper,\n  Attestation as AttestationMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const managementGroupsNamespace: OperationURLParameter = {\n  parameterPath: \"managementGroupsNamespace\",\n  mapper: {\n    defaultValue: \"Microsoft.Management\",\n    isConstant: true,\n    serializedName: \"managementGroupsNamespace\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const managementGroupName: OperationURLParameter = {\n  parameterPath: \"managementGroupName\",\n  mapper: {\n    serializedName: \"managementGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyTrackedResourcesResource: OperationURLParameter = {\n  parameterPath: \"policyTrackedResourcesResource\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"policyTrackedResourcesResource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"top\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2018-07-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceId: OperationURLParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    serializedName: \"resourceId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const managementGroupId: OperationURLParameter = {\n  parameterPath: \"managementGroupId\",\n  mapper: {\n    serializedName: \"managementGroupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const remediationName: OperationURLParameter = {\n  parameterPath: \"remediationName\",\n  mapper: {\n    serializedName: \"remediationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RemediationMapper\n};\n\nexport const policyEventsResource: OperationURLParameter = {\n  parameterPath: \"policyEventsResource\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"policyEventsResource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion2: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2019-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const orderBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"orderBy\"],\n  mapper: {\n    serializedName: \"$orderby\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const select: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"select\"],\n  mapper: {\n    serializedName: \"$select\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"fromParam\"],\n  mapper: {\n    serializedName: \"$from\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const to: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"to\"],\n  mapper: {\n    serializedName: \"$to\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const apply: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"apply\"],\n  mapper: {\n    serializedName: \"$apply\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skipToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"skipToken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId1: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"queryOptions\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const authorizationNamespace: OperationURLParameter = {\n  parameterPath: \"authorizationNamespace\",\n  mapper: {\n    defaultValue: \"Microsoft.Authorization\",\n    isConstant: true,\n    serializedName: \"authorizationNamespace\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policySetDefinitionName: OperationURLParameter = {\n  parameterPath: \"policySetDefinitionName\",\n  mapper: {\n    serializedName: \"policySetDefinitionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyDefinitionName: OperationURLParameter = {\n  parameterPath: \"policyDefinitionName\",\n  mapper: {\n    serializedName: \"policyDefinitionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyAssignmentName: OperationURLParameter = {\n  parameterPath: \"policyAssignmentName\",\n  mapper: {\n    serializedName: \"policyAssignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyStatesResource: OperationURLParameter = {\n  parameterPath: \"policyStatesResource\",\n  mapper: {\n    serializedName: \"policyStatesResource\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyStatesSummaryResource: OperationURLParameter = {\n  parameterPath: \"policyStatesSummaryResource\",\n  mapper: {\n    defaultValue: \"latest\",\n    isConstant: true,\n    serializedName: \"policyStatesSummaryResource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CheckRestrictionsRequestMapper\n};\n\nexport const apiVersion3: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-07-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName1: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion4: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-01-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AttestationMapper\n};\n\nexport const attestationName: OperationURLParameter = {\n  parameterPath: \"attestationName\",\n  mapper: {\n    serializedName: \"attestationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PolicyTrackedResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport {\n  PolicyTrackedResource,\n  PolicyTrackedResourcesListQueryResultsForManagementGroupNextOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForSubscriptionNextOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForResourceGroupNextOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForResourceNextOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForResourceOptionalParams,\n  PolicyTrackedResourcesListQueryResultsForManagementGroupResponse,\n  PolicyTrackedResourcesListQueryResultsForSubscriptionResponse,\n  PolicyTrackedResourcesListQueryResultsForResourceGroupResponse,\n  PolicyTrackedResourcesListQueryResultsForResourceResponse,\n  PolicyTrackedResourcesListQueryResultsForManagementGroupNextResponse,\n  PolicyTrackedResourcesListQueryResultsForSubscriptionNextResponse,\n  PolicyTrackedResourcesListQueryResultsForResourceGroupNextResponse,\n  PolicyTrackedResourcesListQueryResultsForResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PolicyTrackedResources operations. */\nexport class PolicyTrackedResourcesImpl implements PolicyTrackedResources {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class PolicyTrackedResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Queries policy tracked resources under the management group.\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForManagementGroup(\n    managementGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams\n  ): PagedAsyncIterableIterator<PolicyTrackedResource> {\n    const iter = this.listQueryResultsForManagementGroupPagingAll(\n      managementGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForManagementGroupPagingPage(\n          managementGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForManagementGroupPagingPage(\n    managementGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource[]> {\n    let result = await this._listQueryResultsForManagementGroup(\n      managementGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForManagementGroupNext(\n        managementGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForManagementGroupPagingAll(\n    managementGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource> {\n    for await (const page of this.listQueryResultsForManagementGroupPagingPage(\n      managementGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy tracked resources under the subscription.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForSubscription(\n    options?: PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyTrackedResource> {\n    const iter = this.listQueryResultsForSubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForSubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listQueryResultsForSubscriptionPagingPage(\n    options?: PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource[]> {\n    let result = await this._listQueryResultsForSubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForSubscriptionNext(\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForSubscriptionPagingAll(\n    options?: PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource> {\n    for await (const page of this.listQueryResultsForSubscriptionPagingPage(\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy tracked resources under the resource group.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResourceGroup(\n    resourceGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<PolicyTrackedResource> {\n    const iter = this.listQueryResultsForResourceGroupPagingAll(\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourceGroupPagingPage(\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource[]> {\n    let result = await this._listQueryResultsForResourceGroup(\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource> {\n    for await (const page of this.listQueryResultsForResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy tracked resources under the resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResource(\n    resourceId: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceOptionalParams\n  ): PagedAsyncIterableIterator<PolicyTrackedResource> {\n    const iter = this.listQueryResultsForResourcePagingAll(resourceId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourcePagingPage(resourceId, options);\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourcePagingPage(\n    resourceId: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource[]> {\n    let result = await this._listQueryResultsForResource(resourceId, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceNext(\n        resourceId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourcePagingAll(\n    resourceId: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceOptionalParams\n  ): AsyncIterableIterator<PolicyTrackedResource> {\n    for await (const page of this.listQueryResultsForResourcePagingPage(\n      resourceId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy tracked resources under the management group.\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForManagementGroup(\n    managementGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams\n  ): Promise<PolicyTrackedResourcesListQueryResultsForManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupName, options },\n      listQueryResultsForManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy tracked resources under the subscription.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscription(\n    options?: PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams\n  ): Promise<PolicyTrackedResourcesListQueryResultsForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listQueryResultsForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy tracked resources under the resource group.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroup(\n    resourceGroupName: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams\n  ): Promise<PolicyTrackedResourcesListQueryResultsForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listQueryResultsForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy tracked resources under the resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResource(\n    resourceId: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceOptionalParams\n  ): Promise<PolicyTrackedResourcesListQueryResultsForResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, options },\n      listQueryResultsForResourceOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForManagementGroupNext\n   * @param managementGroupName Management group name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForManagementGroup method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForManagementGroupNext(\n    managementGroupName: string,\n    nextLink: string,\n    options?: PolicyTrackedResourcesListQueryResultsForManagementGroupNextOptionalParams\n  ): Promise<\n    PolicyTrackedResourcesListQueryResultsForManagementGroupNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { managementGroupName, nextLink, options },\n      listQueryResultsForManagementGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForSubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForSubscription method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionNext(\n    nextLink: string,\n    options?: PolicyTrackedResourcesListQueryResultsForSubscriptionNextOptionalParams\n  ): Promise<\n    PolicyTrackedResourcesListQueryResultsForSubscriptionNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listQueryResultsForSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceGroupNext\n   * @param resourceGroupName Resource group name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceGroupNextOptionalParams\n  ): Promise<\n    PolicyTrackedResourcesListQueryResultsForResourceGroupNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listQueryResultsForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceNext\n   * @param resourceId Resource ID.\n   * @param nextLink The nextLink from the previous successful call to the ListQueryResultsForResource\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceNext(\n    resourceId: string,\n    nextLink: string,\n    options?: PolicyTrackedResourcesListQueryResultsForResourceNextOptionalParams\n  ): Promise<PolicyTrackedResourcesListQueryResultsForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, nextLink, options },\n      listQueryResultsForResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listQueryResultsForManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyTrackedResources/{policyTrackedResourcesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.policyTrackedResourcesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyTrackedResources/{policyTrackedResourcesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.subscriptionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyTrackedResources/{policyTrackedResourcesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/policyTrackedResources/{policyTrackedResourcesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.resourceId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForManagementGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyTrackedResourcesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyTrackedResourcesResource,\n    Parameters.resourceId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Remediations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport {\n  RemediationDeployment,\n  RemediationsListDeploymentsAtManagementGroupNextOptionalParams,\n  RemediationsListDeploymentsAtManagementGroupOptionalParams,\n  Remediation,\n  RemediationsListForManagementGroupNextOptionalParams,\n  RemediationsListForManagementGroupOptionalParams,\n  RemediationsListDeploymentsAtSubscriptionNextOptionalParams,\n  RemediationsListDeploymentsAtSubscriptionOptionalParams,\n  RemediationsListForSubscriptionNextOptionalParams,\n  RemediationsListForSubscriptionOptionalParams,\n  RemediationsListDeploymentsAtResourceGroupNextOptionalParams,\n  RemediationsListDeploymentsAtResourceGroupOptionalParams,\n  RemediationsListForResourceGroupNextOptionalParams,\n  RemediationsListForResourceGroupOptionalParams,\n  RemediationsListDeploymentsAtResourceNextOptionalParams,\n  RemediationsListDeploymentsAtResourceOptionalParams,\n  RemediationsListForResourceNextOptionalParams,\n  RemediationsListForResourceOptionalParams,\n  RemediationsListDeploymentsAtManagementGroupResponse,\n  RemediationsCancelAtManagementGroupOptionalParams,\n  RemediationsCancelAtManagementGroupResponse,\n  RemediationsListForManagementGroupResponse,\n  RemediationsCreateOrUpdateAtManagementGroupOptionalParams,\n  RemediationsCreateOrUpdateAtManagementGroupResponse,\n  RemediationsGetAtManagementGroupOptionalParams,\n  RemediationsGetAtManagementGroupResponse,\n  RemediationsDeleteAtManagementGroupOptionalParams,\n  RemediationsDeleteAtManagementGroupResponse,\n  RemediationsListDeploymentsAtSubscriptionResponse,\n  RemediationsCancelAtSubscriptionOptionalParams,\n  RemediationsCancelAtSubscriptionResponse,\n  RemediationsListForSubscriptionResponse,\n  RemediationsCreateOrUpdateAtSubscriptionOptionalParams,\n  RemediationsCreateOrUpdateAtSubscriptionResponse,\n  RemediationsGetAtSubscriptionOptionalParams,\n  RemediationsGetAtSubscriptionResponse,\n  RemediationsDeleteAtSubscriptionOptionalParams,\n  RemediationsDeleteAtSubscriptionResponse,\n  RemediationsListDeploymentsAtResourceGroupResponse,\n  RemediationsCancelAtResourceGroupOptionalParams,\n  RemediationsCancelAtResourceGroupResponse,\n  RemediationsListForResourceGroupResponse,\n  RemediationsCreateOrUpdateAtResourceGroupOptionalParams,\n  RemediationsCreateOrUpdateAtResourceGroupResponse,\n  RemediationsGetAtResourceGroupOptionalParams,\n  RemediationsGetAtResourceGroupResponse,\n  RemediationsDeleteAtResourceGroupOptionalParams,\n  RemediationsDeleteAtResourceGroupResponse,\n  RemediationsListDeploymentsAtResourceResponse,\n  RemediationsCancelAtResourceOptionalParams,\n  RemediationsCancelAtResourceResponse,\n  RemediationsListForResourceResponse,\n  RemediationsCreateOrUpdateAtResourceOptionalParams,\n  RemediationsCreateOrUpdateAtResourceResponse,\n  RemediationsGetAtResourceOptionalParams,\n  RemediationsGetAtResourceResponse,\n  RemediationsDeleteAtResourceOptionalParams,\n  RemediationsDeleteAtResourceResponse,\n  RemediationsListDeploymentsAtManagementGroupNextResponse,\n  RemediationsListForManagementGroupNextResponse,\n  RemediationsListDeploymentsAtSubscriptionNextResponse,\n  RemediationsListForSubscriptionNextResponse,\n  RemediationsListDeploymentsAtResourceGroupNextResponse,\n  RemediationsListForResourceGroupNextResponse,\n  RemediationsListDeploymentsAtResourceNextResponse,\n  RemediationsListForResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Remediations operations. */\nexport class RemediationsImpl implements Remediations {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class Remediations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all deployments for a remediation at management group scope.\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  public listDeploymentsAtManagementGroup(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtManagementGroupOptionalParams\n  ): PagedAsyncIterableIterator<RemediationDeployment> {\n    const iter = this.listDeploymentsAtManagementGroupPagingAll(\n      managementGroupId,\n      remediationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listDeploymentsAtManagementGroupPagingPage(\n          managementGroupId,\n          remediationName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listDeploymentsAtManagementGroupPagingPage(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtManagementGroupOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment[]> {\n    let result = await this._listDeploymentsAtManagementGroup(\n      managementGroupId,\n      remediationName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listDeploymentsAtManagementGroupNext(\n        managementGroupId,\n        remediationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listDeploymentsAtManagementGroupPagingAll(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtManagementGroupOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment> {\n    for await (const page of this.listDeploymentsAtManagementGroupPagingPage(\n      managementGroupId,\n      remediationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all remediations for the management group.\n   * @param managementGroupId Management group ID.\n   * @param options The options parameters.\n   */\n  public listForManagementGroup(\n    managementGroupId: string,\n    options?: RemediationsListForManagementGroupOptionalParams\n  ): PagedAsyncIterableIterator<Remediation> {\n    const iter = this.listForManagementGroupPagingAll(\n      managementGroupId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForManagementGroupPagingPage(\n          managementGroupId,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listForManagementGroupPagingPage(\n    managementGroupId: string,\n    options?: RemediationsListForManagementGroupOptionalParams\n  ): AsyncIterableIterator<Remediation[]> {\n    let result = await this._listForManagementGroup(managementGroupId, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForManagementGroupNext(\n        managementGroupId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForManagementGroupPagingAll(\n    managementGroupId: string,\n    options?: RemediationsListForManagementGroupOptionalParams\n  ): AsyncIterableIterator<Remediation> {\n    for await (const page of this.listForManagementGroupPagingPage(\n      managementGroupId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments for a remediation at subscription scope.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  public listDeploymentsAtSubscription(\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<RemediationDeployment> {\n    const iter = this.listDeploymentsAtSubscriptionPagingAll(\n      remediationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listDeploymentsAtSubscriptionPagingPage(\n          remediationName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listDeploymentsAtSubscriptionPagingPage(\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtSubscriptionOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment[]> {\n    let result = await this._listDeploymentsAtSubscription(\n      remediationName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listDeploymentsAtSubscriptionNext(\n        remediationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listDeploymentsAtSubscriptionPagingAll(\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtSubscriptionOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment> {\n    for await (const page of this.listDeploymentsAtSubscriptionPagingPage(\n      remediationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all remediations for the subscription.\n   * @param options The options parameters.\n   */\n  public listForSubscription(\n    options?: RemediationsListForSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Remediation> {\n    const iter = this.listForSubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForSubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listForSubscriptionPagingPage(\n    options?: RemediationsListForSubscriptionOptionalParams\n  ): AsyncIterableIterator<Remediation[]> {\n    let result = await this._listForSubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForSubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForSubscriptionPagingAll(\n    options?: RemediationsListForSubscriptionOptionalParams\n  ): AsyncIterableIterator<Remediation> {\n    for await (const page of this.listForSubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments for a remediation at resource group scope.\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  public listDeploymentsAtResourceGroup(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<RemediationDeployment> {\n    const iter = this.listDeploymentsAtResourceGroupPagingAll(\n      resourceGroupName,\n      remediationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listDeploymentsAtResourceGroupPagingPage(\n          resourceGroupName,\n          remediationName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listDeploymentsAtResourceGroupPagingPage(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceGroupOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment[]> {\n    let result = await this._listDeploymentsAtResourceGroup(\n      resourceGroupName,\n      remediationName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listDeploymentsAtResourceGroupNext(\n        resourceGroupName,\n        remediationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listDeploymentsAtResourceGroupPagingAll(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceGroupOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment> {\n    for await (const page of this.listDeploymentsAtResourceGroupPagingPage(\n      resourceGroupName,\n      remediationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all remediations for the subscription.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  public listForResourceGroup(\n    resourceGroupName: string,\n    options?: RemediationsListForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Remediation> {\n    const iter = this.listForResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listForResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: RemediationsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<Remediation[]> {\n    let result = await this._listForResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: RemediationsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<Remediation> {\n    for await (const page of this.listForResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments for a remediation at resource scope.\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  public listDeploymentsAtResource(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceOptionalParams\n  ): PagedAsyncIterableIterator<RemediationDeployment> {\n    const iter = this.listDeploymentsAtResourcePagingAll(\n      resourceId,\n      remediationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listDeploymentsAtResourcePagingPage(\n          resourceId,\n          remediationName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listDeploymentsAtResourcePagingPage(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment[]> {\n    let result = await this._listDeploymentsAtResource(\n      resourceId,\n      remediationName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listDeploymentsAtResourceNext(\n        resourceId,\n        remediationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listDeploymentsAtResourcePagingAll(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceOptionalParams\n  ): AsyncIterableIterator<RemediationDeployment> {\n    for await (const page of this.listDeploymentsAtResourcePagingPage(\n      resourceId,\n      remediationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all remediations for a resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  public listForResource(\n    resourceId: string,\n    options?: RemediationsListForResourceOptionalParams\n  ): PagedAsyncIterableIterator<Remediation> {\n    const iter = this.listForResourcePagingAll(resourceId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForResourcePagingPage(resourceId, options);\n      }\n    };\n  }\n\n  private async *listForResourcePagingPage(\n    resourceId: string,\n    options?: RemediationsListForResourceOptionalParams\n  ): AsyncIterableIterator<Remediation[]> {\n    let result = await this._listForResource(resourceId, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForResourceNext(\n        resourceId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForResourcePagingAll(\n    resourceId: string,\n    options?: RemediationsListForResourceOptionalParams\n  ): AsyncIterableIterator<Remediation> {\n    for await (const page of this.listForResourcePagingPage(\n      resourceId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deployments for a remediation at management group scope.\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtManagementGroup(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtManagementGroupOptionalParams\n  ): Promise<RemediationsListDeploymentsAtManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, remediationName, options },\n      listDeploymentsAtManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a remediation at management group scope.\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  cancelAtManagementGroup(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsCancelAtManagementGroupOptionalParams\n  ): Promise<RemediationsCancelAtManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, remediationName, options },\n      cancelAtManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all remediations for the management group.\n   * @param managementGroupId Management group ID.\n   * @param options The options parameters.\n   */\n  private _listForManagementGroup(\n    managementGroupId: string,\n    options?: RemediationsListForManagementGroupOptionalParams\n  ): Promise<RemediationsListForManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, options },\n      listForManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a remediation at management group scope.\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param parameters The remediation parameters.\n   * @param options The options parameters.\n   */\n  createOrUpdateAtManagementGroup(\n    managementGroupId: string,\n    remediationName: string,\n    parameters: Remediation,\n    options?: RemediationsCreateOrUpdateAtManagementGroupOptionalParams\n  ): Promise<RemediationsCreateOrUpdateAtManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, remediationName, parameters, options },\n      createOrUpdateAtManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing remediation at management group scope.\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  getAtManagementGroup(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsGetAtManagementGroupOptionalParams\n  ): Promise<RemediationsGetAtManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, remediationName, options },\n      getAtManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing remediation at management group scope.\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  deleteAtManagementGroup(\n    managementGroupId: string,\n    remediationName: string,\n    options?: RemediationsDeleteAtManagementGroupOptionalParams\n  ): Promise<RemediationsDeleteAtManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, remediationName, options },\n      deleteAtManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments for a remediation at subscription scope.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtSubscription(\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtSubscriptionOptionalParams\n  ): Promise<RemediationsListDeploymentsAtSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { remediationName, options },\n      listDeploymentsAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a remediation at subscription scope.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  cancelAtSubscription(\n    remediationName: string,\n    options?: RemediationsCancelAtSubscriptionOptionalParams\n  ): Promise<RemediationsCancelAtSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { remediationName, options },\n      cancelAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets all remediations for the subscription.\n   * @param options The options parameters.\n   */\n  private _listForSubscription(\n    options?: RemediationsListForSubscriptionOptionalParams\n  ): Promise<RemediationsListForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a remediation at subscription scope.\n   * @param remediationName The name of the remediation.\n   * @param parameters The remediation parameters.\n   * @param options The options parameters.\n   */\n  createOrUpdateAtSubscription(\n    remediationName: string,\n    parameters: Remediation,\n    options?: RemediationsCreateOrUpdateAtSubscriptionOptionalParams\n  ): Promise<RemediationsCreateOrUpdateAtSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { remediationName, parameters, options },\n      createOrUpdateAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing remediation at subscription scope.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  getAtSubscription(\n    remediationName: string,\n    options?: RemediationsGetAtSubscriptionOptionalParams\n  ): Promise<RemediationsGetAtSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { remediationName, options },\n      getAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing remediation at subscription scope.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  deleteAtSubscription(\n    remediationName: string,\n    options?: RemediationsDeleteAtSubscriptionOptionalParams\n  ): Promise<RemediationsDeleteAtSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { remediationName, options },\n      deleteAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments for a remediation at resource group scope.\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtResourceGroup(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceGroupOptionalParams\n  ): Promise<RemediationsListDeploymentsAtResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, remediationName, options },\n      listDeploymentsAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a remediation at resource group scope.\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  cancelAtResourceGroup(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsCancelAtResourceGroupOptionalParams\n  ): Promise<RemediationsCancelAtResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, remediationName, options },\n      cancelAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all remediations for the subscription.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroup(\n    resourceGroupName: string,\n    options?: RemediationsListForResourceGroupOptionalParams\n  ): Promise<RemediationsListForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a remediation at resource group scope.\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param parameters The remediation parameters.\n   * @param options The options parameters.\n   */\n  createOrUpdateAtResourceGroup(\n    resourceGroupName: string,\n    remediationName: string,\n    parameters: Remediation,\n    options?: RemediationsCreateOrUpdateAtResourceGroupOptionalParams\n  ): Promise<RemediationsCreateOrUpdateAtResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, remediationName, parameters, options },\n      createOrUpdateAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing remediation at resource group scope.\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  getAtResourceGroup(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsGetAtResourceGroupOptionalParams\n  ): Promise<RemediationsGetAtResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, remediationName, options },\n      getAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing remediation at resource group scope.\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  deleteAtResourceGroup(\n    resourceGroupName: string,\n    remediationName: string,\n    options?: RemediationsDeleteAtResourceGroupOptionalParams\n  ): Promise<RemediationsDeleteAtResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, remediationName, options },\n      deleteAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deployments for a remediation at resource scope.\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtResource(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsListDeploymentsAtResourceOptionalParams\n  ): Promise<RemediationsListDeploymentsAtResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, remediationName, options },\n      listDeploymentsAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * Cancel a remediation at resource scope.\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  cancelAtResource(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsCancelAtResourceOptionalParams\n  ): Promise<RemediationsCancelAtResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, remediationName, options },\n      cancelAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * Gets all remediations for a resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  private _listForResource(\n    resourceId: string,\n    options?: RemediationsListForResourceOptionalParams\n  ): Promise<RemediationsListForResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, options },\n      listForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a remediation at resource scope.\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param parameters The remediation parameters.\n   * @param options The options parameters.\n   */\n  createOrUpdateAtResource(\n    resourceId: string,\n    remediationName: string,\n    parameters: Remediation,\n    options?: RemediationsCreateOrUpdateAtResourceOptionalParams\n  ): Promise<RemediationsCreateOrUpdateAtResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, remediationName, parameters, options },\n      createOrUpdateAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * Gets an existing remediation at resource scope.\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  getAtResource(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsGetAtResourceOptionalParams\n  ): Promise<RemediationsGetAtResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, remediationName, options },\n      getAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing remediation at individual resource scope.\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param options The options parameters.\n   */\n  deleteAtResource(\n    resourceId: string,\n    remediationName: string,\n    options?: RemediationsDeleteAtResourceOptionalParams\n  ): Promise<RemediationsDeleteAtResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, remediationName, options },\n      deleteAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * ListDeploymentsAtManagementGroupNext\n   * @param managementGroupId Management group ID.\n   * @param remediationName The name of the remediation.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListDeploymentsAtManagementGroup method.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtManagementGroupNext(\n    managementGroupId: string,\n    remediationName: string,\n    nextLink: string,\n    options?: RemediationsListDeploymentsAtManagementGroupNextOptionalParams\n  ): Promise<RemediationsListDeploymentsAtManagementGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, remediationName, nextLink, options },\n      listDeploymentsAtManagementGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForManagementGroupNext\n   * @param managementGroupId Management group ID.\n   * @param nextLink The nextLink from the previous successful call to the ListForManagementGroup method.\n   * @param options The options parameters.\n   */\n  private _listForManagementGroupNext(\n    managementGroupId: string,\n    nextLink: string,\n    options?: RemediationsListForManagementGroupNextOptionalParams\n  ): Promise<RemediationsListForManagementGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupId, nextLink, options },\n      listForManagementGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListDeploymentsAtSubscriptionNext\n   * @param remediationName The name of the remediation.\n   * @param nextLink The nextLink from the previous successful call to the ListDeploymentsAtSubscription\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtSubscriptionNext(\n    remediationName: string,\n    nextLink: string,\n    options?: RemediationsListDeploymentsAtSubscriptionNextOptionalParams\n  ): Promise<RemediationsListDeploymentsAtSubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { remediationName, nextLink, options },\n      listDeploymentsAtSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForSubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListForSubscription method.\n   * @param options The options parameters.\n   */\n  private _listForSubscriptionNext(\n    nextLink: string,\n    options?: RemediationsListForSubscriptionNextOptionalParams\n  ): Promise<RemediationsListForSubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listForSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListDeploymentsAtResourceGroupNext\n   * @param resourceGroupName Resource group name.\n   * @param remediationName The name of the remediation.\n   * @param nextLink The nextLink from the previous successful call to the ListDeploymentsAtResourceGroup\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtResourceGroupNext(\n    resourceGroupName: string,\n    remediationName: string,\n    nextLink: string,\n    options?: RemediationsListDeploymentsAtResourceGroupNextOptionalParams\n  ): Promise<RemediationsListDeploymentsAtResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, remediationName, nextLink, options },\n      listDeploymentsAtResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceGroupNext\n   * @param resourceGroupName Resource group name.\n   * @param nextLink The nextLink from the previous successful call to the ListForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: RemediationsListForResourceGroupNextOptionalParams\n  ): Promise<RemediationsListForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListDeploymentsAtResourceNext\n   * @param resourceId Resource ID.\n   * @param remediationName The name of the remediation.\n   * @param nextLink The nextLink from the previous successful call to the ListDeploymentsAtResource\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listDeploymentsAtResourceNext(\n    resourceId: string,\n    remediationName: string,\n    nextLink: string,\n    options?: RemediationsListDeploymentsAtResourceNextOptionalParams\n  ): Promise<RemediationsListDeploymentsAtResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, remediationName, nextLink, options },\n      listDeploymentsAtResourceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceNext\n   * @param resourceId Resource ID.\n   * @param nextLink The nextLink from the previous successful call to the ListForResource method.\n   * @param options The options parameters.\n   */\n  private _listForResourceNext(\n    resourceId: string,\n    nextLink: string,\n    options?: RemediationsListForResourceNextOptionalParams\n  ): Promise<RemediationsListForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, nextLink, options },\n      listForResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listDeploymentsAtManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    201: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    201: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    201: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/providers/Microsoft.PolicyInsights/remediations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    201: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Remediation\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtManagementGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.nextLink,\n    Parameters.managementGroupId,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForManagementGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.nextLink,\n    Parameters.managementGroupId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsAtResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationDeploymentsListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.nextLink,\n    Parameters.remediationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemediationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.resourceId, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PolicyEvents } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport {\n  PolicyEvent,\n  PolicyEventsListQueryResultsForManagementGroupNextOptionalParams,\n  PolicyEventsListQueryResultsForManagementGroupOptionalParams,\n  PolicyEventsListQueryResultsForSubscriptionNextOptionalParams,\n  PolicyEventsListQueryResultsForSubscriptionOptionalParams,\n  PolicyEventsListQueryResultsForResourceGroupNextOptionalParams,\n  PolicyEventsListQueryResultsForResourceGroupOptionalParams,\n  PolicyEventsListQueryResultsForResourceNextOptionalParams,\n  PolicyEventsListQueryResultsForResourceOptionalParams,\n  PolicyEventsListQueryResultsForPolicySetDefinitionNextOptionalParams,\n  PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams,\n  PolicyEventsListQueryResultsForPolicyDefinitionNextOptionalParams,\n  PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams,\n  PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams,\n  PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams,\n  PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams,\n  PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams,\n  PolicyEventsListQueryResultsForManagementGroupResponse,\n  PolicyEventsListQueryResultsForSubscriptionResponse,\n  PolicyEventsListQueryResultsForResourceGroupResponse,\n  PolicyEventsListQueryResultsForResourceResponse,\n  PolicyEventsListQueryResultsForPolicySetDefinitionResponse,\n  PolicyEventsListQueryResultsForPolicyDefinitionResponse,\n  PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentResponse,\n  PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentResponse,\n  PolicyEventsListQueryResultsForManagementGroupNextResponse,\n  PolicyEventsListQueryResultsForSubscriptionNextResponse,\n  PolicyEventsListQueryResultsForResourceGroupNextResponse,\n  PolicyEventsListQueryResultsForResourceNextResponse,\n  PolicyEventsListQueryResultsForPolicySetDefinitionNextResponse,\n  PolicyEventsListQueryResultsForPolicyDefinitionNextResponse,\n  PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse,\n  PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PolicyEvents operations. */\nexport class PolicyEventsImpl implements PolicyEvents {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class PolicyEvents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Queries policy events for the resources under the management group.\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForManagementGroup(\n    managementGroupName: string,\n    options?: PolicyEventsListQueryResultsForManagementGroupOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForManagementGroupPagingAll(\n      managementGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForManagementGroupPagingPage(\n          managementGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForManagementGroupPagingPage(\n    managementGroupName: string,\n    options?: PolicyEventsListQueryResultsForManagementGroupOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForManagementGroup(\n      managementGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForManagementGroupNext(\n        managementGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForManagementGroupPagingAll(\n    managementGroupName: string,\n    options?: PolicyEventsListQueryResultsForManagementGroupOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForManagementGroupPagingPage(\n      managementGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the resources under the subscription.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForSubscription(\n    subscriptionId: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForSubscriptionPagingAll(\n      subscriptionId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForSubscriptionPagingPage(\n          subscriptionId,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForSubscriptionPagingPage(\n    subscriptionId: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForSubscription(\n      subscriptionId,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForSubscriptionNext(\n        subscriptionId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForSubscriptionPagingAll(\n    subscriptionId: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForSubscriptionPagingPage(\n      subscriptionId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the resources under the resource group.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResourceGroup(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForResourceGroupPagingAll(\n      subscriptionId,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourceGroupPagingPage(\n          subscriptionId,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourceGroupPagingPage(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForResourceGroup(\n      subscriptionId,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceGroupNext(\n        subscriptionId,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourceGroupPagingAll(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForResourceGroupPagingPage(\n      subscriptionId,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResource(\n    resourceId: string,\n    options?: PolicyEventsListQueryResultsForResourceOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForResourcePagingAll(resourceId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourcePagingPage(resourceId, options);\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourcePagingPage(\n    resourceId: string,\n    options?: PolicyEventsListQueryResultsForResourceOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForResource(resourceId, options);\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceNext(\n        resourceId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourcePagingAll(\n    resourceId: string,\n    options?: PolicyEventsListQueryResultsForResourceOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForResourcePagingPage(\n      resourceId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the subscription level policy set definition.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForPolicySetDefinition(\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForPolicySetDefinitionPagingAll(\n      subscriptionId,\n      policySetDefinitionName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForPolicySetDefinitionPagingPage(\n          subscriptionId,\n          policySetDefinitionName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForPolicySetDefinitionPagingPage(\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForPolicySetDefinition(\n      subscriptionId,\n      policySetDefinitionName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForPolicySetDefinitionNext(\n        subscriptionId,\n        policySetDefinitionName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForPolicySetDefinitionPagingAll(\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForPolicySetDefinitionPagingPage(\n      subscriptionId,\n      policySetDefinitionName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the subscription level policy definition.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForPolicyDefinition(\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForPolicyDefinitionPagingAll(\n      subscriptionId,\n      policyDefinitionName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForPolicyDefinitionPagingPage(\n          subscriptionId,\n          policyDefinitionName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForPolicyDefinitionPagingPage(\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForPolicyDefinition(\n      subscriptionId,\n      policyDefinitionName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForPolicyDefinitionNext(\n        subscriptionId,\n        policyDefinitionName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForPolicyDefinitionPagingAll(\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForPolicyDefinitionPagingPage(\n      subscriptionId,\n      policyDefinitionName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the subscription level policy assignment.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForSubscriptionLevelPolicyAssignment(\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForSubscriptionLevelPolicyAssignmentPagingAll(\n      subscriptionId,\n      policyAssignmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForSubscriptionLevelPolicyAssignmentPagingPage(\n          subscriptionId,\n          policyAssignmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForSubscriptionLevelPolicyAssignmentPagingPage(\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForSubscriptionLevelPolicyAssignment(\n      subscriptionId,\n      policyAssignmentName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForSubscriptionLevelPolicyAssignmentNext(\n        subscriptionId,\n        policyAssignmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForSubscriptionLevelPolicyAssignmentPagingAll(\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForSubscriptionLevelPolicyAssignmentPagingPage(\n      subscriptionId,\n      policyAssignmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the resource group level policy assignment.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResourceGroupLevelPolicyAssignment(\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): PagedAsyncIterableIterator<PolicyEvent> {\n    const iter = this.listQueryResultsForResourceGroupLevelPolicyAssignmentPagingAll(\n      subscriptionId,\n      resourceGroupName,\n      policyAssignmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourceGroupLevelPolicyAssignmentPagingPage(\n          subscriptionId,\n          resourceGroupName,\n          policyAssignmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourceGroupLevelPolicyAssignmentPagingPage(\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyEvent[]> {\n    let result = await this._listQueryResultsForResourceGroupLevelPolicyAssignment(\n      subscriptionId,\n      resourceGroupName,\n      policyAssignmentName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceGroupLevelPolicyAssignmentNext(\n        subscriptionId,\n        resourceGroupName,\n        policyAssignmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourceGroupLevelPolicyAssignmentPagingAll(\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyEvent> {\n    for await (const page of this.listQueryResultsForResourceGroupLevelPolicyAssignmentPagingPage(\n      subscriptionId,\n      resourceGroupName,\n      policyAssignmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy events for the resources under the management group.\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForManagementGroup(\n    managementGroupName: string,\n    options?: PolicyEventsListQueryResultsForManagementGroupOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupName, options },\n      listQueryResultsForManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the resources under the subscription.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscription(\n    subscriptionId: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      listQueryResultsForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the resources under the resource group.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroup(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, resourceGroupName, options },\n      listQueryResultsForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResource(\n    resourceId: string,\n    options?: PolicyEventsListQueryResultsForResourceOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, options },\n      listQueryResultsForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the subscription level policy set definition.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicySetDefinition(\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicySetDefinitionOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForPolicySetDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policySetDefinitionName, options },\n      listQueryResultsForPolicySetDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the subscription level policy definition.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicyDefinition(\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyEventsListQueryResultsForPolicyDefinitionOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForPolicyDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policyDefinitionName, options },\n      listQueryResultsForPolicyDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the subscription level policy assignment.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionLevelPolicyAssignment(\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): Promise<\n    PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentResponse\n  > {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policyAssignmentName, options },\n      listQueryResultsForSubscriptionLevelPolicyAssignmentOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy events for the resource group level policy assignment.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupLevelPolicyAssignment(\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): Promise<\n    PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentResponse\n  > {\n    return this.client.sendOperationRequest(\n      { subscriptionId, resourceGroupName, policyAssignmentName, options },\n      listQueryResultsForResourceGroupLevelPolicyAssignmentOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForManagementGroupNext\n   * @param managementGroupName Management group name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForManagementGroup method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForManagementGroupNext(\n    managementGroupName: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForManagementGroupNextOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForManagementGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupName, nextLink, options },\n      listQueryResultsForManagementGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForSubscriptionNext\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForSubscription method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionNext(\n    subscriptionId: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionNextOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForSubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, nextLink, options },\n      listQueryResultsForSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceGroupNext\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupNext(\n    subscriptionId: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupNextOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, resourceGroupName, nextLink, options },\n      listQueryResultsForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceNext\n   * @param resourceId Resource ID.\n   * @param nextLink The nextLink from the previous successful call to the ListQueryResultsForResource\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceNext(\n    resourceId: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForResourceNextOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, nextLink, options },\n      listQueryResultsForResourceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForPolicySetDefinitionNext\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForPolicySetDefinition method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicySetDefinitionNext(\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForPolicySetDefinitionNextOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForPolicySetDefinitionNextResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policySetDefinitionName, nextLink, options },\n      listQueryResultsForPolicySetDefinitionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForPolicyDefinitionNext\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForPolicyDefinition method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicyDefinitionNext(\n    subscriptionId: string,\n    policyDefinitionName: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForPolicyDefinitionNextOptionalParams\n  ): Promise<PolicyEventsListQueryResultsForPolicyDefinitionNextResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policyDefinitionName, nextLink, options },\n      listQueryResultsForPolicyDefinitionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForSubscriptionLevelPolicyAssignmentNext\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForSubscriptionLevelPolicyAssignment method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionLevelPolicyAssignmentNext(\n    subscriptionId: string,\n    policyAssignmentName: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams\n  ): Promise<\n    PolicyEventsListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policyAssignmentName, nextLink, options },\n      listQueryResultsForSubscriptionLevelPolicyAssignmentNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceGroupLevelPolicyAssignmentNext\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForResourceGroupLevelPolicyAssignment method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupLevelPolicyAssignmentNext(\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    nextLink: string,\n    options?: PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams\n  ): Promise<\n    PolicyEventsListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        subscriptionId,\n        resourceGroupName,\n        policyAssignmentName,\n        nextLink,\n        options\n      },\n      listQueryResultsForResourceGroupLevelPolicyAssignmentNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listQueryResultsForManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.policyEventsResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken,\n    Parameters.expand\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.policyEventsResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicySetDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policySetDefinitionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicyDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyDefinitionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionLevelPolicyAssignmentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupLevelPolicyAssignmentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyEvents/{policyEventsResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForManagementGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.nextLink,\n    Parameters.policyEventsResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken,\n    Parameters.expand\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.nextLink,\n    Parameters.policyEventsResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicySetDefinitionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policySetDefinitionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicyDefinitionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyDefinitionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionLevelPolicyAssignmentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupLevelPolicyAssignmentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyEventsQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.policyEventsResource,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PolicyStates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PolicyState,\n  PolicyStatesResource,\n  PolicyStatesListQueryResultsForManagementGroupNextOptionalParams,\n  PolicyStatesListQueryResultsForManagementGroupOptionalParams,\n  PolicyStatesListQueryResultsForSubscriptionNextOptionalParams,\n  PolicyStatesListQueryResultsForSubscriptionOptionalParams,\n  PolicyStatesListQueryResultsForResourceGroupNextOptionalParams,\n  PolicyStatesListQueryResultsForResourceGroupOptionalParams,\n  PolicyStatesListQueryResultsForResourceNextOptionalParams,\n  PolicyStatesListQueryResultsForResourceOptionalParams,\n  PolicyStatesListQueryResultsForPolicySetDefinitionNextOptionalParams,\n  PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams,\n  PolicyStatesListQueryResultsForPolicyDefinitionNextOptionalParams,\n  PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams,\n  PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams,\n  PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams,\n  PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams,\n  PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams,\n  PolicyStatesListQueryResultsForManagementGroupResponse,\n  PolicyStatesSummarizeForManagementGroupOptionalParams,\n  PolicyStatesSummarizeForManagementGroupResponse,\n  PolicyStatesListQueryResultsForSubscriptionResponse,\n  PolicyStatesSummarizeForSubscriptionOptionalParams,\n  PolicyStatesSummarizeForSubscriptionResponse,\n  PolicyStatesListQueryResultsForResourceGroupResponse,\n  PolicyStatesSummarizeForResourceGroupOptionalParams,\n  PolicyStatesSummarizeForResourceGroupResponse,\n  PolicyStatesListQueryResultsForResourceResponse,\n  PolicyStatesSummarizeForResourceOptionalParams,\n  PolicyStatesSummarizeForResourceResponse,\n  PolicyStatesTriggerSubscriptionEvaluationOptionalParams,\n  PolicyStatesTriggerResourceGroupEvaluationOptionalParams,\n  PolicyStatesListQueryResultsForPolicySetDefinitionResponse,\n  PolicyStatesSummarizeForPolicySetDefinitionOptionalParams,\n  PolicyStatesSummarizeForPolicySetDefinitionResponse,\n  PolicyStatesListQueryResultsForPolicyDefinitionResponse,\n  PolicyStatesSummarizeForPolicyDefinitionOptionalParams,\n  PolicyStatesSummarizeForPolicyDefinitionResponse,\n  PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentResponse,\n  PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams,\n  PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentResponse,\n  PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentResponse,\n  PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams,\n  PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentResponse,\n  PolicyStatesListQueryResultsForManagementGroupNextResponse,\n  PolicyStatesListQueryResultsForSubscriptionNextResponse,\n  PolicyStatesListQueryResultsForResourceGroupNextResponse,\n  PolicyStatesListQueryResultsForResourceNextResponse,\n  PolicyStatesListQueryResultsForPolicySetDefinitionNextResponse,\n  PolicyStatesListQueryResultsForPolicyDefinitionNextResponse,\n  PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse,\n  PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PolicyStates operations. */\nexport class PolicyStatesImpl implements PolicyStates {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class PolicyStates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Queries policy states for the resources under the management group.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForManagementGroup(\n    policyStatesResource: PolicyStatesResource,\n    managementGroupName: string,\n    options?: PolicyStatesListQueryResultsForManagementGroupOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForManagementGroupPagingAll(\n      policyStatesResource,\n      managementGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForManagementGroupPagingPage(\n          policyStatesResource,\n          managementGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForManagementGroupPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    managementGroupName: string,\n    options?: PolicyStatesListQueryResultsForManagementGroupOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForManagementGroup(\n      policyStatesResource,\n      managementGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForManagementGroupNext(\n        policyStatesResource,\n        managementGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForManagementGroupPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    managementGroupName: string,\n    options?: PolicyStatesListQueryResultsForManagementGroupOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForManagementGroupPagingPage(\n      policyStatesResource,\n      managementGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the resources under the subscription.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForSubscription(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForSubscriptionPagingAll(\n      policyStatesResource,\n      subscriptionId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForSubscriptionPagingPage(\n          policyStatesResource,\n          subscriptionId,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForSubscriptionPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForSubscription(\n      policyStatesResource,\n      subscriptionId,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForSubscriptionNext(\n        policyStatesResource,\n        subscriptionId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForSubscriptionPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForSubscriptionPagingPage(\n      policyStatesResource,\n      subscriptionId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the resources under the resource group.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResourceGroup(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForResourceGroupPagingAll(\n      policyStatesResource,\n      subscriptionId,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourceGroupPagingPage(\n          policyStatesResource,\n          subscriptionId,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourceGroupPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForResourceGroup(\n      policyStatesResource,\n      subscriptionId,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceGroupNext(\n        policyStatesResource,\n        subscriptionId,\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourceGroupPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForResourceGroupPagingPage(\n      policyStatesResource,\n      subscriptionId,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the resource.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResource(\n    policyStatesResource: PolicyStatesResource,\n    resourceId: string,\n    options?: PolicyStatesListQueryResultsForResourceOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForResourcePagingAll(\n      policyStatesResource,\n      resourceId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourcePagingPage(\n          policyStatesResource,\n          resourceId,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourcePagingPage(\n    policyStatesResource: PolicyStatesResource,\n    resourceId: string,\n    options?: PolicyStatesListQueryResultsForResourceOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForResource(\n      policyStatesResource,\n      resourceId,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceNext(\n        policyStatesResource,\n        resourceId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourcePagingAll(\n    policyStatesResource: PolicyStatesResource,\n    resourceId: string,\n    options?: PolicyStatesListQueryResultsForResourceOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForResourcePagingPage(\n      policyStatesResource,\n      resourceId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the subscription level policy set definition.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForPolicySetDefinition(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForPolicySetDefinitionPagingAll(\n      policyStatesResource,\n      subscriptionId,\n      policySetDefinitionName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForPolicySetDefinitionPagingPage(\n          policyStatesResource,\n          subscriptionId,\n          policySetDefinitionName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForPolicySetDefinitionPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForPolicySetDefinition(\n      policyStatesResource,\n      subscriptionId,\n      policySetDefinitionName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForPolicySetDefinitionNext(\n        policyStatesResource,\n        subscriptionId,\n        policySetDefinitionName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForPolicySetDefinitionPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForPolicySetDefinitionPagingPage(\n      policyStatesResource,\n      subscriptionId,\n      policySetDefinitionName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the subscription level policy definition.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForPolicyDefinition(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForPolicyDefinitionPagingAll(\n      policyStatesResource,\n      subscriptionId,\n      policyDefinitionName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForPolicyDefinitionPagingPage(\n          policyStatesResource,\n          subscriptionId,\n          policyDefinitionName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForPolicyDefinitionPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForPolicyDefinition(\n      policyStatesResource,\n      subscriptionId,\n      policyDefinitionName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForPolicyDefinitionNext(\n        policyStatesResource,\n        subscriptionId,\n        policyDefinitionName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForPolicyDefinitionPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForPolicyDefinitionPagingPage(\n      policyStatesResource,\n      subscriptionId,\n      policyDefinitionName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the subscription level policy assignment.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForSubscriptionLevelPolicyAssignment(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForSubscriptionLevelPolicyAssignmentPagingAll(\n      policyStatesResource,\n      subscriptionId,\n      policyAssignmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForSubscriptionLevelPolicyAssignmentPagingPage(\n          policyStatesResource,\n          subscriptionId,\n          policyAssignmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForSubscriptionLevelPolicyAssignmentPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForSubscriptionLevelPolicyAssignment(\n      policyStatesResource,\n      subscriptionId,\n      policyAssignmentName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForSubscriptionLevelPolicyAssignmentNext(\n        policyStatesResource,\n        subscriptionId,\n        policyAssignmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForSubscriptionLevelPolicyAssignmentPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForSubscriptionLevelPolicyAssignmentPagingPage(\n      policyStatesResource,\n      subscriptionId,\n      policyAssignmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the resource group level policy assignment.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  public listQueryResultsForResourceGroupLevelPolicyAssignment(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): PagedAsyncIterableIterator<PolicyState> {\n    const iter = this.listQueryResultsForResourceGroupLevelPolicyAssignmentPagingAll(\n      policyStatesResource,\n      subscriptionId,\n      resourceGroupName,\n      policyAssignmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listQueryResultsForResourceGroupLevelPolicyAssignmentPagingPage(\n          policyStatesResource,\n          subscriptionId,\n          resourceGroupName,\n          policyAssignmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listQueryResultsForResourceGroupLevelPolicyAssignmentPagingPage(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyState[]> {\n    let result = await this._listQueryResultsForResourceGroupLevelPolicyAssignment(\n      policyStatesResource,\n      subscriptionId,\n      resourceGroupName,\n      policyAssignmentName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.odataNextLink;\n    while (continuationToken) {\n      result = await this._listQueryResultsForResourceGroupLevelPolicyAssignmentNext(\n        policyStatesResource,\n        subscriptionId,\n        resourceGroupName,\n        policyAssignmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.odataNextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listQueryResultsForResourceGroupLevelPolicyAssignmentPagingAll(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): AsyncIterableIterator<PolicyState> {\n    for await (const page of this.listQueryResultsForResourceGroupLevelPolicyAssignmentPagingPage(\n      policyStatesResource,\n      subscriptionId,\n      resourceGroupName,\n      policyAssignmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Queries policy states for the resources under the management group.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForManagementGroup(\n    policyStatesResource: PolicyStatesResource,\n    managementGroupName: string,\n    options?: PolicyStatesListQueryResultsForManagementGroupOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, managementGroupName, options },\n      listQueryResultsForManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the resources under the management group.\n   * @param managementGroupName Management group name.\n   * @param options The options parameters.\n   */\n  summarizeForManagementGroup(\n    managementGroupName: string,\n    options?: PolicyStatesSummarizeForManagementGroupOptionalParams\n  ): Promise<PolicyStatesSummarizeForManagementGroupResponse> {\n    return this.client.sendOperationRequest(\n      { managementGroupName, options },\n      summarizeForManagementGroupOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy states for the resources under the subscription.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscription(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, subscriptionId, options },\n      listQueryResultsForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the resources under the subscription.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  summarizeForSubscription(\n    subscriptionId: string,\n    options?: PolicyStatesSummarizeForSubscriptionOptionalParams\n  ): Promise<PolicyStatesSummarizeForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, options },\n      summarizeForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy states for the resources under the resource group.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroup(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, subscriptionId, resourceGroupName, options },\n      listQueryResultsForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the resources under the resource group.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  summarizeForResourceGroup(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesSummarizeForResourceGroupOptionalParams\n  ): Promise<PolicyStatesSummarizeForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, resourceGroupName, options },\n      summarizeForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy states for the resource.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResource(\n    policyStatesResource: PolicyStatesResource,\n    resourceId: string,\n    options?: PolicyStatesListQueryResultsForResourceOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForResourceResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, resourceId, options },\n      listQueryResultsForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  summarizeForResource(\n    resourceId: string,\n    options?: PolicyStatesSummarizeForResourceOptionalParams\n  ): Promise<PolicyStatesSummarizeForResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, options },\n      summarizeForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Triggers a policy evaluation scan for all the resources under the subscription\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  async beginTriggerSubscriptionEvaluation(\n    subscriptionId: string,\n    options?: PolicyStatesTriggerSubscriptionEvaluationOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { subscriptionId, options },\n      triggerSubscriptionEvaluationOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Triggers a policy evaluation scan for all the resources under the subscription\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The options parameters.\n   */\n  async beginTriggerSubscriptionEvaluationAndWait(\n    subscriptionId: string,\n    options?: PolicyStatesTriggerSubscriptionEvaluationOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginTriggerSubscriptionEvaluation(\n      subscriptionId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Triggers a policy evaluation scan for all the resources under the resource group.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  async beginTriggerResourceGroupEvaluation(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesTriggerResourceGroupEvaluationOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { subscriptionId, resourceGroupName, options },\n      triggerResourceGroupEvaluationOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Triggers a policy evaluation scan for all the resources under the resource group.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param options The options parameters.\n   */\n  async beginTriggerResourceGroupEvaluationAndWait(\n    subscriptionId: string,\n    resourceGroupName: string,\n    options?: PolicyStatesTriggerResourceGroupEvaluationOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginTriggerResourceGroupEvaluation(\n      subscriptionId,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Queries policy states for the subscription level policy set definition.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicySetDefinition(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicySetDefinitionOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForPolicySetDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        policySetDefinitionName,\n        options\n      },\n      listQueryResultsForPolicySetDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the subscription level policy set definition.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param options The options parameters.\n   */\n  summarizeForPolicySetDefinition(\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    options?: PolicyStatesSummarizeForPolicySetDefinitionOptionalParams\n  ): Promise<PolicyStatesSummarizeForPolicySetDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policySetDefinitionName, options },\n      summarizeForPolicySetDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy states for the subscription level policy definition.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicyDefinition(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyStatesListQueryResultsForPolicyDefinitionOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForPolicyDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, subscriptionId, policyDefinitionName, options },\n      listQueryResultsForPolicyDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the subscription level policy definition.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param options The options parameters.\n   */\n  summarizeForPolicyDefinition(\n    subscriptionId: string,\n    policyDefinitionName: string,\n    options?: PolicyStatesSummarizeForPolicyDefinitionOptionalParams\n  ): Promise<PolicyStatesSummarizeForPolicyDefinitionResponse> {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policyDefinitionName, options },\n      summarizeForPolicyDefinitionOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy states for the subscription level policy assignment.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionLevelPolicyAssignment(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): Promise<\n    PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentResponse\n  > {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, subscriptionId, policyAssignmentName, options },\n      listQueryResultsForSubscriptionLevelPolicyAssignmentOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the subscription level policy assignment.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  summarizeForSubscriptionLevelPolicyAssignment(\n    subscriptionId: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentOptionalParams\n  ): Promise<\n    PolicyStatesSummarizeForSubscriptionLevelPolicyAssignmentResponse\n  > {\n    return this.client.sendOperationRequest(\n      { subscriptionId, policyAssignmentName, options },\n      summarizeForSubscriptionLevelPolicyAssignmentOperationSpec\n    );\n  }\n\n  /**\n   * Queries policy states for the resource group level policy assignment.\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupLevelPolicyAssignment(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): Promise<\n    PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        resourceGroupName,\n        policyAssignmentName,\n        options\n      },\n      listQueryResultsForResourceGroupLevelPolicyAssignmentOperationSpec\n    );\n  }\n\n  /**\n   * Summarizes policy states for the resource group level policy assignment.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param options The options parameters.\n   */\n  summarizeForResourceGroupLevelPolicyAssignment(\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    options?: PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentOptionalParams\n  ): Promise<\n    PolicyStatesSummarizeForResourceGroupLevelPolicyAssignmentResponse\n  > {\n    return this.client.sendOperationRequest(\n      { subscriptionId, resourceGroupName, policyAssignmentName, options },\n      summarizeForResourceGroupLevelPolicyAssignmentOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForManagementGroupNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param managementGroupName Management group name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForManagementGroup method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForManagementGroupNext(\n    policyStatesResource: PolicyStatesResource,\n    managementGroupName: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForManagementGroupNextOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForManagementGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, managementGroupName, nextLink, options },\n      listQueryResultsForManagementGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForSubscriptionNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForSubscription method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionNext(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionNextOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForSubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, subscriptionId, nextLink, options },\n      listQueryResultsForSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceGroupNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupNext(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupNextOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        resourceGroupName,\n        nextLink,\n        options\n      },\n      listQueryResultsForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param resourceId Resource ID.\n   * @param nextLink The nextLink from the previous successful call to the ListQueryResultsForResource\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceNext(\n    policyStatesResource: PolicyStatesResource,\n    resourceId: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForResourceNextOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { policyStatesResource, resourceId, nextLink, options },\n      listQueryResultsForResourceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForPolicySetDefinitionNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policySetDefinitionName Policy set definition name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForPolicySetDefinition method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicySetDefinitionNext(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policySetDefinitionName: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForPolicySetDefinitionNextOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForPolicySetDefinitionNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        policySetDefinitionName,\n        nextLink,\n        options\n      },\n      listQueryResultsForPolicySetDefinitionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForPolicyDefinitionNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyDefinitionName Policy definition name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForPolicyDefinition method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForPolicyDefinitionNext(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyDefinitionName: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForPolicyDefinitionNextOptionalParams\n  ): Promise<PolicyStatesListQueryResultsForPolicyDefinitionNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        policyDefinitionName,\n        nextLink,\n        options\n      },\n      listQueryResultsForPolicyDefinitionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForSubscriptionLevelPolicyAssignmentNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param policyAssignmentName Policy assignment name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForSubscriptionLevelPolicyAssignment method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForSubscriptionLevelPolicyAssignmentNext(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    policyAssignmentName: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextOptionalParams\n  ): Promise<\n    PolicyStatesListQueryResultsForSubscriptionLevelPolicyAssignmentNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        policyAssignmentName,\n        nextLink,\n        options\n      },\n      listQueryResultsForSubscriptionLevelPolicyAssignmentNextOperationSpec\n    );\n  }\n\n  /**\n   * ListQueryResultsForResourceGroupLevelPolicyAssignmentNext\n   * @param policyStatesResource The virtual resource under PolicyStates resource type. In a given time\n   *                             range, 'latest' represents the latest policy state(s), whereas 'default' represents all policy\n   *                             state(s).\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param resourceGroupName Resource group name.\n   * @param policyAssignmentName Policy assignment name.\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListQueryResultsForResourceGroupLevelPolicyAssignment method.\n   * @param options The options parameters.\n   */\n  private _listQueryResultsForResourceGroupLevelPolicyAssignmentNext(\n    policyStatesResource: PolicyStatesResource,\n    subscriptionId: string,\n    resourceGroupName: string,\n    policyAssignmentName: string,\n    nextLink: string,\n    options?: PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextOptionalParams\n  ): Promise<\n    PolicyStatesListQueryResultsForResourceGroupLevelPolicyAssignmentNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        policyStatesResource,\n        subscriptionId,\n        resourceGroupName,\n        policyAssignmentName,\n        nextLink,\n        options\n      },\n      listQueryResultsForResourceGroupLevelPolicyAssignmentNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listQueryResultsForManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForManagementGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/{managementGroupsNamespace}/managementGroups/{managementGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId1,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId1,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken,\n    Parameters.expand\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst triggerSubscriptionEvaluationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst triggerResourceGroupEvaluationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/policyStates/latest/triggerEvaluation\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicySetDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policySetDefinitionName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForPolicySetDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policySetDefinitions/{policySetDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policySetDefinitionName,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicyDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyDefinitionName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForPolicyDefinitionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyDefinitions/{policyDefinitionName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyDefinitionName,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionLevelPolicyAssignmentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForSubscriptionLevelPolicyAssignmentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupLevelPolicyAssignmentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesResource}/queryResults\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst summarizeForResourceGroupLevelPolicyAssignmentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{authorizationNamespace}/policyAssignments/{policyAssignmentName}/providers/Microsoft.PolicyInsights/policyStates/{policyStatesSummaryResource}/summarize\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SummarizeResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.fromParam,\n    Parameters.to\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName,\n    Parameters.policyStatesSummaryResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForManagementGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.managementGroupsNamespace,\n    Parameters.managementGroupName,\n    Parameters.nextLink,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId1,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.subscriptionId1,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken,\n    Parameters.expand\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.nextLink,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicySetDefinitionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policySetDefinitionName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForPolicyDefinitionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyDefinitionName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForSubscriptionLevelPolicyAssignmentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.nextLink,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listQueryResultsForResourceGroupLevelPolicyAssignmentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyStatesQueryResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [\n    Parameters.top,\n    Parameters.filter,\n    Parameters.apiVersion2,\n    Parameters.orderBy,\n    Parameters.select,\n    Parameters.fromParam,\n    Parameters.to,\n    Parameters.apply,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.subscriptionId1,\n    Parameters.authorizationNamespace,\n    Parameters.policyAssignmentName,\n    Parameters.policyStatesResource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport {\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists available operations.\n   * @param options The options parameters.\n   */\n  list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.PolicyInsights/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsListResults\n    },\n    default: {\n      bodyMapper: Mappers.QueryFailure\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PolicyMetadataOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport {\n  SlimPolicyMetadata,\n  PolicyMetadataListNextOptionalParams,\n  PolicyMetadataListOptionalParams,\n  PolicyMetadataGetResourceOptionalParams,\n  PolicyMetadataGetResourceResponse,\n  PolicyMetadataListResponse,\n  PolicyMetadataListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PolicyMetadataOperations operations. */\nexport class PolicyMetadataOperationsImpl implements PolicyMetadataOperations {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class PolicyMetadataOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a list of the policy metadata resources.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: PolicyMetadataListOptionalParams\n  ): PagedAsyncIterableIterator<SlimPolicyMetadata> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: PolicyMetadataListOptionalParams\n  ): AsyncIterableIterator<SlimPolicyMetadata[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: PolicyMetadataListOptionalParams\n  ): AsyncIterableIterator<SlimPolicyMetadata> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get policy metadata resource.\n   * @param resourceName The name of the policy metadata resource.\n   * @param options The options parameters.\n   */\n  getResource(\n    resourceName: string,\n    options?: PolicyMetadataGetResourceOptionalParams\n  ): Promise<PolicyMetadataGetResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceName, options },\n      getResourceOperationSpec\n    );\n  }\n\n  /**\n   * Get a list of the policy metadata resources.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: PolicyMetadataListOptionalParams\n  ): Promise<PolicyMetadataListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: PolicyMetadataListNextOptionalParams\n  ): Promise<PolicyMetadataListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getResourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.PolicyInsights/policyMetadata/{resourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyMetadata\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.resourceName],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.PolicyInsights/policyMetadata\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyMetadataCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PolicyMetadataCollection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PolicyRestrictions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport {\n  CheckRestrictionsRequest,\n  PolicyRestrictionsCheckAtSubscriptionScopeOptionalParams,\n  PolicyRestrictionsCheckAtSubscriptionScopeResponse,\n  PolicyRestrictionsCheckAtResourceGroupScopeOptionalParams,\n  PolicyRestrictionsCheckAtResourceGroupScopeResponse\n} from \"../models\";\n\n/** Class containing PolicyRestrictions operations. */\nexport class PolicyRestrictionsImpl implements PolicyRestrictions {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class PolicyRestrictions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Checks what restrictions Azure Policy will place on a resource within a subscription.\n   * @param parameters The check policy restrictions parameters.\n   * @param options The options parameters.\n   */\n  checkAtSubscriptionScope(\n    parameters: CheckRestrictionsRequest,\n    options?: PolicyRestrictionsCheckAtSubscriptionScopeOptionalParams\n  ): Promise<PolicyRestrictionsCheckAtSubscriptionScopeResponse> {\n    return this.client.sendOperationRequest(\n      { parameters, options },\n      checkAtSubscriptionScopeOperationSpec\n    );\n  }\n\n  /**\n   * Checks what restrictions Azure Policy will place on a resource within a resource group. Use this\n   * when the resource group the resource will be created in is already known.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The check policy restrictions parameters.\n   * @param options The options parameters.\n   */\n  checkAtResourceGroupScope(\n    resourceGroupName: string,\n    parameters: CheckRestrictionsRequest,\n    options?: PolicyRestrictionsCheckAtResourceGroupScopeOptionalParams\n  ): Promise<PolicyRestrictionsCheckAtResourceGroupScopeResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, parameters, options },\n      checkAtResourceGroupScopeOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkAtSubscriptionScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/checkPolicyRestrictions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckRestrictionsResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst checkAtResourceGroupScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/checkPolicyRestrictions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckRestrictionsResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Attestations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PolicyInsightsClient } from \"../policyInsightsClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Attestation,\n  AttestationsListForSubscriptionNextOptionalParams,\n  AttestationsListForSubscriptionOptionalParams,\n  AttestationsListForResourceGroupNextOptionalParams,\n  AttestationsListForResourceGroupOptionalParams,\n  AttestationsListForResourceNextOptionalParams,\n  AttestationsListForResourceOptionalParams,\n  AttestationsListForSubscriptionResponse,\n  AttestationsCreateOrUpdateAtSubscriptionOptionalParams,\n  AttestationsCreateOrUpdateAtSubscriptionResponse,\n  AttestationsGetAtSubscriptionOptionalParams,\n  AttestationsGetAtSubscriptionResponse,\n  AttestationsDeleteAtSubscriptionOptionalParams,\n  AttestationsListForResourceGroupResponse,\n  AttestationsCreateOrUpdateAtResourceGroupOptionalParams,\n  AttestationsCreateOrUpdateAtResourceGroupResponse,\n  AttestationsGetAtResourceGroupOptionalParams,\n  AttestationsGetAtResourceGroupResponse,\n  AttestationsDeleteAtResourceGroupOptionalParams,\n  AttestationsListForResourceResponse,\n  AttestationsCreateOrUpdateAtResourceOptionalParams,\n  AttestationsCreateOrUpdateAtResourceResponse,\n  AttestationsGetAtResourceOptionalParams,\n  AttestationsGetAtResourceResponse,\n  AttestationsDeleteAtResourceOptionalParams,\n  AttestationsListForSubscriptionNextResponse,\n  AttestationsListForResourceGroupNextResponse,\n  AttestationsListForResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Attestations operations. */\nexport class AttestationsImpl implements Attestations {\n  private readonly client: PolicyInsightsClient;\n\n  /**\n   * Initialize a new instance of the class Attestations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PolicyInsightsClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all attestations for the subscription.\n   * @param options The options parameters.\n   */\n  public listForSubscription(\n    options?: AttestationsListForSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<Attestation> {\n    const iter = this.listForSubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForSubscriptionPagingPage(options);\n      }\n    };\n  }\n\n  private async *listForSubscriptionPagingPage(\n    options?: AttestationsListForSubscriptionOptionalParams\n  ): AsyncIterableIterator<Attestation[]> {\n    let result = await this._listForSubscription(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForSubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForSubscriptionPagingAll(\n    options?: AttestationsListForSubscriptionOptionalParams\n  ): AsyncIterableIterator<Attestation> {\n    for await (const page of this.listForSubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all attestations for the resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listForResourceGroup(\n    resourceGroupName: string,\n    options?: AttestationsListForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Attestation> {\n    const iter = this.listForResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listForResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: AttestationsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<Attestation[]> {\n    let result = await this._listForResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: AttestationsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<Attestation> {\n    for await (const page of this.listForResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all attestations for a resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  public listForResource(\n    resourceId: string,\n    options?: AttestationsListForResourceOptionalParams\n  ): PagedAsyncIterableIterator<Attestation> {\n    const iter = this.listForResourcePagingAll(resourceId, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listForResourcePagingPage(resourceId, options);\n      }\n    };\n  }\n\n  private async *listForResourcePagingPage(\n    resourceId: string,\n    options?: AttestationsListForResourceOptionalParams\n  ): AsyncIterableIterator<Attestation[]> {\n    let result = await this._listForResource(resourceId, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listForResourceNext(\n        resourceId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listForResourcePagingAll(\n    resourceId: string,\n    options?: AttestationsListForResourceOptionalParams\n  ): AsyncIterableIterator<Attestation> {\n    for await (const page of this.listForResourcePagingPage(\n      resourceId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all attestations for the subscription.\n   * @param options The options parameters.\n   */\n  private _listForSubscription(\n    options?: AttestationsListForSubscriptionOptionalParams\n  ): Promise<AttestationsListForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an attestation at subscription scope.\n   * @param attestationName The name of the attestation.\n   * @param parameters The attestation parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtSubscription(\n    attestationName: string,\n    parameters: Attestation,\n    options?: AttestationsCreateOrUpdateAtSubscriptionOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AttestationsCreateOrUpdateAtSubscriptionResponse>,\n      AttestationsCreateOrUpdateAtSubscriptionResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AttestationsCreateOrUpdateAtSubscriptionResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { attestationName, parameters, options },\n      createOrUpdateAtSubscriptionOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates an attestation at subscription scope.\n   * @param attestationName The name of the attestation.\n   * @param parameters The attestation parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtSubscriptionAndWait(\n    attestationName: string,\n    parameters: Attestation,\n    options?: AttestationsCreateOrUpdateAtSubscriptionOptionalParams\n  ): Promise<AttestationsCreateOrUpdateAtSubscriptionResponse> {\n    const poller = await this.beginCreateOrUpdateAtSubscription(\n      attestationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets an existing attestation at subscription scope.\n   * @param attestationName The name of the attestation.\n   * @param options The options parameters.\n   */\n  getAtSubscription(\n    attestationName: string,\n    options?: AttestationsGetAtSubscriptionOptionalParams\n  ): Promise<AttestationsGetAtSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { attestationName, options },\n      getAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing attestation at subscription scope.\n   * @param attestationName The name of the attestation.\n   * @param options The options parameters.\n   */\n  deleteAtSubscription(\n    attestationName: string,\n    options?: AttestationsDeleteAtSubscriptionOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { attestationName, options },\n      deleteAtSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Gets all attestations for the resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroup(\n    resourceGroupName: string,\n    options?: AttestationsListForResourceGroupOptionalParams\n  ): Promise<AttestationsListForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an attestation at resource group scope.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param attestationName The name of the attestation.\n   * @param parameters The attestation parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtResourceGroup(\n    resourceGroupName: string,\n    attestationName: string,\n    parameters: Attestation,\n    options?: AttestationsCreateOrUpdateAtResourceGroupOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AttestationsCreateOrUpdateAtResourceGroupResponse>,\n      AttestationsCreateOrUpdateAtResourceGroupResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AttestationsCreateOrUpdateAtResourceGroupResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, attestationName, parameters, options },\n      createOrUpdateAtResourceGroupOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates an attestation at resource group scope.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param attestationName The name of the attestation.\n   * @param parameters The attestation parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtResourceGroupAndWait(\n    resourceGroupName: string,\n    attestationName: string,\n    parameters: Attestation,\n    options?: AttestationsCreateOrUpdateAtResourceGroupOptionalParams\n  ): Promise<AttestationsCreateOrUpdateAtResourceGroupResponse> {\n    const poller = await this.beginCreateOrUpdateAtResourceGroup(\n      resourceGroupName,\n      attestationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets an existing attestation at resource group scope.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param attestationName The name of the attestation.\n   * @param options The options parameters.\n   */\n  getAtResourceGroup(\n    resourceGroupName: string,\n    attestationName: string,\n    options?: AttestationsGetAtResourceGroupOptionalParams\n  ): Promise<AttestationsGetAtResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, attestationName, options },\n      getAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing attestation at resource group scope.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param attestationName The name of the attestation.\n   * @param options The options parameters.\n   */\n  deleteAtResourceGroup(\n    resourceGroupName: string,\n    attestationName: string,\n    options?: AttestationsDeleteAtResourceGroupOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, attestationName, options },\n      deleteAtResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all attestations for a resource.\n   * @param resourceId Resource ID.\n   * @param options The options parameters.\n   */\n  private _listForResource(\n    resourceId: string,\n    options?: AttestationsListForResourceOptionalParams\n  ): Promise<AttestationsListForResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, options },\n      listForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an attestation at resource scope.\n   * @param resourceId Resource ID.\n   * @param attestationName The name of the attestation.\n   * @param parameters The attestation parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtResource(\n    resourceId: string,\n    attestationName: string,\n    parameters: Attestation,\n    options?: AttestationsCreateOrUpdateAtResourceOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AttestationsCreateOrUpdateAtResourceResponse>,\n      AttestationsCreateOrUpdateAtResourceResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AttestationsCreateOrUpdateAtResourceResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceId, attestationName, parameters, options },\n      createOrUpdateAtResourceOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates an attestation at resource scope.\n   * @param resourceId Resource ID.\n   * @param attestationName The name of the attestation.\n   * @param parameters The attestation parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAtResourceAndWait(\n    resourceId: string,\n    attestationName: string,\n    parameters: Attestation,\n    options?: AttestationsCreateOrUpdateAtResourceOptionalParams\n  ): Promise<AttestationsCreateOrUpdateAtResourceResponse> {\n    const poller = await this.beginCreateOrUpdateAtResource(\n      resourceId,\n      attestationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets an existing attestation at resource scope.\n   * @param resourceId Resource ID.\n   * @param attestationName The name of the attestation.\n   * @param options The options parameters.\n   */\n  getAtResource(\n    resourceId: string,\n    attestationName: string,\n    options?: AttestationsGetAtResourceOptionalParams\n  ): Promise<AttestationsGetAtResourceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, attestationName, options },\n      getAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * Deletes an existing attestation at individual resource scope.\n   * @param resourceId Resource ID.\n   * @param attestationName The name of the attestation.\n   * @param options The options parameters.\n   */\n  deleteAtResource(\n    resourceId: string,\n    attestationName: string,\n    options?: AttestationsDeleteAtResourceOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceId, attestationName, options },\n      deleteAtResourceOperationSpec\n    );\n  }\n\n  /**\n   * ListForSubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListForSubscription method.\n   * @param options The options parameters.\n   */\n  private _listForSubscriptionNext(\n    nextLink: string,\n    options?: AttestationsListForSubscriptionNextOptionalParams\n  ): Promise<AttestationsListForSubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listForSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: AttestationsListForResourceGroupNextOptionalParams\n  ): Promise<AttestationsListForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceNext\n   * @param resourceId Resource ID.\n   * @param nextLink The nextLink from the previous successful call to the ListForResource method.\n   * @param options The options parameters.\n   */\n  private _listForResourceNext(\n    resourceId: string,\n    nextLink: string,\n    options?: AttestationsListForResourceNextOptionalParams\n  ): Promise<AttestationsListForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceId, nextLink, options },\n      listForResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/attestations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttestationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion4],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Attestation\n    },\n    201: {\n      bodyMapper: Mappers.Attestation\n    },\n    202: {\n      bodyMapper: Mappers.Attestation\n    },\n    204: {\n      bodyMapper: Mappers.Attestation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Attestation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/attestations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttestationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Attestation\n    },\n    201: {\n      bodyMapper: Mappers.Attestation\n    },\n    202: {\n      bodyMapper: Mappers.Attestation\n    },\n    204: {\n      bodyMapper: Mappers.Attestation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Attestation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName1,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/{resourceId}/providers/Microsoft.PolicyInsights/attestations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttestationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion4],\n  urlParameters: [Parameters.$host, Parameters.resourceId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Attestation\n    },\n    201: {\n      bodyMapper: Mappers.Attestation\n    },\n    202: {\n      bodyMapper: Mappers.Attestation\n    },\n    204: {\n      bodyMapper: Mappers.Attestation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Attestation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteAtResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{resourceId}/providers/Microsoft.PolicyInsights/attestations/{attestationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.resourceId,\n    Parameters.attestationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttestationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttestationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion4],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttestationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated2\n    }\n  },\n  queryParameters: [Parameters.top, Parameters.filter, Parameters.apiVersion4],\n  urlParameters: [Parameters.$host, Parameters.resourceId, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  PolicyTrackedResourcesImpl,\n  RemediationsImpl,\n  PolicyEventsImpl,\n  PolicyStatesImpl,\n  OperationsImpl,\n  PolicyMetadataOperationsImpl,\n  PolicyRestrictionsImpl,\n  AttestationsImpl\n} from \"./operations\";\nimport {\n  PolicyTrackedResources,\n  Remediations,\n  PolicyEvents,\n  PolicyStates,\n  Operations,\n  PolicyMetadataOperations,\n  PolicyRestrictions,\n  Attestations\n} from \"./operationsInterfaces\";\nimport { PolicyInsightsClientOptionalParams } from \"./models\";\n\nexport class PolicyInsightsClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the PolicyInsightsClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Microsoft Azure subscription ID.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: PolicyInsightsClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: PolicyInsightsClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-policyinsights/5.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.policyTrackedResources = new PolicyTrackedResourcesImpl(this);\n    this.remediations = new RemediationsImpl(this);\n    this.policyEvents = new PolicyEventsImpl(this);\n    this.policyStates = new PolicyStatesImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.policyMetadataOperations = new PolicyMetadataOperationsImpl(this);\n    this.policyRestrictions = new PolicyRestrictionsImpl(this);\n    this.attestations = new AttestationsImpl(this);\n  }\n\n  policyTrackedResources: PolicyTrackedResources;\n  remediations: Remediations;\n  policyEvents: PolicyEvents;\n  policyStates: PolicyStates;\n  operations: Operations;\n  policyMetadataOperations: PolicyMetadataOperations;\n  policyRestrictions: PolicyRestrictions;\n  attestations: Attestations;\n}\n"],"names":["KnownResourceDiscoveryMode","KnownCreatedByType","KnownPolicyStatesResource","KnownFieldRestrictionResult","KnownComplianceState","RemediationMapper","CheckRestrictionsRequestMapper","AttestationMapper","__asyncValues","__asyncDelegator","coreClient.createSerializer","Mappers.PolicyTrackedResourcesQueryResults","Mappers.QueryFailure","Parameters.top","Parameters.filter","Parameters.apiVersion","Parameters.$host","Parameters.managementGroupsNamespace","Parameters.managementGroupName","Parameters.policyTrackedResourcesResource","Parameters.accept","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.resourceId","Parameters.nextLink","serializer","Mappers.RemediationDeploymentsListResult","Mappers.ErrorResponse","Parameters.apiVersion1","Parameters.managementGroupId","Parameters.remediationName","Mappers.Remediation","Mappers.RemediationListResult","Parameters.parameters","Parameters.contentType","listQueryResultsForManagementGroupOperationSpec","listQueryResultsForSubscriptionOperationSpec","listQueryResultsForResourceGroupOperationSpec","listQueryResultsForResourceOperationSpec","listQueryResultsForManagementGroupNextOperationSpec","listQueryResultsForSubscriptionNextOperationSpec","listQueryResultsForResourceGroupNextOperationSpec","listQueryResultsForResourceNextOperationSpec","Mappers.PolicyEventsQueryResults","Parameters.apiVersion2","Parameters.orderBy","Parameters.select","Parameters.fromParam","Parameters.to","Parameters.apply","Parameters.skipToken","Parameters.policyEventsResource","Parameters.subscriptionId1","Parameters.expand","Parameters.authorizationNamespace","Parameters.policySetDefinitionName","Parameters.policyDefinitionName","Parameters.policyAssignmentName","LroEngine","listQueryResultsForPolicySetDefinitionOperationSpec","listQueryResultsForPolicyDefinitionOperationSpec","listQueryResultsForSubscriptionLevelPolicyAssignmentOperationSpec","listQueryResultsForResourceGroupLevelPolicyAssignmentOperationSpec","listQueryResultsForPolicySetDefinitionNextOperationSpec","listQueryResultsForPolicyDefinitionNextOperationSpec","listQueryResultsForSubscriptionLevelPolicyAssignmentNextOperationSpec","listQueryResultsForResourceGroupLevelPolicyAssignmentNextOperationSpec","Mappers.PolicyStatesQueryResults","Parameters.policyStatesResource","Mappers.SummarizeResults","Parameters.policyStatesSummaryResource","Mappers.OperationsListResults","listOperationSpec","Mappers.PolicyMetadata","Mappers.ErrorResponseAutoGenerated","Parameters.resourceName","Mappers.PolicyMetadataCollection","Mappers.CheckRestrictionsResult","Parameters.parameters1","Parameters.apiVersion3","Parameters.resourceGroupName1","listForSubscriptionOperationSpec","createOrUpdateAtSubscriptionOperationSpec","getAtSubscriptionOperationSpec","deleteAtSubscriptionOperationSpec","listForResourceGroupOperationSpec","createOrUpdateAtResourceGroupOperationSpec","getAtResourceGroupOperationSpec","deleteAtResourceGroupOperationSpec","listForResourceOperationSpec","createOrUpdateAtResourceOperationSpec","getAtResourceOperationSpec","deleteAtResourceOperationSpec","listForSubscriptionNextOperationSpec","listForResourceGroupNextOperationSpec","listForResourceNextOperationSpec","Mappers.AttestationListResult","Mappers.ErrorResponseAutoGenerated2","Parameters.apiVersion4","Mappers.Attestation","Parameters.parameters2","Parameters.attestationName","coreClient.ServiceClient"],"mappings":"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"}