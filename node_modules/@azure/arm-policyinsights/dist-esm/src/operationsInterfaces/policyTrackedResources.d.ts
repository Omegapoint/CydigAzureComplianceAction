import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PolicyTrackedResource, PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams, PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams, PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams, PolicyTrackedResourcesListQueryResultsForResourceOptionalParams } from "../models";
/** Interface representing a PolicyTrackedResources. */
export interface PolicyTrackedResources {
    /**
     * Queries policy tracked resources under the management group.
     * @param managementGroupName Management group name.
     * @param options The options parameters.
     */
    listQueryResultsForManagementGroup(managementGroupName: string, options?: PolicyTrackedResourcesListQueryResultsForManagementGroupOptionalParams): PagedAsyncIterableIterator<PolicyTrackedResource>;
    /**
     * Queries policy tracked resources under the subscription.
     * @param options The options parameters.
     */
    listQueryResultsForSubscription(options?: PolicyTrackedResourcesListQueryResultsForSubscriptionOptionalParams): PagedAsyncIterableIterator<PolicyTrackedResource>;
    /**
     * Queries policy tracked resources under the resource group.
     * @param resourceGroupName Resource group name.
     * @param options The options parameters.
     */
    listQueryResultsForResourceGroup(resourceGroupName: string, options?: PolicyTrackedResourcesListQueryResultsForResourceGroupOptionalParams): PagedAsyncIterableIterator<PolicyTrackedResource>;
    /**
     * Queries policy tracked resources under the resource.
     * @param resourceId Resource ID.
     * @param options The options parameters.
     */
    listQueryResultsForResource(resourceId: string, options?: PolicyTrackedResourcesListQueryResultsForResourceOptionalParams): PagedAsyncIterableIterator<PolicyTrackedResource>;
}
//# sourceMappingURL=policyTrackedResources.d.ts.map