import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { PolicyTrackedResources, Remediations, PolicyEvents, PolicyStates, Operations, PolicyMetadataOperations, PolicyRestrictions, Attestations } from "./operationsInterfaces";
import { PolicyInsightsClientOptionalParams } from "./models";
export declare class PolicyInsightsClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the PolicyInsightsClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Microsoft Azure subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: PolicyInsightsClientOptionalParams);
    policyTrackedResources: PolicyTrackedResources;
    remediations: Remediations;
    policyEvents: PolicyEvents;
    policyStates: PolicyStates;
    operations: Operations;
    policyMetadataOperations: PolicyMetadataOperations;
    policyRestrictions: PolicyRestrictions;
    attestations: Attestations;
}
//# sourceMappingURL=policyInsightsClient.d.ts.map