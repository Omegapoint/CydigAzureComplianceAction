import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PolicyMetadataOperations } from "../operationsInterfaces";
import { PolicyInsightsClient } from "../policyInsightsClient";
import { SlimPolicyMetadata, PolicyMetadataListOptionalParams, PolicyMetadataGetResourceOptionalParams, PolicyMetadataGetResourceResponse } from "../models";
/** Class containing PolicyMetadataOperations operations. */
export declare class PolicyMetadataOperationsImpl implements PolicyMetadataOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class PolicyMetadataOperations class.
     * @param client Reference to the service client
     */
    constructor(client: PolicyInsightsClient);
    /**
     * Get a list of the policy metadata resources.
     * @param options The options parameters.
     */
    list(options?: PolicyMetadataListOptionalParams): PagedAsyncIterableIterator<SlimPolicyMetadata>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get policy metadata resource.
     * @param resourceName The name of the policy metadata resource.
     * @param options The options parameters.
     */
    getResource(resourceName: string, options?: PolicyMetadataGetResourceOptionalParams): Promise<PolicyMetadataGetResourceResponse>;
    /**
     * Get a list of the policy metadata resources.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=policyMetadataOperations.d.ts.map