import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RoleEligibilitySchedules } from "../operationsInterfaces";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import { RoleEligibilitySchedule, RoleEligibilitySchedulesListForScopeOptionalParams, RoleEligibilitySchedulesGetOptionalParams, RoleEligibilitySchedulesGetResponse } from "../models";
/** Class containing RoleEligibilitySchedules operations. */
export declare class RoleEligibilitySchedulesImpl implements RoleEligibilitySchedules {
    private readonly client;
    /**
     * Initialize a new instance of the class RoleEligibilitySchedules class.
     * @param client Reference to the service client
     */
    constructor(client: AuthorizationManagementClient);
    /**
     * Gets role eligibility schedules for a resource scope.
     * @param scope The scope of the role eligibility schedules.
     * @param options The options parameters.
     */
    listForScope(scope: string, options?: RoleEligibilitySchedulesListForScopeOptionalParams): PagedAsyncIterableIterator<RoleEligibilitySchedule>;
    private listForScopePagingPage;
    private listForScopePagingAll;
    /**
     * Get the specified role eligibility schedule for a resource scope
     * @param scope The scope of the role eligibility schedule.
     * @param roleEligibilityScheduleName The name (guid) of the role eligibility schedule to get.
     * @param options The options parameters.
     */
    get(scope: string, roleEligibilityScheduleName: string, options?: RoleEligibilitySchedulesGetOptionalParams): Promise<RoleEligibilitySchedulesGetResponse>;
    /**
     * Gets role eligibility schedules for a resource scope.
     * @param scope The scope of the role eligibility schedules.
     * @param options The options parameters.
     */
    private _listForScope;
    /**
     * ListForScopeNext
     * @param scope The scope of the role eligibility schedules.
     * @param nextLink The nextLink from the previous successful call to the ListForScope method.
     * @param options The options parameters.
     */
    private _listForScopeNext;
}
//# sourceMappingURL=roleEligibilitySchedules.d.ts.map