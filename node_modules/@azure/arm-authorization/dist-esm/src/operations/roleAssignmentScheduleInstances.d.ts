import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RoleAssignmentScheduleInstances } from "../operationsInterfaces";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import { RoleAssignmentScheduleInstance, RoleAssignmentScheduleInstancesListForScopeOptionalParams, RoleAssignmentScheduleInstancesGetOptionalParams, RoleAssignmentScheduleInstancesGetResponse } from "../models";
/** Class containing RoleAssignmentScheduleInstances operations. */
export declare class RoleAssignmentScheduleInstancesImpl implements RoleAssignmentScheduleInstances {
    private readonly client;
    /**
     * Initialize a new instance of the class RoleAssignmentScheduleInstances class.
     * @param client Reference to the service client
     */
    constructor(client: AuthorizationManagementClient);
    /**
     * Gets role assignment schedule instances of a role assignment schedule.
     * @param scope The scope of the role assignment schedule.
     * @param options The options parameters.
     */
    listForScope(scope: string, options?: RoleAssignmentScheduleInstancesListForScopeOptionalParams): PagedAsyncIterableIterator<RoleAssignmentScheduleInstance>;
    private listForScopePagingPage;
    private listForScopePagingAll;
    /**
     * Gets role assignment schedule instances of a role assignment schedule.
     * @param scope The scope of the role assignment schedule.
     * @param options The options parameters.
     */
    private _listForScope;
    /**
     * Gets the specified role assignment schedule instance.
     * @param scope The scope of the role assignments schedules.
     * @param roleAssignmentScheduleInstanceName The name (hash of schedule name + time) of the role
     *                                           assignment schedule to get.
     * @param options The options parameters.
     */
    get(scope: string, roleAssignmentScheduleInstanceName: string, options?: RoleAssignmentScheduleInstancesGetOptionalParams): Promise<RoleAssignmentScheduleInstancesGetResponse>;
    /**
     * ListForScopeNext
     * @param scope The scope of the role assignment schedule.
     * @param nextLink The nextLink from the previous successful call to the ListForScope method.
     * @param options The options parameters.
     */
    private _listForScopeNext;
}
//# sourceMappingURL=roleAssignmentScheduleInstances.d.ts.map