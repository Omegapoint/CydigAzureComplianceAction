import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ProviderOperationsMetadataOperations } from "../operationsInterfaces";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import { ProviderOperationsMetadata, ProviderOperationsMetadataListOptionalParams, ProviderOperationsMetadataGetOptionalParams, ProviderOperationsMetadataGetResponse } from "../models";
/** Class containing ProviderOperationsMetadataOperations operations. */
export declare class ProviderOperationsMetadataOperationsImpl implements ProviderOperationsMetadataOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class ProviderOperationsMetadataOperations class.
     * @param client Reference to the service client
     */
    constructor(client: AuthorizationManagementClient);
    /**
     * Gets provider operations metadata for all resource providers.
     * @param options The options parameters.
     */
    list(options?: ProviderOperationsMetadataListOptionalParams): PagedAsyncIterableIterator<ProviderOperationsMetadata>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Gets provider operations metadata for the specified resource provider.
     * @param resourceProviderNamespace The namespace of the resource provider.
     * @param options The options parameters.
     */
    get(resourceProviderNamespace: string, options?: ProviderOperationsMetadataGetOptionalParams): Promise<ProviderOperationsMetadataGetResponse>;
    /**
     * Gets provider operations metadata for all resource providers.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=providerOperationsMetadataOperations.d.ts.map