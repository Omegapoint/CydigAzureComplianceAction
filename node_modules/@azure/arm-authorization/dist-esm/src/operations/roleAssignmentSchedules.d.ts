import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { RoleAssignmentSchedules } from "../operationsInterfaces";
import { AuthorizationManagementClient } from "../authorizationManagementClient";
import { RoleAssignmentSchedule, RoleAssignmentSchedulesListForScopeOptionalParams, RoleAssignmentSchedulesGetOptionalParams, RoleAssignmentSchedulesGetResponse } from "../models";
/** Class containing RoleAssignmentSchedules operations. */
export declare class RoleAssignmentSchedulesImpl implements RoleAssignmentSchedules {
    private readonly client;
    /**
     * Initialize a new instance of the class RoleAssignmentSchedules class.
     * @param client Reference to the service client
     */
    constructor(client: AuthorizationManagementClient);
    /**
     * Gets role assignment schedules for a resource scope.
     * @param scope The scope of the role assignments schedules.
     * @param options The options parameters.
     */
    listForScope(scope: string, options?: RoleAssignmentSchedulesListForScopeOptionalParams): PagedAsyncIterableIterator<RoleAssignmentSchedule>;
    private listForScopePagingPage;
    private listForScopePagingAll;
    /**
     * Get the specified role assignment schedule for a resource scope
     * @param scope The scope of the role assignment schedule.
     * @param roleAssignmentScheduleName The name (guid) of the role assignment schedule to get.
     * @param options The options parameters.
     */
    get(scope: string, roleAssignmentScheduleName: string, options?: RoleAssignmentSchedulesGetOptionalParams): Promise<RoleAssignmentSchedulesGetResponse>;
    /**
     * Gets role assignment schedules for a resource scope.
     * @param scope The scope of the role assignments schedules.
     * @param options The options parameters.
     */
    private _listForScope;
    /**
     * ListForScopeNext
     * @param scope The scope of the role assignments schedules.
     * @param nextLink The nextLink from the previous successful call to the ListForScope method.
     * @param options The options parameters.
     */
    private _listForScopeNext;
}
//# sourceMappingURL=roleAssignmentSchedules.d.ts.map