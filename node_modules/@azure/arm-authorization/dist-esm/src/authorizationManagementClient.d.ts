import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { ClassicAdministrators, GlobalAdministrator, DenyAssignments, ProviderOperationsMetadataOperations, RoleAssignments, Permissions, RoleDefinitions, EligibleChildResources, RoleAssignmentSchedules, RoleAssignmentScheduleInstances, RoleAssignmentScheduleRequests, RoleEligibilitySchedules, RoleEligibilityScheduleInstances, RoleEligibilityScheduleRequests, RoleManagementPolicies, RoleManagementPolicyAssignments } from "./operationsInterfaces";
import { AuthorizationManagementClientOptionalParams } from "./models";
export declare class AuthorizationManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AuthorizationManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AuthorizationManagementClientOptionalParams);
    classicAdministrators: ClassicAdministrators;
    globalAdministrator: GlobalAdministrator;
    denyAssignments: DenyAssignments;
    providerOperationsMetadataOperations: ProviderOperationsMetadataOperations;
    roleAssignments: RoleAssignments;
    permissions: Permissions;
    roleDefinitions: RoleDefinitions;
    eligibleChildResources: EligibleChildResources;
    roleAssignmentSchedules: RoleAssignmentSchedules;
    roleAssignmentScheduleInstances: RoleAssignmentScheduleInstances;
    roleAssignmentScheduleRequests: RoleAssignmentScheduleRequests;
    roleEligibilitySchedules: RoleEligibilitySchedules;
    roleEligibilityScheduleInstances: RoleEligibilityScheduleInstances;
    roleEligibilityScheduleRequests: RoleEligibilityScheduleRequests;
    roleManagementPolicies: RoleManagementPolicies;
    roleManagementPolicyAssignments: RoleManagementPolicyAssignments;
}
//# sourceMappingURL=authorizationManagementClient.d.ts.map