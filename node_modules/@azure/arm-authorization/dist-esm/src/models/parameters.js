/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { RoleAssignmentCreateParameters as RoleAssignmentCreateParametersMapper, RoleDefinition as RoleDefinitionMapper, RoleAssignmentScheduleRequest as RoleAssignmentScheduleRequestMapper, RoleEligibilityScheduleRequest as RoleEligibilityScheduleRequestMapper, RoleManagementPolicy as RoleManagementPolicyMapper, RoleManagementPolicyAssignment as RoleManagementPolicyAssignmentMapper } from "../models/mappers";
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String"
        }
    }
};
export const $host = {
    parameterPath: "$host",
    mapper: {
        serializedName: "$host",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2015-07-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        constraints: {
            MinLength: 1
        },
        serializedName: "subscriptionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        constraints: {
            MaxLength: 90,
            MinLength: 1
        },
        serializedName: "resourceGroupName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const resourceProviderNamespace = {
    parameterPath: "resourceProviderNamespace",
    mapper: {
        serializedName: "resourceProviderNamespace",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const parentResourcePath = {
    parameterPath: "parentResourcePath",
    mapper: {
        serializedName: "parentResourcePath",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceType = {
    parameterPath: "resourceType",
    mapper: {
        serializedName: "resourceType",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const resourceName = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2022-04-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const filter = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export const scope = {
    parameterPath: "scope",
    mapper: {
        serializedName: "scope",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const denyAssignmentId = {
    parameterPath: "denyAssignmentId",
    mapper: {
        serializedName: "denyAssignmentId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const denyAssignmentId1 = {
    parameterPath: "denyAssignmentId",
    mapper: {
        serializedName: "denyAssignmentId",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const expand = {
    parameterPath: ["options", "expand"],
    mapper: {
        defaultValue: "resourceTypes",
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export const filter1 = {
    parameterPath: ["options", "filter"],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const tenantId = {
    parameterPath: ["options", "tenantId"],
    mapper: {
        serializedName: "tenantId",
        type: {
            name: "String"
        }
    }
};
export const resourceName1 = {
    parameterPath: "resourceName",
    mapper: {
        serializedName: "resourceName",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const roleAssignmentName = {
    parameterPath: "roleAssignmentName",
    mapper: {
        serializedName: "roleAssignmentName",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const parameters = {
    parameterPath: "parameters",
    mapper: RoleAssignmentCreateParametersMapper
};
export const skipToken = {
    parameterPath: ["options", "skipToken"],
    mapper: {
        serializedName: "$skipToken",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const roleAssignmentId = {
    parameterPath: "roleAssignmentId",
    mapper: {
        serializedName: "roleAssignmentId",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const roleDefinitionId = {
    parameterPath: "roleDefinitionId",
    mapper: {
        serializedName: "roleDefinitionId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const roleDefinition = {
    parameterPath: "roleDefinition",
    mapper: RoleDefinitionMapper
};
export const roleId = {
    parameterPath: "roleId",
    mapper: {
        serializedName: "roleId",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-10-01",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const roleAssignmentScheduleName = {
    parameterPath: "roleAssignmentScheduleName",
    mapper: {
        serializedName: "roleAssignmentScheduleName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const roleAssignmentScheduleInstanceName = {
    parameterPath: "roleAssignmentScheduleInstanceName",
    mapper: {
        serializedName: "roleAssignmentScheduleInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters1 = {
    parameterPath: "parameters",
    mapper: RoleAssignmentScheduleRequestMapper
};
export const roleAssignmentScheduleRequestName = {
    parameterPath: "roleAssignmentScheduleRequestName",
    mapper: {
        serializedName: "roleAssignmentScheduleRequestName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const roleEligibilityScheduleName = {
    parameterPath: "roleEligibilityScheduleName",
    mapper: {
        serializedName: "roleEligibilityScheduleName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const roleEligibilityScheduleInstanceName = {
    parameterPath: "roleEligibilityScheduleInstanceName",
    mapper: {
        serializedName: "roleEligibilityScheduleInstanceName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters2 = {
    parameterPath: "parameters",
    mapper: RoleEligibilityScheduleRequestMapper
};
export const roleEligibilityScheduleRequestName = {
    parameterPath: "roleEligibilityScheduleRequestName",
    mapper: {
        serializedName: "roleEligibilityScheduleRequestName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const roleManagementPolicyName = {
    parameterPath: "roleManagementPolicyName",
    mapper: {
        serializedName: "roleManagementPolicyName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters3 = {
    parameterPath: "parameters",
    mapper: RoleManagementPolicyMapper
};
export const roleManagementPolicyAssignmentName = {
    parameterPath: "roleManagementPolicyAssignmentName",
    mapper: {
        serializedName: "roleManagementPolicyAssignmentName",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const parameters4 = {
    parameterPath: "parameters",
    mapper: RoleManagementPolicyAssignmentMapper
};
//# sourceMappingURL=parameters.js.map