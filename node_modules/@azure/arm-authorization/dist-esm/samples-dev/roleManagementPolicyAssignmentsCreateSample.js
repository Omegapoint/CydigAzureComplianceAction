/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AuthorizationManagementClient } from "@azure/arm-authorization";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Create a role management policy assignment
 *
 * @summary Create a role management policy assignment
 * x-ms-original-file: specification/authorization/resource-manager/Microsoft.Authorization/stable/2020-10-01/examples/PutRoleManagementPolicyAssignment.json
 */
function putRoleManagementPolicyAssignment() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["AUTHORIZATION_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const scope = "providers/Microsoft.Subscription/subscriptions/129ff972-28f8-46b8-a726-e497be039368";
        const roleManagementPolicyAssignmentName = "b959d571-f0b5-4042-88a7-01be6cb22db9_a1705bd2-3a8f-45a5-8683-466fcfd5cc24";
        const parameters = {
            policyId: "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleManagementPolicies/b959d571-f0b5-4042-88a7-01be6cb22db9",
            roleDefinitionId: "/subscriptions/129ff972-28f8-46b8-a726-e497be039368/providers/Microsoft.Authorization/roleDefinitions/a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
            scope: "/subscriptions/129ff972-28f8-46b8-a726-e497be039368"
        };
        const credential = new DefaultAzureCredential();
        const client = new AuthorizationManagementClient(credential, subscriptionId);
        const result = yield client.roleManagementPolicyAssignments.create(scope, roleManagementPolicyAssignmentName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        putRoleManagementPolicyAssignment();
    });
}
main().catch(console.error);
//# sourceMappingURL=roleManagementPolicyAssignmentsCreateSample.js.map