{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/classicAdministrators.ts","../src/operations/globalAdministrator.ts","../src/operations/denyAssignments.ts","../src/operations/providerOperationsMetadataOperations.ts","../src/operations/roleAssignments.ts","../src/operations/permissions.ts","../src/operations/roleDefinitions.ts","../src/operations/eligibleChildResources.ts","../src/operations/roleAssignmentSchedules.ts","../src/operations/roleAssignmentScheduleInstances.ts","../src/operations/roleAssignmentScheduleRequests.ts","../src/operations/roleEligibilitySchedules.ts","../src/operations/roleEligibilityScheduleInstances.ts","../src/operations/roleEligibilityScheduleRequests.ts","../src/operations/roleManagementPolicies.ts","../src/operations/roleManagementPolicyAssignments.ts","../src/authorizationManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type RoleManagementPolicyRuleUnion =\n  | RoleManagementPolicyRule\n  | RoleManagementPolicyApprovalRule\n  | RoleManagementPolicyAuthenticationContextRule\n  | RoleManagementPolicyEnablementRule\n  | RoleManagementPolicyExpirationRule\n  | RoleManagementPolicyNotificationRule;\n\n/** ClassicAdministrator list result information. */\nexport interface ClassicAdministratorListResult {\n  /** An array of administrators. */\n  value?: ClassicAdministrator[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Classic Administrators */\nexport interface ClassicAdministrator {\n  /** The ID of the administrator. */\n  id?: string;\n  /** The name of the administrator. */\n  name?: string;\n  /** The type of the administrator. */\n  type?: string;\n  /** The email address of the administrator. */\n  emailAddress?: string;\n  /** The role of the administrator. */\n  role?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** Deny assignment list operation result. */\nexport interface DenyAssignmentListResult {\n  /** Deny assignment list. */\n  value?: DenyAssignment[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Deny Assignment */\nexport interface DenyAssignment {\n  /**\n   * The deny assignment ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The deny assignment name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The deny assignment type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The display name of the deny assignment. */\n  denyAssignmentName?: string;\n  /** The description of the deny assignment. */\n  description?: string;\n  /** An array of permissions that are denied by the deny assignment. */\n  permissions?: DenyAssignmentPermission[];\n  /** The deny assignment scope. */\n  scope?: string;\n  /** Determines if the deny assignment applies to child scopes. Default value is false. */\n  doNotApplyToChildScopes?: boolean;\n  /** Array of principals to which the deny assignment applies. */\n  principals?: Principal[];\n  /** Array of principals to which the deny assignment does not apply. */\n  excludePrincipals?: Principal[];\n  /** Specifies whether this deny assignment was created by Azure and cannot be edited or deleted. */\n  isSystemProtected?: boolean;\n  /** The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. */\n  conditionVersion?: string;\n  /**\n   * Time it was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Time it was updated\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedOn?: Date;\n  /**\n   * Id of the user who created the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: string;\n  /**\n   * Id of the user who updated the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedBy?: string;\n}\n\n/** Deny assignment permissions. */\nexport interface DenyAssignmentPermission {\n  /** Actions to which the deny assignment does not grant access. */\n  actions?: string[];\n  /** Actions to exclude from that the deny assignment does not grant access. */\n  notActions?: string[];\n  /** Data actions to which the deny assignment does not grant access. */\n  dataActions?: string[];\n  /** Data actions to exclude from that the deny assignment does not grant access. */\n  notDataActions?: string[];\n  /** The conditions on the Deny assignment permission. This limits the resources it applies to. */\n  condition?: string;\n  /** Version of the condition. */\n  conditionVersion?: string;\n}\n\n/** The name of the entity last modified it */\nexport interface Principal {\n  /** The id of the principal made changes */\n  id?: string;\n  /** The name of the principal made changes */\n  displayName?: string;\n  /** Type of principal such as user , group etc */\n  type?: string;\n  /** Email of principal */\n  email?: string;\n}\n\n/** Provider Operations metadata */\nexport interface ProviderOperationsMetadata {\n  /** The provider id. */\n  id?: string;\n  /** The provider name. */\n  name?: string;\n  /** The provider type. */\n  type?: string;\n  /** The provider display name. */\n  displayName?: string;\n  /** The provider resource types */\n  resourceTypes?: ResourceType[];\n  /** The provider operations. */\n  operations?: ProviderOperation[];\n}\n\n/** Resource Type */\nexport interface ResourceType {\n  /** The resource type name. */\n  name?: string;\n  /** The resource type display name. */\n  displayName?: string;\n  /** The resource type operations. */\n  operations?: ProviderOperation[];\n}\n\n/** Operation */\nexport interface ProviderOperation {\n  /** The operation name. */\n  name?: string;\n  /** The operation display name. */\n  displayName?: string;\n  /** The operation description. */\n  description?: string;\n  /** The operation origin. */\n  origin?: string;\n  /** The operation properties. */\n  properties?: Record<string, unknown>;\n  /** The dataAction flag to specify the operation type. */\n  isDataAction?: boolean;\n}\n\n/** Provider operations metadata list */\nexport interface ProviderOperationsMetadataListResult {\n  /** The list of providers. */\n  value?: ProviderOperationsMetadata[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role assignment list operation result. */\nexport interface RoleAssignmentListResult {\n  /** Role assignment list. */\n  value?: RoleAssignment[];\n  /**\n   * The skipToken to use for getting the next set of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Role Assignments */\nexport interface RoleAssignment {\n  /**\n   * The role assignment ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role assignment name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role assignment type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The role assignment scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /** The principal type of the assigned principal ID. */\n  principalType?: PrincipalType;\n  /** Description of role assignment */\n  description?: string;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently the only accepted value is '2.0' */\n  conditionVersion?: string;\n  /**\n   * Time it was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Time it was updated\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedOn?: Date;\n  /**\n   * Id of the user who created the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: string;\n  /**\n   * Id of the user who updated the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedBy?: string;\n  /** Id of the delegated managed identity resource */\n  delegatedManagedIdentityResourceId?: string;\n}\n\n/** Role assignment create parameters. */\nexport interface RoleAssignmentCreateParameters {\n  /**\n   * The role assignment scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId: string;\n  /** The principal ID. */\n  principalId: string;\n  /** The principal type of the assigned principal ID. */\n  principalType?: PrincipalType;\n  /** Description of role assignment */\n  description?: string;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently the only accepted value is '2.0' */\n  conditionVersion?: string;\n  /**\n   * Time it was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Time it was updated\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedOn?: Date;\n  /**\n   * Id of the user who created the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: string;\n  /**\n   * Id of the user who updated the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedBy?: string;\n  /** Id of the delegated managed identity resource */\n  delegatedManagedIdentityResourceId?: string;\n}\n\n/** Permissions information. */\nexport interface PermissionGetResult {\n  /** An array of permissions. */\n  value?: Permission[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role definition permissions. */\nexport interface Permission {\n  /** Allowed actions. */\n  actions?: string[];\n  /** Denied actions. */\n  notActions?: string[];\n  /** Allowed Data actions. */\n  dataActions?: string[];\n  /** Denied Data actions. */\n  notDataActions?: string[];\n}\n\n/** Role definition. */\nexport interface RoleDefinition {\n  /**\n   * The role definition ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role definition name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role definition type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role name. */\n  roleName?: string;\n  /** The role definition description. */\n  description?: string;\n  /** The role type. */\n  roleType?: string;\n  /** Role definition permissions. */\n  permissions?: Permission[];\n  /** Role definition assignable scopes. */\n  assignableScopes?: string[];\n  /**\n   * Time it was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Time it was updated\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedOn?: Date;\n  /**\n   * Id of the user who created the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdBy?: string;\n  /**\n   * Id of the user who updated the assignment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedBy?: string;\n}\n\n/** Role definition list operation result. */\nexport interface RoleDefinitionListResult {\n  /** Role definition list. */\n  value?: RoleDefinition[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Eligible child resources list operation result. */\nexport interface EligibleChildResourcesListResult {\n  /** Eligible child resource list. */\n  value?: EligibleChildResource[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Eligible child resource */\nexport interface EligibleChildResource {\n  /**\n   * The resource scope Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** An error response from the service. */\nexport interface CloudError {\n  /** An error response from the service. */\n  error?: CloudErrorBody;\n}\n\n/** An error response from the service. */\nexport interface CloudErrorBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n}\n\n/** Role Assignment schedule */\nexport interface RoleAssignmentSchedule {\n  /**\n   * The role assignment schedule Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role assignment schedule name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role assignment schedule type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role assignment schedule scope. */\n  scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /** The principal type of the assigned principal ID. */\n  principalType?: PrincipalType;\n  /** The id of roleAssignmentScheduleRequest used to create this roleAssignmentSchedule */\n  roleAssignmentScheduleRequestId?: string;\n  /** The id of roleEligibilitySchedule used to activated this roleAssignmentSchedule */\n  linkedRoleEligibilityScheduleId?: string;\n  /** Assignment type of the role assignment schedule */\n  assignmentType?: AssignmentType;\n  /** Membership type of the role assignment schedule */\n  memberType?: MemberType;\n  /** The status of the role assignment schedule. */\n  status?: Status;\n  /** Start DateTime when role assignment schedule */\n  startDateTime?: Date;\n  /** End DateTime when role assignment schedule */\n  endDateTime?: Date;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently accepted value is '2.0' */\n  conditionVersion?: string;\n  /** DateTime when role assignment schedule was created */\n  createdOn?: Date;\n  /** DateTime when role assignment schedule was modified */\n  updatedOn?: Date;\n  /** Additional properties of principal, scope and role definition */\n  expandedProperties?: ExpandedProperties;\n}\n\nexport interface ExpandedProperties {\n  /** Details of the resource scope */\n  scope?: ExpandedPropertiesScope;\n  /** Details of role definition */\n  roleDefinition?: ExpandedPropertiesRoleDefinition;\n  /** Details of the principal */\n  principal?: ExpandedPropertiesPrincipal;\n}\n\n/** Details of the resource scope */\nexport interface ExpandedPropertiesScope {\n  /** Scope id of the resource */\n  id?: string;\n  /** Display name of the resource */\n  displayName?: string;\n  /** Type of the resource */\n  type?: string;\n}\n\n/** Details of role definition */\nexport interface ExpandedPropertiesRoleDefinition {\n  /** Id of the role definition */\n  id?: string;\n  /** Display name of the role definition */\n  displayName?: string;\n  /** Type of the role definition */\n  type?: string;\n}\n\n/** Details of the principal */\nexport interface ExpandedPropertiesPrincipal {\n  /** Id of the principal */\n  id?: string;\n  /** Display name of the principal */\n  displayName?: string;\n  /** Email id of the principal */\n  email?: string;\n  /** Type of the principal */\n  type?: string;\n}\n\n/** Role assignment schedule list operation result. */\nexport interface RoleAssignmentScheduleListResult {\n  /** Role assignment schedule list. */\n  value?: RoleAssignmentSchedule[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role assignment schedule instance list operation result. */\nexport interface RoleAssignmentScheduleInstanceListResult {\n  /** Role assignment schedule instance list. */\n  value?: RoleAssignmentScheduleInstance[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Information about current or upcoming role assignment schedule instance */\nexport interface RoleAssignmentScheduleInstance {\n  /**\n   * The role assignment schedule instance ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role assignment schedule instance name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role assignment schedule instance type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role assignment schedule scope. */\n  scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /** The principal type of the assigned principal ID. */\n  principalType?: PrincipalType;\n  /** Id of the master role assignment schedule */\n  roleAssignmentScheduleId?: string;\n  /** Role Assignment Id in external system */\n  originRoleAssignmentId?: string;\n  /** The status of the role assignment schedule instance. */\n  status?: Status;\n  /** The startDateTime of the role assignment schedule instance */\n  startDateTime?: Date;\n  /** The endDateTime of the role assignment schedule instance */\n  endDateTime?: Date;\n  /** roleEligibilityScheduleId used to activate */\n  linkedRoleEligibilityScheduleId?: string;\n  /** roleEligibilityScheduleInstanceId linked to this roleAssignmentScheduleInstance */\n  linkedRoleEligibilityScheduleInstanceId?: string;\n  /** Assignment type of the role assignment schedule */\n  assignmentType?: AssignmentType;\n  /** Membership type of the role assignment schedule */\n  memberType?: MemberType;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently accepted value is '2.0' */\n  conditionVersion?: string;\n  /** DateTime when role assignment schedule was created */\n  createdOn?: Date;\n  /** Additional properties of principal, scope and role definition */\n  expandedProperties?: ExpandedProperties;\n}\n\n/** Role Assignment schedule request */\nexport interface RoleAssignmentScheduleRequest {\n  /**\n   * The role assignment schedule request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role assignment schedule request name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role assignment schedule request type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The role assignment schedule request scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /**\n   * The principal type of the assigned principal ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalType?: PrincipalType;\n  /** The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc */\n  requestType?: RequestType;\n  /**\n   * The status of the role assignment schedule request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * The approvalId of the role assignment schedule request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly approvalId?: string;\n  /** The resultant role assignment schedule id or the role assignment schedule id being updated */\n  targetRoleAssignmentScheduleId?: string;\n  /** The role assignment schedule instance id being updated */\n  targetRoleAssignmentScheduleInstanceId?: string;\n  /** Schedule info of the role assignment schedule */\n  scheduleInfo?: RoleAssignmentScheduleRequestPropertiesScheduleInfo;\n  /** The linked role eligibility schedule id - to activate an eligibility. */\n  linkedRoleEligibilityScheduleId?: string;\n  /** Justification for the role assignment */\n  justification?: string;\n  /** Ticket Info of the role assignment */\n  ticketInfo?: RoleAssignmentScheduleRequestPropertiesTicketInfo;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently accepted value is '2.0' */\n  conditionVersion?: string;\n  /**\n   * DateTime when role assignment schedule request was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Id of the user who created this request\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestorId?: string;\n  /**\n   * Additional properties of principal, scope and role definition\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expandedProperties?: ExpandedProperties;\n}\n\n/** Schedule info of the role assignment schedule */\nexport interface RoleAssignmentScheduleRequestPropertiesScheduleInfo {\n  /** Start DateTime of the role assignment schedule. */\n  startDateTime?: Date;\n  /** Expiration of the role assignment schedule */\n  expiration?: RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration;\n}\n\n/** Expiration of the role assignment schedule */\nexport interface RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration {\n  /** Type of the role assignment schedule expiration */\n  type?: Type;\n  /** End DateTime of the role assignment schedule. */\n  endDateTime?: Date;\n  /** Duration of the role assignment schedule in TimeSpan. */\n  duration?: string;\n}\n\n/** Ticket Info of the role assignment */\nexport interface RoleAssignmentScheduleRequestPropertiesTicketInfo {\n  /** Ticket number for the role assignment */\n  ticketNumber?: string;\n  /** Ticket system name for the role assignment */\n  ticketSystem?: string;\n}\n\n/** Role assignment schedule request list operation result. */\nexport interface RoleAssignmentScheduleRequestListResult {\n  /** Role assignment schedule request list. */\n  value?: RoleAssignmentScheduleRequest[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role eligibility schedule */\nexport interface RoleEligibilitySchedule {\n  /**\n   * The role eligibility schedule Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role eligibility schedule name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role eligibility schedule type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role eligibility schedule scope. */\n  scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /** The principal type of the assigned principal ID. */\n  principalType?: PrincipalType;\n  /** The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule */\n  roleEligibilityScheduleRequestId?: string;\n  /** Membership type of the role eligibility schedule */\n  memberType?: MemberType;\n  /** The status of the role eligibility schedule. */\n  status?: Status;\n  /** Start DateTime when role eligibility schedule */\n  startDateTime?: Date;\n  /** End DateTime when role eligibility schedule */\n  endDateTime?: Date;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently accepted value is '2.0' */\n  conditionVersion?: string;\n  /** DateTime when role eligibility schedule was created */\n  createdOn?: Date;\n  /** DateTime when role eligibility schedule was modified */\n  updatedOn?: Date;\n  /** Additional properties of principal, scope and role definition */\n  expandedProperties?: ExpandedProperties;\n}\n\n/** role eligibility schedule list operation result. */\nexport interface RoleEligibilityScheduleListResult {\n  /** role eligibility schedule list. */\n  value?: RoleEligibilitySchedule[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role eligibility schedule instance list operation result. */\nexport interface RoleEligibilityScheduleInstanceListResult {\n  /** Role eligibility schedule instance list. */\n  value?: RoleEligibilityScheduleInstance[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Information about current or upcoming role eligibility schedule instance */\nexport interface RoleEligibilityScheduleInstance {\n  /**\n   * The role eligibility schedule instance ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role eligibility schedule instance name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role eligibility schedule instance type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role eligibility schedule scope. */\n  scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /** The principal type of the assigned principal ID. */\n  principalType?: PrincipalType;\n  /** Id of the master role eligibility schedule */\n  roleEligibilityScheduleId?: string;\n  /** The status of the role eligibility schedule instance */\n  status?: Status;\n  /** The startDateTime of the role eligibility schedule instance */\n  startDateTime?: Date;\n  /** The endDateTime of the role eligibility schedule instance */\n  endDateTime?: Date;\n  /** Membership type of the role eligibility schedule */\n  memberType?: MemberType;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently accepted value is '2.0' */\n  conditionVersion?: string;\n  /** DateTime when role eligibility schedule was created */\n  createdOn?: Date;\n  /** Additional properties of principal, scope and role definition */\n  expandedProperties?: ExpandedProperties;\n}\n\n/** Role Eligibility schedule request */\nexport interface RoleEligibilityScheduleRequest {\n  /**\n   * The role eligibility schedule request ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role eligibility schedule request name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role eligibility schedule request type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The role eligibility schedule request scope.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: string;\n  /** The role definition ID. */\n  roleDefinitionId?: string;\n  /** The principal ID. */\n  principalId?: string;\n  /**\n   * The principal type of the assigned principal ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalType?: PrincipalType;\n  /** The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc */\n  requestType?: RequestType;\n  /**\n   * The status of the role eligibility schedule request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: Status;\n  /**\n   * The approvalId of the role eligibility schedule request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly approvalId?: string;\n  /** Schedule info of the role eligibility schedule */\n  scheduleInfo?: RoleEligibilityScheduleRequestPropertiesScheduleInfo;\n  /** The resultant role eligibility schedule id or the role eligibility schedule id being updated */\n  targetRoleEligibilityScheduleId?: string;\n  /** The role eligibility schedule instance id being updated */\n  targetRoleEligibilityScheduleInstanceId?: string;\n  /** Justification for the role eligibility */\n  justification?: string;\n  /** Ticket Info of the role eligibility */\n  ticketInfo?: RoleEligibilityScheduleRequestPropertiesTicketInfo;\n  /** The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container' */\n  condition?: string;\n  /** Version of the condition. Currently accepted value is '2.0' */\n  conditionVersion?: string;\n  /**\n   * DateTime when role eligibility schedule request was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdOn?: Date;\n  /**\n   * Id of the user who created this request\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestorId?: string;\n  /**\n   * Additional properties of principal, scope and role definition\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expandedProperties?: ExpandedProperties;\n}\n\n/** Schedule info of the role eligibility schedule */\nexport interface RoleEligibilityScheduleRequestPropertiesScheduleInfo {\n  /** Start DateTime of the role eligibility schedule. */\n  startDateTime?: Date;\n  /** Expiration of the role eligibility schedule */\n  expiration?: RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration;\n}\n\n/** Expiration of the role eligibility schedule */\nexport interface RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration {\n  /** Type of the role eligibility schedule expiration */\n  type?: Type;\n  /** End DateTime of the role eligibility schedule. */\n  endDateTime?: Date;\n  /** Duration of the role eligibility schedule in TimeSpan. */\n  duration?: string;\n}\n\n/** Ticket Info of the role eligibility */\nexport interface RoleEligibilityScheduleRequestPropertiesTicketInfo {\n  /** Ticket number for the role eligibility */\n  ticketNumber?: string;\n  /** Ticket system name for the role eligibility */\n  ticketSystem?: string;\n}\n\n/** Role eligibility schedule request list operation result. */\nexport interface RoleEligibilityScheduleRequestListResult {\n  /** Role eligibility schedule request list. */\n  value?: RoleEligibilityScheduleRequest[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role management policy */\nexport interface RoleManagementPolicy {\n  /**\n   * The role management policy Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role management policy name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role management policy type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role management policy scope. */\n  scope?: string;\n  /** The role management policy display name. */\n  displayName?: string;\n  /** The role management policy description. */\n  description?: string;\n  /** The role management policy is default policy. */\n  isOrganizationDefault?: boolean;\n  /**\n   * The name of the entity last modified it\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedBy?: Principal;\n  /**\n   * The last modified date time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedDateTime?: Date;\n  /** The rule applied to the policy. */\n  rules?: RoleManagementPolicyRuleUnion[];\n  /**\n   * The readonly computed rule applied to the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly effectiveRules?: RoleManagementPolicyRuleUnion[];\n  /**\n   * Additional properties of scope\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyProperties?: PolicyProperties;\n}\n\n/** The role management policy rule. */\nexport interface RoleManagementPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType:\n    | \"RoleManagementPolicyApprovalRule\"\n    | \"RoleManagementPolicyAuthenticationContextRule\"\n    | \"RoleManagementPolicyEnablementRule\"\n    | \"RoleManagementPolicyExpirationRule\"\n    | \"RoleManagementPolicyNotificationRule\";\n  /** The id of the rule. */\n  id?: string;\n  /** The target of the current rule. */\n  target?: RoleManagementPolicyRuleTarget;\n}\n\n/** The role management policy rule target. */\nexport interface RoleManagementPolicyRuleTarget {\n  /** The caller of the setting. */\n  caller?: string;\n  /** The type of operation. */\n  operations?: string[];\n  /** The assignment level to which rule is applied. */\n  level?: string;\n  /** The list of target objects. */\n  targetObjects?: string[];\n  /** The list of inheritable settings. */\n  inheritableSettings?: string[];\n  /** The list of enforced settings. */\n  enforcedSettings?: string[];\n}\n\n/** Expanded info of resource scope */\nexport interface PolicyProperties {\n  /**\n   * Details of the resource scope\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scope?: PolicyPropertiesScope;\n}\n\n/** Details of the resource scope */\nexport interface PolicyPropertiesScope {\n  /** Scope id of the resource */\n  id?: string;\n  /** Display name of the resource */\n  displayName?: string;\n  /** Type of the resource */\n  type?: string;\n}\n\n/** Role management policy list operation result. */\nexport interface RoleManagementPolicyListResult {\n  /** Role management policy list. */\n  value?: RoleManagementPolicy[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Role management policy */\nexport interface RoleManagementPolicyAssignment {\n  /**\n   * The role management policy Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The role management policy name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The role management policy type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /** The role management policy scope. */\n  scope?: string;\n  /** The role definition of management policy assignment. */\n  roleDefinitionId?: string;\n  /** The policy id role management policy assignment. */\n  policyId?: string;\n  /**\n   * The readonly computed rule applied to the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly effectiveRules?: RoleManagementPolicyRuleUnion[];\n  /**\n   * Additional properties of scope, role definition and policy\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyAssignmentProperties?: PolicyAssignmentProperties;\n}\n\n/** Expanded info of resource scope, role definition and policy */\nexport interface PolicyAssignmentProperties {\n  /** Details of the resource scope */\n  scope?: PolicyAssignmentPropertiesScope;\n  /** Details of role definition */\n  roleDefinition?: PolicyAssignmentPropertiesRoleDefinition;\n  /** Details of the policy */\n  policy?: PolicyAssignmentPropertiesPolicy;\n}\n\n/** Details of the resource scope */\nexport interface PolicyAssignmentPropertiesScope {\n  /** Scope id of the resource */\n  id?: string;\n  /** Display name of the resource */\n  displayName?: string;\n  /** Type of the resource */\n  type?: string;\n}\n\n/** Details of role definition */\nexport interface PolicyAssignmentPropertiesRoleDefinition {\n  /** Id of the role definition */\n  id?: string;\n  /** Display name of the role definition */\n  displayName?: string;\n  /** Type of the role definition */\n  type?: string;\n}\n\n/** Details of the policy */\nexport interface PolicyAssignmentPropertiesPolicy {\n  /** Id of the policy */\n  id?: string;\n  /**\n   * The name of the entity last modified it\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedBy?: Principal;\n  /** The last modified date time. */\n  lastModifiedDateTime?: Date;\n}\n\n/** Role management policy assignment list operation result. */\nexport interface RoleManagementPolicyAssignmentListResult {\n  /** Role management policy assignment list. */\n  value?: RoleManagementPolicyAssignment[];\n  /** The URL to use for getting the next set of results. */\n  nextLink?: string;\n}\n\n/** Deny Assignments filter */\nexport interface DenyAssignmentFilter {\n  /** Return deny assignment with specified name. */\n  denyAssignmentName?: string;\n  /** Return all deny assignments where the specified principal is listed in the principals list of deny assignments. */\n  principalId?: string;\n  /** Return all deny assignments where the specified principal is listed either in the principals list or exclude principals list of deny assignments. */\n  gdprExportPrincipalId?: string;\n}\n\n/** Failed validation result details */\nexport interface ValidationResponseErrorInfo {\n  /**\n   * Error code indicating why validation failed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Message indicating why validation failed\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Validation response */\nexport interface ValidationResponse {\n  /**\n   * Whether or not validation succeeded\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isValid?: boolean;\n  /** Failed validation result details */\n  errorInfo?: ValidationResponseErrorInfo;\n}\n\n/** Role Assignments filter */\nexport interface RoleAssignmentFilter {\n  /** Returns role assignment of the specific principal. */\n  principalId?: string;\n}\n\n/** Role Definitions filter */\nexport interface RoleDefinitionFilter {\n  /** Returns role definition with the specific name. */\n  roleName?: string;\n  /** Returns role definition with the specific type. */\n  type?: string;\n}\n\n/** The approval settings. */\nexport interface ApprovalSettings {\n  /** Determines whether approval is required or not. */\n  isApprovalRequired?: boolean;\n  /** Determines whether approval is required for assignment extension. */\n  isApprovalRequiredForExtension?: boolean;\n  /** Determine whether requestor justification is required. */\n  isRequestorJustificationRequired?: boolean;\n  /** The type of rule */\n  approvalMode?: ApprovalMode;\n  /** The approval stages of the request. */\n  approvalStages?: ApprovalStage[];\n}\n\n/** The approval stage. */\nexport interface ApprovalStage {\n  /** The time in days when approval request would be timed out */\n  approvalStageTimeOutInDays?: number;\n  /** Determines whether approver need to provide justification for his decision. */\n  isApproverJustificationRequired?: boolean;\n  /** The time in minutes when the approval request would be escalated if the primary approver does not approve */\n  escalationTimeInMinutes?: number;\n  /** The primary approver of the request. */\n  primaryApprovers?: UserSet[];\n  /** The value determine whether escalation feature is enabled. */\n  isEscalationEnabled?: boolean;\n  /** The escalation approver of the request. */\n  escalationApprovers?: UserSet[];\n}\n\n/** The detail of a user. */\nexport interface UserSet {\n  /** The type of user. */\n  userType?: UserType;\n  /** The value indicating whether the user is a backup fallback approver */\n  isBackup?: boolean;\n  /** The object id of the user. */\n  id?: string;\n  /** The description of the user. */\n  description?: string;\n}\n\n/** Role assignment schedule filter */\nexport interface RoleAssignmentScheduleFilter {\n  /** Returns role assignment schedule of the specific principal. */\n  principalId?: string;\n  /** Returns role assignment schedule of the specific role definition. */\n  roleDefinitionId?: string;\n  /** Returns role assignment schedule instances of the specific status. */\n  status?: string;\n}\n\n/** Role assignment schedule instance filter */\nexport interface RoleAssignmentScheduleInstanceFilter {\n  /** Returns role assignment schedule instances of the specific principal. */\n  principalId?: string;\n  /** Returns role assignment schedule instances of the specific role definition. */\n  roleDefinitionId?: string;\n  /** Returns role assignment schedule instances of the specific status. */\n  status?: string;\n  /** Returns role assignment schedule instances belonging to a specific role assignment schedule. */\n  roleAssignmentScheduleId?: string;\n}\n\n/** Role assignment schedule request filter */\nexport interface RoleAssignmentScheduleRequestFilter {\n  /** Returns role assignment requests of the specific principal. */\n  principalId?: string;\n  /** Returns role assignment requests of the specific role definition. */\n  roleDefinitionId?: string;\n  /** Returns role assignment requests created by specific principal. */\n  requestorId?: string;\n  /** Returns role assignment requests of specific status. */\n  status?: string;\n}\n\n/** Role eligibility schedule filter */\nexport interface RoleEligibilityScheduleFilter {\n  /** Returns role eligibility schedule of the specific principal. */\n  principalId?: string;\n  /** Returns role eligibility schedule of the specific role definition. */\n  roleDefinitionId?: string;\n  /** Returns role eligibility schedule of the specific status. */\n  status?: string;\n}\n\n/** Role eligibility schedule instance filter */\nexport interface RoleEligibilityScheduleInstanceFilter {\n  /** Returns role eligibility schedule instances of the specific principal. */\n  principalId?: string;\n  /** Returns role eligibility schedule instances of the specific role definition. */\n  roleDefinitionId?: string;\n  /** Returns role eligibility schedule instances of the specific status. */\n  status?: string;\n  /** Returns role eligibility schedule instances belonging to a specific role eligibility schedule. */\n  roleEligibilityScheduleId?: string;\n}\n\n/** Role eligibility schedule request filter */\nexport interface RoleEligibilityScheduleRequestFilter {\n  /** Returns role eligibility requests of the specific principal. */\n  principalId?: string;\n  /** Returns role eligibility requests of the specific role definition. */\n  roleDefinitionId?: string;\n  /** Returns role eligibility requests created by specific principal. */\n  requestorId?: string;\n  /** Returns role eligibility requests of specific status. */\n  status?: string;\n}\n\n/** The role management policy approval rule. */\nexport interface RoleManagementPolicyApprovalRule\n  extends RoleManagementPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"RoleManagementPolicyApprovalRule\";\n  /** The approval setting */\n  setting?: ApprovalSettings;\n}\n\n/** The role management policy authentication context rule. */\nexport interface RoleManagementPolicyAuthenticationContextRule\n  extends RoleManagementPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"RoleManagementPolicyAuthenticationContextRule\";\n  /** The value indicating if rule is enabled. */\n  isEnabled?: boolean;\n  /** The claim value. */\n  claimValue?: string;\n}\n\n/** The role management policy enablement rule. */\nexport interface RoleManagementPolicyEnablementRule\n  extends RoleManagementPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"RoleManagementPolicyEnablementRule\";\n  /** The list of enabled rules. */\n  enabledRules?: EnablementRules[];\n}\n\n/** The role management policy expiration rule. */\nexport interface RoleManagementPolicyExpirationRule\n  extends RoleManagementPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"RoleManagementPolicyExpirationRule\";\n  /** The value indicating whether expiration is required. */\n  isExpirationRequired?: boolean;\n  /** The maximum duration of expiration in timespan. */\n  maximumDuration?: string;\n}\n\n/** The role management policy notification rule. */\nexport interface RoleManagementPolicyNotificationRule\n  extends RoleManagementPolicyRule {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  ruleType: \"RoleManagementPolicyNotificationRule\";\n  /** The type of notification. */\n  notificationType?: NotificationDeliveryMechanism;\n  /** The notification level. */\n  notificationLevel?: NotificationLevel;\n  /** The recipient type. */\n  recipientType?: RecipientType;\n  /** The list of notification recipients. */\n  notificationRecipients?: string[];\n  /** Determines if the notification will be sent to the recipient type specified in the policy rule. */\n  isDefaultRecipientsEnabled?: boolean;\n}\n\n/** Known values of {@link PrincipalType} that the service accepts. */\nexport enum KnownPrincipalType {\n  /** User */\n  User = \"User\",\n  /** Group */\n  Group = \"Group\",\n  /** ServicePrincipal */\n  ServicePrincipal = \"ServicePrincipal\",\n  /** ForeignGroup */\n  ForeignGroup = \"ForeignGroup\",\n  /** Device */\n  Device = \"Device\"\n}\n\n/**\n * Defines values for PrincipalType. \\\n * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Group** \\\n * **ServicePrincipal** \\\n * **ForeignGroup** \\\n * **Device**\n */\nexport type PrincipalType = string;\n\n/** Known values of {@link AssignmentType} that the service accepts. */\nexport enum KnownAssignmentType {\n  /** Activated */\n  Activated = \"Activated\",\n  /** Assigned */\n  Assigned = \"Assigned\"\n}\n\n/**\n * Defines values for AssignmentType. \\\n * {@link KnownAssignmentType} can be used interchangeably with AssignmentType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Activated** \\\n * **Assigned**\n */\nexport type AssignmentType = string;\n\n/** Known values of {@link MemberType} that the service accepts. */\nexport enum KnownMemberType {\n  /** Inherited */\n  Inherited = \"Inherited\",\n  /** Direct */\n  Direct = \"Direct\",\n  /** Group */\n  Group = \"Group\"\n}\n\n/**\n * Defines values for MemberType. \\\n * {@link KnownMemberType} can be used interchangeably with MemberType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inherited** \\\n * **Direct** \\\n * **Group**\n */\nexport type MemberType = string;\n\n/** Known values of {@link Status} that the service accepts. */\nexport enum KnownStatus {\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** PendingEvaluation */\n  PendingEvaluation = \"PendingEvaluation\",\n  /** Granted */\n  Granted = \"Granted\",\n  /** Denied */\n  Denied = \"Denied\",\n  /** PendingProvisioning */\n  PendingProvisioning = \"PendingProvisioning\",\n  /** Provisioned */\n  Provisioned = \"Provisioned\",\n  /** PendingRevocation */\n  PendingRevocation = \"PendingRevocation\",\n  /** Revoked */\n  Revoked = \"Revoked\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** PendingApprovalProvisioning */\n  PendingApprovalProvisioning = \"PendingApprovalProvisioning\",\n  /** PendingApproval */\n  PendingApproval = \"PendingApproval\",\n  /** FailedAsResourceIsLocked */\n  FailedAsResourceIsLocked = \"FailedAsResourceIsLocked\",\n  /** PendingAdminDecision */\n  PendingAdminDecision = \"PendingAdminDecision\",\n  /** AdminApproved */\n  AdminApproved = \"AdminApproved\",\n  /** AdminDenied */\n  AdminDenied = \"AdminDenied\",\n  /** TimedOut */\n  TimedOut = \"TimedOut\",\n  /** ProvisioningStarted */\n  ProvisioningStarted = \"ProvisioningStarted\",\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** PendingScheduleCreation */\n  PendingScheduleCreation = \"PendingScheduleCreation\",\n  /** ScheduleCreated */\n  ScheduleCreated = \"ScheduleCreated\",\n  /** PendingExternalProvisioning */\n  PendingExternalProvisioning = \"PendingExternalProvisioning\"\n}\n\n/**\n * Defines values for Status. \\\n * {@link KnownStatus} can be used interchangeably with Status,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Accepted** \\\n * **PendingEvaluation** \\\n * **Granted** \\\n * **Denied** \\\n * **PendingProvisioning** \\\n * **Provisioned** \\\n * **PendingRevocation** \\\n * **Revoked** \\\n * **Canceled** \\\n * **Failed** \\\n * **PendingApprovalProvisioning** \\\n * **PendingApproval** \\\n * **FailedAsResourceIsLocked** \\\n * **PendingAdminDecision** \\\n * **AdminApproved** \\\n * **AdminDenied** \\\n * **TimedOut** \\\n * **ProvisioningStarted** \\\n * **Invalid** \\\n * **PendingScheduleCreation** \\\n * **ScheduleCreated** \\\n * **PendingExternalProvisioning**\n */\nexport type Status = string;\n\n/** Known values of {@link RequestType} that the service accepts. */\nexport enum KnownRequestType {\n  /** AdminAssign */\n  AdminAssign = \"AdminAssign\",\n  /** AdminRemove */\n  AdminRemove = \"AdminRemove\",\n  /** AdminUpdate */\n  AdminUpdate = \"AdminUpdate\",\n  /** AdminExtend */\n  AdminExtend = \"AdminExtend\",\n  /** AdminRenew */\n  AdminRenew = \"AdminRenew\",\n  /** SelfActivate */\n  SelfActivate = \"SelfActivate\",\n  /** SelfDeactivate */\n  SelfDeactivate = \"SelfDeactivate\",\n  /** SelfExtend */\n  SelfExtend = \"SelfExtend\",\n  /** SelfRenew */\n  SelfRenew = \"SelfRenew\"\n}\n\n/**\n * Defines values for RequestType. \\\n * {@link KnownRequestType} can be used interchangeably with RequestType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AdminAssign** \\\n * **AdminRemove** \\\n * **AdminUpdate** \\\n * **AdminExtend** \\\n * **AdminRenew** \\\n * **SelfActivate** \\\n * **SelfDeactivate** \\\n * **SelfExtend** \\\n * **SelfRenew**\n */\nexport type RequestType = string;\n\n/** Known values of {@link Type} that the service accepts. */\nexport enum KnownType {\n  /** AfterDuration */\n  AfterDuration = \"AfterDuration\",\n  /** AfterDateTime */\n  AfterDateTime = \"AfterDateTime\",\n  /** NoExpiration */\n  NoExpiration = \"NoExpiration\"\n}\n\n/**\n * Defines values for Type. \\\n * {@link KnownType} can be used interchangeably with Type,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AfterDuration** \\\n * **AfterDateTime** \\\n * **NoExpiration**\n */\nexport type Type = string;\n\n/** Known values of {@link RoleManagementPolicyRuleType} that the service accepts. */\nexport enum KnownRoleManagementPolicyRuleType {\n  /** RoleManagementPolicyApprovalRule */\n  RoleManagementPolicyApprovalRule = \"RoleManagementPolicyApprovalRule\",\n  /** RoleManagementPolicyAuthenticationContextRule */\n  RoleManagementPolicyAuthenticationContextRule = \"RoleManagementPolicyAuthenticationContextRule\",\n  /** RoleManagementPolicyEnablementRule */\n  RoleManagementPolicyEnablementRule = \"RoleManagementPolicyEnablementRule\",\n  /** RoleManagementPolicyExpirationRule */\n  RoleManagementPolicyExpirationRule = \"RoleManagementPolicyExpirationRule\",\n  /** RoleManagementPolicyNotificationRule */\n  RoleManagementPolicyNotificationRule = \"RoleManagementPolicyNotificationRule\"\n}\n\n/**\n * Defines values for RoleManagementPolicyRuleType. \\\n * {@link KnownRoleManagementPolicyRuleType} can be used interchangeably with RoleManagementPolicyRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RoleManagementPolicyApprovalRule** \\\n * **RoleManagementPolicyAuthenticationContextRule** \\\n * **RoleManagementPolicyEnablementRule** \\\n * **RoleManagementPolicyExpirationRule** \\\n * **RoleManagementPolicyNotificationRule**\n */\nexport type RoleManagementPolicyRuleType = string;\n\n/** Known values of {@link ApprovalMode} that the service accepts. */\nexport enum KnownApprovalMode {\n  /** SingleStage */\n  SingleStage = \"SingleStage\",\n  /** Serial */\n  Serial = \"Serial\",\n  /** Parallel */\n  Parallel = \"Parallel\",\n  /** NoApproval */\n  NoApproval = \"NoApproval\"\n}\n\n/**\n * Defines values for ApprovalMode. \\\n * {@link KnownApprovalMode} can be used interchangeably with ApprovalMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SingleStage** \\\n * **Serial** \\\n * **Parallel** \\\n * **NoApproval**\n */\nexport type ApprovalMode = string;\n\n/** Known values of {@link UserType} that the service accepts. */\nexport enum KnownUserType {\n  /** User */\n  User = \"User\",\n  /** Group */\n  Group = \"Group\"\n}\n\n/**\n * Defines values for UserType. \\\n * {@link KnownUserType} can be used interchangeably with UserType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Group**\n */\nexport type UserType = string;\n\n/** Known values of {@link EnablementRules} that the service accepts. */\nexport enum KnownEnablementRules {\n  /** MultiFactorAuthentication */\n  MultiFactorAuthentication = \"MultiFactorAuthentication\",\n  /** Justification */\n  Justification = \"Justification\",\n  /** Ticketing */\n  Ticketing = \"Ticketing\"\n}\n\n/**\n * Defines values for EnablementRules. \\\n * {@link KnownEnablementRules} can be used interchangeably with EnablementRules,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MultiFactorAuthentication** \\\n * **Justification** \\\n * **Ticketing**\n */\nexport type EnablementRules = string;\n\n/** Known values of {@link NotificationDeliveryMechanism} that the service accepts. */\nexport enum KnownNotificationDeliveryMechanism {\n  /** Email */\n  Email = \"Email\"\n}\n\n/**\n * Defines values for NotificationDeliveryMechanism. \\\n * {@link KnownNotificationDeliveryMechanism} can be used interchangeably with NotificationDeliveryMechanism,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Email**\n */\nexport type NotificationDeliveryMechanism = string;\n\n/** Known values of {@link NotificationLevel} that the service accepts. */\nexport enum KnownNotificationLevel {\n  /** None */\n  None = \"None\",\n  /** Critical */\n  Critical = \"Critical\",\n  /** All */\n  All = \"All\"\n}\n\n/**\n * Defines values for NotificationLevel. \\\n * {@link KnownNotificationLevel} can be used interchangeably with NotificationLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Critical** \\\n * **All**\n */\nexport type NotificationLevel = string;\n\n/** Known values of {@link RecipientType} that the service accepts. */\nexport enum KnownRecipientType {\n  /** Requestor */\n  Requestor = \"Requestor\",\n  /** Approver */\n  Approver = \"Approver\",\n  /** Admin */\n  Admin = \"Admin\"\n}\n\n/**\n * Defines values for RecipientType. \\\n * {@link KnownRecipientType} can be used interchangeably with RecipientType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Requestor** \\\n * **Approver** \\\n * **Admin**\n */\nexport type RecipientType = string;\n\n/** Optional parameters. */\nexport interface ClassicAdministratorsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ClassicAdministratorsListResponse = ClassicAdministratorListResult;\n\n/** Optional parameters. */\nexport interface ClassicAdministratorsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ClassicAdministratorsListNextResponse = ClassicAdministratorListResult;\n\n/** Optional parameters. */\nexport interface GlobalAdministratorElevateAccessOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. */\n  filter?: string;\n}\n\n/** Contains response data for the listForResource operation. */\nexport type DenyAssignmentsListForResourceResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. */\n  filter?: string;\n}\n\n/** Contains response data for the listForResourceGroup operation. */\nexport type DenyAssignmentsListForResourceGroupResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type DenyAssignmentsListResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DenyAssignmentsGetResponse = DenyAssignment;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsGetByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getById operation. */\nexport type DenyAssignmentsGetByIdResponse = DenyAssignment;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type DenyAssignmentsListForScopeResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListForResourceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceNext operation. */\nexport type DenyAssignmentsListForResourceNextResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceGroupNext operation. */\nexport type DenyAssignmentsListForResourceGroupNextResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DenyAssignmentsListNextResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface DenyAssignmentsListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type DenyAssignmentsListForScopeNextResponse = DenyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface ProviderOperationsMetadataGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specifies whether to expand the values. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ProviderOperationsMetadataGetResponse = ProviderOperationsMetadata;\n\n/** Optional parameters. */\nexport interface ProviderOperationsMetadataListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Specifies whether to expand the values. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ProviderOperationsMetadataListResponse = ProviderOperationsMetadataListResult;\n\n/** Optional parameters. */\nexport interface ProviderOperationsMetadataListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ProviderOperationsMetadataListNextResponse = ProviderOperationsMetadataListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForSubscriptionOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. */\n  filter?: string;\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the listForSubscription operation. */\nexport type RoleAssignmentsListForSubscriptionResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. */\n  filter?: string;\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the listForResourceGroup operation. */\nexport type RoleAssignmentsListForResourceGroupResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForResourceOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. */\n  filter?: string;\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the listForResource operation. */\nexport type RoleAssignmentsListForResourceResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type RoleAssignmentsGetResponse = RoleAssignment;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type RoleAssignmentsCreateResponse = RoleAssignment;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type RoleAssignmentsDeleteResponse = RoleAssignment;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. */\n  filter?: string;\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n  /** The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. */\n  skipToken?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleAssignmentsListForScopeResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsGetByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the getById operation. */\nexport type RoleAssignmentsGetByIdResponse = RoleAssignment;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsCreateByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createById operation. */\nexport type RoleAssignmentsCreateByIdResponse = RoleAssignment;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsDeleteByIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Tenant ID for cross-tenant request */\n  tenantId?: string;\n}\n\n/** Contains response data for the deleteById operation. */\nexport type RoleAssignmentsDeleteByIdResponse = RoleAssignment;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForSubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForSubscriptionNext operation. */\nexport type RoleAssignmentsListForSubscriptionNextResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceGroupNext operation. */\nexport type RoleAssignmentsListForResourceGroupNextResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForResourceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceNext operation. */\nexport type RoleAssignmentsListForResourceNextResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentsListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleAssignmentsListForScopeNextResponse = RoleAssignmentListResult;\n\n/** Optional parameters. */\nexport interface PermissionsListForResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceGroup operation. */\nexport type PermissionsListForResourceGroupResponse = PermissionGetResult;\n\n/** Optional parameters. */\nexport interface PermissionsListForResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResource operation. */\nexport type PermissionsListForResourceResponse = PermissionGetResult;\n\n/** Optional parameters. */\nexport interface PermissionsListForResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceGroupNext operation. */\nexport type PermissionsListForResourceGroupNextResponse = PermissionGetResult;\n\n/** Optional parameters. */\nexport interface PermissionsListForResourceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForResourceNext operation. */\nexport type PermissionsListForResourceNextResponse = PermissionGetResult;\n\n/** Optional parameters. */\nexport interface RoleDefinitionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the delete operation. */\nexport type RoleDefinitionsDeleteResponse = RoleDefinition;\n\n/** Optional parameters. */\nexport interface RoleDefinitionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleDefinitionsGetResponse = RoleDefinition;\n\n/** Optional parameters. */\nexport interface RoleDefinitionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type RoleDefinitionsCreateOrUpdateResponse = RoleDefinition;\n\n/** Optional parameters. */\nexport interface RoleDefinitionsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type RoleDefinitionsListResponse = RoleDefinitionListResult;\n\n/** Optional parameters. */\nexport interface RoleDefinitionsGetByIdOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getById operation. */\nexport type RoleDefinitionsGetByIdResponse = RoleDefinition;\n\n/** Optional parameters. */\nexport interface RoleDefinitionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type RoleDefinitionsListNextResponse = RoleDefinitionListResult;\n\n/** Optional parameters. */\nexport interface EligibleChildResourcesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup' */\n  filter?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type EligibleChildResourcesGetResponse = EligibleChildResourcesListResult;\n\n/** Optional parameters. */\nexport interface EligibleChildResourcesGetNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getNext operation. */\nexport type EligibleChildResourcesGetNextResponse = EligibleChildResourcesListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentSchedulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleAssignmentSchedulesGetResponse = RoleAssignmentSchedule;\n\n/** Optional parameters. */\nexport interface RoleAssignmentSchedulesListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleAssignmentSchedulesListForScopeResponse = RoleAssignmentScheduleListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentSchedulesListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleAssignmentSchedulesListForScopeNextResponse = RoleAssignmentScheduleListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleInstancesListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleAssignmentScheduleInstancesListForScopeResponse = RoleAssignmentScheduleInstanceListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleInstancesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleAssignmentScheduleInstancesGetResponse = RoleAssignmentScheduleInstance;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleInstancesListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleAssignmentScheduleInstancesListForScopeNextResponse = RoleAssignmentScheduleInstanceListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleRequestsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type RoleAssignmentScheduleRequestsCreateResponse = RoleAssignmentScheduleRequest;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleRequestsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleAssignmentScheduleRequestsGetResponse = RoleAssignmentScheduleRequest;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleRequestsListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleAssignmentScheduleRequestsListForScopeResponse = RoleAssignmentScheduleRequestListResult;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleRequestsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleRequestsValidateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validate operation. */\nexport type RoleAssignmentScheduleRequestsValidateResponse = RoleAssignmentScheduleRequest;\n\n/** Optional parameters. */\nexport interface RoleAssignmentScheduleRequestsListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleAssignmentScheduleRequestsListForScopeNextResponse = RoleAssignmentScheduleRequestListResult;\n\n/** Optional parameters. */\nexport interface RoleEligibilitySchedulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleEligibilitySchedulesGetResponse = RoleEligibilitySchedule;\n\n/** Optional parameters. */\nexport interface RoleEligibilitySchedulesListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleEligibilitySchedulesListForScopeResponse = RoleEligibilityScheduleListResult;\n\n/** Optional parameters. */\nexport interface RoleEligibilitySchedulesListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleEligibilitySchedulesListForScopeNextResponse = RoleEligibilityScheduleListResult;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleInstancesListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleEligibilityScheduleInstancesListForScopeResponse = RoleEligibilityScheduleInstanceListResult;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleInstancesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleEligibilityScheduleInstancesGetResponse = RoleEligibilityScheduleInstance;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleInstancesListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleEligibilityScheduleInstancesListForScopeNextResponse = RoleEligibilityScheduleInstanceListResult;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleRequestsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type RoleEligibilityScheduleRequestsCreateResponse = RoleEligibilityScheduleRequest;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleRequestsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleEligibilityScheduleRequestsGetResponse = RoleEligibilityScheduleRequest;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleRequestsListForScopeOptionalParams\n  extends coreClient.OperationOptions {\n  /** The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. */\n  filter?: string;\n}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleEligibilityScheduleRequestsListForScopeResponse = RoleEligibilityScheduleRequestListResult;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleRequestsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleRequestsValidateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validate operation. */\nexport type RoleEligibilityScheduleRequestsValidateResponse = RoleEligibilityScheduleRequest;\n\n/** Optional parameters. */\nexport interface RoleEligibilityScheduleRequestsListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleEligibilityScheduleRequestsListForScopeNextResponse = RoleEligibilityScheduleRequestListResult;\n\n/** Optional parameters. */\nexport interface RoleManagementPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleManagementPoliciesGetResponse = RoleManagementPolicy;\n\n/** Optional parameters. */\nexport interface RoleManagementPoliciesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type RoleManagementPoliciesUpdateResponse = RoleManagementPolicy;\n\n/** Optional parameters. */\nexport interface RoleManagementPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RoleManagementPoliciesListForScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleManagementPoliciesListForScopeResponse = RoleManagementPolicyListResult;\n\n/** Optional parameters. */\nexport interface RoleManagementPoliciesListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleManagementPoliciesListForScopeNextResponse = RoleManagementPolicyListResult;\n\n/** Optional parameters. */\nexport interface RoleManagementPolicyAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RoleManagementPolicyAssignmentsGetResponse = RoleManagementPolicyAssignment;\n\n/** Optional parameters. */\nexport interface RoleManagementPolicyAssignmentsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type RoleManagementPolicyAssignmentsCreateResponse = RoleManagementPolicyAssignment;\n\n/** Optional parameters. */\nexport interface RoleManagementPolicyAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RoleManagementPolicyAssignmentsListForScopeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScope operation. */\nexport type RoleManagementPolicyAssignmentsListForScopeResponse = RoleManagementPolicyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface RoleManagementPolicyAssignmentsListForScopeNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForScopeNext operation. */\nexport type RoleManagementPolicyAssignmentsListForScopeNextResponse = RoleManagementPolicyAssignmentListResult;\n\n/** Optional parameters. */\nexport interface AuthorizationManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const ClassicAdministratorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClassicAdministratorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClassicAdministrator\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClassicAdministrator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClassicAdministrator\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      emailAddress: {\n        serializedName: \"properties.emailAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DenyAssignmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DenyAssignmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DenyAssignment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DenyAssignment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DenyAssignment\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      denyAssignmentName: {\n        serializedName: \"properties.denyAssignmentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"properties.permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DenyAssignmentPermission\"\n            }\n          }\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      doNotApplyToChildScopes: {\n        serializedName: \"properties.doNotApplyToChildScopes\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      principals: {\n        serializedName: \"properties.principals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Principal\"\n            }\n          }\n        }\n      },\n      excludePrincipals: {\n        serializedName: \"properties.excludePrincipals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Principal\"\n            }\n          }\n        }\n      },\n      isSystemProtected: {\n        serializedName: \"properties.isSystemProtected\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedOn: {\n        serializedName: \"properties.updatedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createdBy: {\n        serializedName: \"properties.createdBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updatedBy: {\n        serializedName: \"properties.updatedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DenyAssignmentPermission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DenyAssignmentPermission\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notActions: {\n        serializedName: \"notActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dataActions: {\n        serializedName: \"dataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notDataActions: {\n        serializedName: \"notDataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      condition: {\n        serializedName: \"condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Principal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Principal\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      email: {\n        serializedName: \"email\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderOperationsMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderOperationsMetadata\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        serializedName: \"resourceTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceType\"\n            }\n          }\n        }\n      },\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderOperation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceType: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceType\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderOperation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderOperation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProviderOperationsMetadataListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProviderOperationsMetadataListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ProviderOperationsMetadata\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleAssignment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignment\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedOn: {\n        serializedName: \"properties.updatedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createdBy: {\n        serializedName: \"properties.createdBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updatedBy: {\n        serializedName: \"properties.updatedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegatedManagedIdentityResourceId: {\n        serializedName: \"properties.delegatedManagedIdentityResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentCreateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentCreateParameters\",\n    modelProperties: {\n      scope: {\n        serializedName: \"properties.scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedOn: {\n        serializedName: \"properties.updatedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createdBy: {\n        serializedName: \"properties.createdBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updatedBy: {\n        serializedName: \"properties.updatedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegatedManagedIdentityResourceId: {\n        serializedName: \"properties.delegatedManagedIdentityResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PermissionGetResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PermissionGetResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Permission\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Permission: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Permission\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notActions: {\n        serializedName: \"notActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      dataActions: {\n        serializedName: \"dataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notDataActions: {\n        serializedName: \"notDataActions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleName: {\n        serializedName: \"properties.roleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"properties.permissions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Permission\"\n            }\n          }\n        }\n      },\n      assignableScopes: {\n        serializedName: \"properties.assignableScopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedOn: {\n        serializedName: \"properties.updatedOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createdBy: {\n        serializedName: \"properties.createdBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updatedBy: {\n        serializedName: \"properties.updatedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleDefinitionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinitionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleDefinition\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EligibleChildResourcesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EligibleChildResourcesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EligibleChildResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EligibleChildResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EligibleChildResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentSchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentSchedule\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleAssignmentScheduleRequestId: {\n        serializedName: \"properties.roleAssignmentScheduleRequestId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      linkedRoleEligibilityScheduleId: {\n        serializedName: \"properties.linkedRoleEligibilityScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      assignmentType: {\n        serializedName: \"properties.assignmentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memberType: {\n        serializedName: \"properties.memberType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startDateTime: {\n        serializedName: \"properties.startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"properties.endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedOn: {\n        serializedName: \"properties.updatedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expandedProperties: {\n        serializedName: \"properties.expandedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpandedProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpandedProperties\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedPropertiesScope\"\n        }\n      },\n      roleDefinition: {\n        serializedName: \"roleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedPropertiesRoleDefinition\"\n        }\n      },\n      principal: {\n        serializedName: \"principal\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedPropertiesPrincipal\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpandedPropertiesScope: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpandedPropertiesScope\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpandedPropertiesRoleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpandedPropertiesRoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExpandedPropertiesPrincipal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExpandedPropertiesPrincipal\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      email: {\n        serializedName: \"email\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleAssignmentSchedule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleInstanceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleInstanceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleAssignmentScheduleInstance\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleInstance\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleAssignmentScheduleId: {\n        serializedName: \"properties.roleAssignmentScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      originRoleAssignmentId: {\n        serializedName: \"properties.originRoleAssignmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startDateTime: {\n        serializedName: \"properties.startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"properties.endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      linkedRoleEligibilityScheduleId: {\n        serializedName: \"properties.linkedRoleEligibilityScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      linkedRoleEligibilityScheduleInstanceId: {\n        serializedName: \"properties.linkedRoleEligibilityScheduleInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      assignmentType: {\n        serializedName: \"properties.assignmentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memberType: {\n        serializedName: \"properties.memberType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expandedProperties: {\n        serializedName: \"properties.expandedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleRequest\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestType: {\n        serializedName: \"properties.requestType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      approvalId: {\n        serializedName: \"properties.approvalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetRoleAssignmentScheduleId: {\n        serializedName: \"properties.targetRoleAssignmentScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetRoleAssignmentScheduleInstanceId: {\n        serializedName: \"properties.targetRoleAssignmentScheduleInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scheduleInfo: {\n        serializedName: \"properties.scheduleInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleAssignmentScheduleRequestPropertiesScheduleInfo\"\n        }\n      },\n      linkedRoleEligibilityScheduleId: {\n        serializedName: \"properties.linkedRoleEligibilityScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      justification: {\n        serializedName: \"properties.justification\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ticketInfo: {\n        serializedName: \"properties.ticketInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleAssignmentScheduleRequestPropertiesTicketInfo\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      requestorId: {\n        serializedName: \"properties.requestorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expandedProperties: {\n        serializedName: \"properties.expandedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleRequestPropertiesScheduleInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleRequestPropertiesScheduleInfo\",\n    modelProperties: {\n      startDateTime: {\n        serializedName: \"startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiration: {\n        serializedName: \"expiration\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleRequestPropertiesScheduleInfoExpiration\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleRequestPropertiesTicketInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleRequestPropertiesTicketInfo\",\n    modelProperties: {\n      ticketNumber: {\n        serializedName: \"ticketNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ticketSystem: {\n        serializedName: \"ticketSystem\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleRequestListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleRequestListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleAssignmentScheduleRequest\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilitySchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilitySchedule\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleEligibilityScheduleRequestId: {\n        serializedName: \"properties.roleEligibilityScheduleRequestId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memberType: {\n        serializedName: \"properties.memberType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startDateTime: {\n        serializedName: \"properties.startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"properties.endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedOn: {\n        serializedName: \"properties.updatedOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expandedProperties: {\n        serializedName: \"properties.expandedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleEligibilitySchedule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleInstanceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleInstanceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleEligibilityScheduleInstance\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleInstance\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleEligibilityScheduleId: {\n        serializedName: \"properties.roleEligibilityScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startDateTime: {\n        serializedName: \"properties.startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"properties.endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      memberType: {\n        serializedName: \"properties.memberType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expandedProperties: {\n        serializedName: \"properties.expandedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleRequest\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestType: {\n        serializedName: \"properties.requestType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      approvalId: {\n        serializedName: \"properties.approvalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scheduleInfo: {\n        serializedName: \"properties.scheduleInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleEligibilityScheduleRequestPropertiesScheduleInfo\"\n        }\n      },\n      targetRoleEligibilityScheduleId: {\n        serializedName: \"properties.targetRoleEligibilityScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetRoleEligibilityScheduleInstanceId: {\n        serializedName: \"properties.targetRoleEligibilityScheduleInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      justification: {\n        serializedName: \"properties.justification\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ticketInfo: {\n        serializedName: \"properties.ticketInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleEligibilityScheduleRequestPropertiesTicketInfo\"\n        }\n      },\n      condition: {\n        serializedName: \"properties.condition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      conditionVersion: {\n        serializedName: \"properties.conditionVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdOn: {\n        serializedName: \"properties.createdOn\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      requestorId: {\n        serializedName: \"properties.requestorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expandedProperties: {\n        serializedName: \"properties.expandedProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ExpandedProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleRequestPropertiesScheduleInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleRequestPropertiesScheduleInfo\",\n    modelProperties: {\n      startDateTime: {\n        serializedName: \"startDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiration: {\n        serializedName: \"expiration\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleRequestPropertiesScheduleInfoExpiration\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endDateTime: {\n        serializedName: \"endDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleRequestPropertiesTicketInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleRequestPropertiesTicketInfo\",\n    modelProperties: {\n      ticketNumber: {\n        serializedName: \"ticketNumber\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ticketSystem: {\n        serializedName: \"ticketSystem\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleRequestListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleRequestListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleEligibilityScheduleRequest\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicy\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isOrganizationDefault: {\n        serializedName: \"properties.isOrganizationDefault\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"properties.lastModifiedBy\",\n        type: {\n          name: \"Composite\",\n          className: \"Principal\"\n        }\n      },\n      lastModifiedDateTime: {\n        serializedName: \"properties.lastModifiedDateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      rules: {\n        serializedName: \"properties.rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleManagementPolicyRule\"\n            }\n          }\n        }\n      },\n      effectiveRules: {\n        serializedName: \"properties.effectiveRules\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleManagementPolicyRule\"\n            }\n          }\n        }\n      },\n      policyProperties: {\n        serializedName: \"properties.policyProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyRule\",\n    uberParent: \"RoleManagementPolicyRule\",\n    polymorphicDiscriminator: {\n      serializedName: \"ruleType\",\n      clientName: \"ruleType\"\n    },\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleType: {\n        serializedName: \"ruleType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"Composite\",\n          className: \"RoleManagementPolicyRuleTarget\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyRuleTarget: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyRuleTarget\",\n    modelProperties: {\n      caller: {\n        serializedName: \"caller\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      level: {\n        serializedName: \"level\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetObjects: {\n        serializedName: \"targetObjects\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      inheritableSettings: {\n        serializedName: \"inheritableSettings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      enforcedSettings: {\n        serializedName: \"enforcedSettings\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyProperties\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyPropertiesScope\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyPropertiesScope: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyPropertiesScope\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleManagementPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyAssignment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyAssignment\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      scope: {\n        serializedName: \"properties.scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"properties.roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      policyId: {\n        serializedName: \"properties.policyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveRules: {\n        serializedName: \"properties.effectiveRules\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleManagementPolicyRule\"\n            }\n          }\n        }\n      },\n      policyAssignmentProperties: {\n        serializedName: \"properties.policyAssignmentProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyAssignmentProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyAssignmentProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyAssignmentProperties\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyAssignmentPropertiesScope\"\n        }\n      },\n      roleDefinition: {\n        serializedName: \"roleDefinition\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyAssignmentPropertiesRoleDefinition\"\n        }\n      },\n      policy: {\n        serializedName: \"policy\",\n        type: {\n          name: \"Composite\",\n          className: \"PolicyAssignmentPropertiesPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyAssignmentPropertiesScope: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyAssignmentPropertiesScope\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyAssignmentPropertiesRoleDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyAssignmentPropertiesRoleDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PolicyAssignmentPropertiesPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PolicyAssignmentPropertiesPolicy\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"Composite\",\n          className: \"Principal\"\n        }\n      },\n      lastModifiedDateTime: {\n        serializedName: \"lastModifiedDateTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyAssignmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyAssignmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RoleManagementPolicyAssignment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DenyAssignmentFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DenyAssignmentFilter\",\n    modelProperties: {\n      denyAssignmentName: {\n        serializedName: \"denyAssignmentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gdprExportPrincipalId: {\n        serializedName: \"gdprExportPrincipalId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidationResponseErrorInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidationResponseErrorInfo\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidationResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidationResponse\",\n    modelProperties: {\n      isValid: {\n        serializedName: \"isValid\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorInfo: {\n        serializedName: \"errorInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ValidationResponseErrorInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleDefinitionFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleDefinitionFilter\",\n    modelProperties: {\n      roleName: {\n        serializedName: \"roleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApprovalSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApprovalSettings\",\n    modelProperties: {\n      isApprovalRequired: {\n        serializedName: \"isApprovalRequired\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isApprovalRequiredForExtension: {\n        serializedName: \"isApprovalRequiredForExtension\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isRequestorJustificationRequired: {\n        serializedName: \"isRequestorJustificationRequired\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      approvalMode: {\n        serializedName: \"approvalMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      approvalStages: {\n        serializedName: \"approvalStages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApprovalStage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApprovalStage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApprovalStage\",\n    modelProperties: {\n      approvalStageTimeOutInDays: {\n        serializedName: \"approvalStageTimeOutInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isApproverJustificationRequired: {\n        serializedName: \"isApproverJustificationRequired\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      escalationTimeInMinutes: {\n        serializedName: \"escalationTimeInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      primaryApprovers: {\n        serializedName: \"primaryApprovers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UserSet\"\n            }\n          }\n        }\n      },\n      isEscalationEnabled: {\n        serializedName: \"isEscalationEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      escalationApprovers: {\n        serializedName: \"escalationApprovers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UserSet\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserSet\",\n    modelProperties: {\n      userType: {\n        serializedName: \"userType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isBackup: {\n        serializedName: \"isBackup\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleInstanceFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleInstanceFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleAssignmentScheduleId: {\n        serializedName: \"roleAssignmentScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleAssignmentScheduleRequestFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleAssignmentScheduleRequestFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestorId: {\n        serializedName: \"requestorId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleInstanceFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleInstanceFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleEligibilityScheduleId: {\n        serializedName: \"roleEligibilityScheduleId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleEligibilityScheduleRequestFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoleEligibilityScheduleRequestFilter\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      roleDefinitionId: {\n        serializedName: \"roleDefinitionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestorId: {\n        serializedName: \"requestorId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyApprovalRule: coreClient.CompositeMapper = {\n  serializedName: \"RoleManagementPolicyApprovalRule\",\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyApprovalRule\",\n    uberParent: \"RoleManagementPolicyRule\",\n    polymorphicDiscriminator:\n      RoleManagementPolicyRule.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...RoleManagementPolicyRule.type.modelProperties,\n      setting: {\n        serializedName: \"setting\",\n        type: {\n          name: \"Composite\",\n          className: \"ApprovalSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyAuthenticationContextRule: coreClient.CompositeMapper = {\n  serializedName: \"RoleManagementPolicyAuthenticationContextRule\",\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyAuthenticationContextRule\",\n    uberParent: \"RoleManagementPolicyRule\",\n    polymorphicDiscriminator:\n      RoleManagementPolicyRule.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...RoleManagementPolicyRule.type.modelProperties,\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      claimValue: {\n        serializedName: \"claimValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyEnablementRule: coreClient.CompositeMapper = {\n  serializedName: \"RoleManagementPolicyEnablementRule\",\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyEnablementRule\",\n    uberParent: \"RoleManagementPolicyRule\",\n    polymorphicDiscriminator:\n      RoleManagementPolicyRule.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...RoleManagementPolicyRule.type.modelProperties,\n      enabledRules: {\n        serializedName: \"enabledRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyExpirationRule: coreClient.CompositeMapper = {\n  serializedName: \"RoleManagementPolicyExpirationRule\",\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyExpirationRule\",\n    uberParent: \"RoleManagementPolicyRule\",\n    polymorphicDiscriminator:\n      RoleManagementPolicyRule.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...RoleManagementPolicyRule.type.modelProperties,\n      isExpirationRequired: {\n        serializedName: \"isExpirationRequired\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maximumDuration: {\n        serializedName: \"maximumDuration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoleManagementPolicyNotificationRule: coreClient.CompositeMapper = {\n  serializedName: \"RoleManagementPolicyNotificationRule\",\n  type: {\n    name: \"Composite\",\n    className: \"RoleManagementPolicyNotificationRule\",\n    uberParent: \"RoleManagementPolicyRule\",\n    polymorphicDiscriminator:\n      RoleManagementPolicyRule.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...RoleManagementPolicyRule.type.modelProperties,\n      notificationType: {\n        serializedName: \"notificationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      notificationLevel: {\n        serializedName: \"notificationLevel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recipientType: {\n        serializedName: \"recipientType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      notificationRecipients: {\n        serializedName: \"notificationRecipients\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isDefaultRecipientsEnabled: {\n        serializedName: \"isDefaultRecipientsEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  RoleManagementPolicyRule: RoleManagementPolicyRule,\n  \"RoleManagementPolicyRule.RoleManagementPolicyApprovalRule\": RoleManagementPolicyApprovalRule,\n  \"RoleManagementPolicyRule.RoleManagementPolicyAuthenticationContextRule\": RoleManagementPolicyAuthenticationContextRule,\n  \"RoleManagementPolicyRule.RoleManagementPolicyEnablementRule\": RoleManagementPolicyEnablementRule,\n  \"RoleManagementPolicyRule.RoleManagementPolicyExpirationRule\": RoleManagementPolicyExpirationRule,\n  \"RoleManagementPolicyRule.RoleManagementPolicyNotificationRule\": RoleManagementPolicyNotificationRule\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  RoleAssignmentCreateParameters as RoleAssignmentCreateParametersMapper,\n  RoleDefinition as RoleDefinitionMapper,\n  RoleAssignmentScheduleRequest as RoleAssignmentScheduleRequestMapper,\n  RoleEligibilityScheduleRequest as RoleEligibilityScheduleRequestMapper,\n  RoleManagementPolicy as RoleManagementPolicyMapper,\n  RoleManagementPolicyAssignment as RoleManagementPolicyAssignmentMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2015-07-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceProviderNamespace: OperationURLParameter = {\n  parameterPath: \"resourceProviderNamespace\",\n  mapper: {\n    serializedName: \"resourceProviderNamespace\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const parentResourcePath: OperationURLParameter = {\n  parameterPath: \"parentResourcePath\",\n  mapper: {\n    serializedName: \"parentResourcePath\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceType: OperationURLParameter = {\n  parameterPath: \"resourceType\",\n  mapper: {\n    serializedName: \"resourceType\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceName: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2022-04-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const scope: OperationURLParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    serializedName: \"scope\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const denyAssignmentId: OperationURLParameter = {\n  parameterPath: \"denyAssignmentId\",\n  mapper: {\n    serializedName: \"denyAssignmentId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const denyAssignmentId1: OperationURLParameter = {\n  parameterPath: \"denyAssignmentId\",\n  mapper: {\n    serializedName: \"denyAssignmentId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    defaultValue: \"resourceTypes\",\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const tenantId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"tenantId\"],\n  mapper: {\n    serializedName: \"tenantId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceName1: OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    serializedName: \"resourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const roleAssignmentName: OperationURLParameter = {\n  parameterPath: \"roleAssignmentName\",\n  mapper: {\n    serializedName: \"roleAssignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RoleAssignmentCreateParametersMapper\n};\n\nexport const skipToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipToken\"],\n  mapper: {\n    serializedName: \"$skipToken\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const roleAssignmentId: OperationURLParameter = {\n  parameterPath: \"roleAssignmentId\",\n  mapper: {\n    serializedName: \"roleAssignmentId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const roleDefinitionId: OperationURLParameter = {\n  parameterPath: \"roleDefinitionId\",\n  mapper: {\n    serializedName: \"roleDefinitionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleDefinition: OperationParameter = {\n  parameterPath: \"roleDefinition\",\n  mapper: RoleDefinitionMapper\n};\n\nexport const roleId: OperationURLParameter = {\n  parameterPath: \"roleId\",\n  mapper: {\n    serializedName: \"roleId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion2: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-10-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleAssignmentScheduleName: OperationURLParameter = {\n  parameterPath: \"roleAssignmentScheduleName\",\n  mapper: {\n    serializedName: \"roleAssignmentScheduleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleAssignmentScheduleInstanceName: OperationURLParameter = {\n  parameterPath: \"roleAssignmentScheduleInstanceName\",\n  mapper: {\n    serializedName: \"roleAssignmentScheduleInstanceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RoleAssignmentScheduleRequestMapper\n};\n\nexport const roleAssignmentScheduleRequestName: OperationURLParameter = {\n  parameterPath: \"roleAssignmentScheduleRequestName\",\n  mapper: {\n    serializedName: \"roleAssignmentScheduleRequestName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleEligibilityScheduleName: OperationURLParameter = {\n  parameterPath: \"roleEligibilityScheduleName\",\n  mapper: {\n    serializedName: \"roleEligibilityScheduleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleEligibilityScheduleInstanceName: OperationURLParameter = {\n  parameterPath: \"roleEligibilityScheduleInstanceName\",\n  mapper: {\n    serializedName: \"roleEligibilityScheduleInstanceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RoleEligibilityScheduleRequestMapper\n};\n\nexport const roleEligibilityScheduleRequestName: OperationURLParameter = {\n  parameterPath: \"roleEligibilityScheduleRequestName\",\n  mapper: {\n    serializedName: \"roleEligibilityScheduleRequestName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const roleManagementPolicyName: OperationURLParameter = {\n  parameterPath: \"roleManagementPolicyName\",\n  mapper: {\n    serializedName: \"roleManagementPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RoleManagementPolicyMapper\n};\n\nexport const roleManagementPolicyAssignmentName: OperationURLParameter = {\n  parameterPath: \"roleManagementPolicyAssignmentName\",\n  mapper: {\n    serializedName: \"roleManagementPolicyAssignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RoleManagementPolicyAssignmentMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ClassicAdministrators } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  ClassicAdministrator,\n  ClassicAdministratorsListNextOptionalParams,\n  ClassicAdministratorsListOptionalParams,\n  ClassicAdministratorsListResponse,\n  ClassicAdministratorsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ClassicAdministrators operations. */\nexport class ClassicAdministratorsImpl implements ClassicAdministrators {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class ClassicAdministrators class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets service administrator, account administrator, and co-administrators for the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ClassicAdministratorsListOptionalParams\n  ): PagedAsyncIterableIterator<ClassicAdministrator> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ClassicAdministratorsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ClassicAdministrator[]> {\n    let result: ClassicAdministratorsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ClassicAdministratorsListOptionalParams\n  ): AsyncIterableIterator<ClassicAdministrator> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets service administrator, account administrator, and co-administrators for the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ClassicAdministratorsListOptionalParams\n  ): Promise<ClassicAdministratorsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ClassicAdministratorsListNextOptionalParams\n  ): Promise<ClassicAdministratorsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClassicAdministratorListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClassicAdministratorListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { GlobalAdministrator } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport { GlobalAdministratorElevateAccessOptionalParams } from \"../models\";\n\n/** Class containing GlobalAdministrator operations. */\nexport class GlobalAdministratorImpl implements GlobalAdministrator {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class GlobalAdministrator class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Elevates access for a Global Administrator.\n   * @param options The options parameters.\n   */\n  elevateAccess(\n    options?: GlobalAdministratorElevateAccessOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { options },\n      elevateAccessOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst elevateAccessOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Authorization/elevateAccess\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DenyAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  DenyAssignment,\n  DenyAssignmentsListForResourceNextOptionalParams,\n  DenyAssignmentsListForResourceOptionalParams,\n  DenyAssignmentsListForResourceResponse,\n  DenyAssignmentsListForResourceGroupNextOptionalParams,\n  DenyAssignmentsListForResourceGroupOptionalParams,\n  DenyAssignmentsListForResourceGroupResponse,\n  DenyAssignmentsListNextOptionalParams,\n  DenyAssignmentsListOptionalParams,\n  DenyAssignmentsListResponse,\n  DenyAssignmentsListForScopeNextOptionalParams,\n  DenyAssignmentsListForScopeOptionalParams,\n  DenyAssignmentsListForScopeResponse,\n  DenyAssignmentsGetOptionalParams,\n  DenyAssignmentsGetResponse,\n  DenyAssignmentsGetByIdOptionalParams,\n  DenyAssignmentsGetByIdResponse,\n  DenyAssignmentsListForResourceNextResponse,\n  DenyAssignmentsListForResourceGroupNextResponse,\n  DenyAssignmentsListNextResponse,\n  DenyAssignmentsListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DenyAssignments operations. */\nexport class DenyAssignmentsImpl implements DenyAssignments {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class DenyAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets deny assignments for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get deny assignments for.\n   * @param options The options parameters.\n   */\n  public listForResource(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: DenyAssignmentsListForResourceOptionalParams\n  ): PagedAsyncIterableIterator<DenyAssignment> {\n    const iter = this.listForResourcePagingAll(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForResourcePagingPage(\n          resourceGroupName,\n          resourceProviderNamespace,\n          parentResourcePath,\n          resourceType,\n          resourceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForResourcePagingPage(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: DenyAssignmentsListForResourceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DenyAssignment[]> {\n    let result: DenyAssignmentsListForResourceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForResource(\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForResourceNext(\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForResourcePagingAll(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: DenyAssignmentsListForResourceOptionalParams\n  ): AsyncIterableIterator<DenyAssignment> {\n    for await (const page of this.listForResourcePagingPage(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets deny assignments for a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listForResourceGroup(\n    resourceGroupName: string,\n    options?: DenyAssignmentsListForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<DenyAssignment> {\n    const iter = this.listForResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: DenyAssignmentsListForResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DenyAssignment[]> {\n    let result: DenyAssignmentsListForResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: DenyAssignmentsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<DenyAssignment> {\n    for await (const page of this.listForResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all deny assignments for the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DenyAssignmentsListOptionalParams\n  ): PagedAsyncIterableIterator<DenyAssignment> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DenyAssignmentsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DenyAssignment[]> {\n    let result: DenyAssignmentsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: DenyAssignmentsListOptionalParams\n  ): AsyncIterableIterator<DenyAssignment> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets deny assignments for a scope.\n   * @param scope The scope of the deny assignments.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: DenyAssignmentsListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<DenyAssignment> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: DenyAssignmentsListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DenyAssignment[]> {\n    let result: DenyAssignmentsListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: DenyAssignmentsListForScopeOptionalParams\n  ): AsyncIterableIterator<DenyAssignment> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets deny assignments for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get deny assignments for.\n   * @param options The options parameters.\n   */\n  private _listForResource(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: DenyAssignmentsListForResourceOptionalParams\n  ): Promise<DenyAssignmentsListForResourceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        options\n      },\n      listForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Gets deny assignments for a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroup(\n    resourceGroupName: string,\n    options?: DenyAssignmentsListForResourceGroupOptionalParams\n  ): Promise<DenyAssignmentsListForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all deny assignments for the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: DenyAssignmentsListOptionalParams\n  ): Promise<DenyAssignmentsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Get the specified deny assignment.\n   * @param scope The scope of the deny assignment.\n   * @param denyAssignmentId The ID of the deny assignment to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    denyAssignmentId: string,\n    options?: DenyAssignmentsGetOptionalParams\n  ): Promise<DenyAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, denyAssignmentId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a deny assignment by ID.\n   * @param denyAssignmentId The fully qualified deny assignment ID. For example, use the format,\n   *                         /subscriptions/{guid}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for\n   *                         subscription level deny assignments, or\n   *                         /providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for tenant level deny\n   *                         assignments.\n   * @param options The options parameters.\n   */\n  getById(\n    denyAssignmentId: string,\n    options?: DenyAssignmentsGetByIdOptionalParams\n  ): Promise<DenyAssignmentsGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      { denyAssignmentId, options },\n      getByIdOperationSpec\n    );\n  }\n\n  /**\n   * Gets deny assignments for a scope.\n   * @param scope The scope of the deny assignments.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: DenyAssignmentsListForScopeOptionalParams\n  ): Promise<DenyAssignmentsListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get deny assignments for.\n   * @param nextLink The nextLink from the previous successful call to the ListForResource method.\n   * @param options The options parameters.\n   */\n  private _listForResourceNext(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    nextLink: string,\n    options?: DenyAssignmentsListForResourceNextOptionalParams\n  ): Promise<DenyAssignmentsListForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        nextLink,\n        options\n      },\n      listForResourceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: DenyAssignmentsListForResourceGroupNextOptionalParams\n  ): Promise<DenyAssignmentsListForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: DenyAssignmentsListNextOptionalParams\n  ): Promise<DenyAssignmentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the deny assignments.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: DenyAssignmentsListForScopeNextOptionalParams\n  ): Promise<DenyAssignmentsListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/denyAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/denyAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/denyAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.denyAssignmentId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{denyAssignmentId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.denyAssignmentId1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/denyAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DenyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ProviderOperationsMetadataOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  ProviderOperationsMetadata,\n  ProviderOperationsMetadataListNextOptionalParams,\n  ProviderOperationsMetadataListOptionalParams,\n  ProviderOperationsMetadataListResponse,\n  ProviderOperationsMetadataGetOptionalParams,\n  ProviderOperationsMetadataGetResponse,\n  ProviderOperationsMetadataListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ProviderOperationsMetadataOperations operations. */\nexport class ProviderOperationsMetadataOperationsImpl\n  implements ProviderOperationsMetadataOperations {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class ProviderOperationsMetadataOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets provider operations metadata for all resource providers.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ProviderOperationsMetadataListOptionalParams\n  ): PagedAsyncIterableIterator<ProviderOperationsMetadata> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ProviderOperationsMetadataListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ProviderOperationsMetadata[]> {\n    let result: ProviderOperationsMetadataListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ProviderOperationsMetadataListOptionalParams\n  ): AsyncIterableIterator<ProviderOperationsMetadata> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets provider operations metadata for the specified resource provider.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param options The options parameters.\n   */\n  get(\n    resourceProviderNamespace: string,\n    options?: ProviderOperationsMetadataGetOptionalParams\n  ): Promise<ProviderOperationsMetadataGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceProviderNamespace, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets provider operations metadata for all resource providers.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ProviderOperationsMetadataListOptionalParams\n  ): Promise<ProviderOperationsMetadataListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ProviderOperationsMetadataListNextOptionalParams\n  ): Promise<ProviderOperationsMetadataListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderOperationsMetadata\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.resourceProviderNamespace],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Authorization/providerOperations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderOperationsMetadataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.expand],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ProviderOperationsMetadataListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleAssignment,\n  RoleAssignmentsListForSubscriptionNextOptionalParams,\n  RoleAssignmentsListForSubscriptionOptionalParams,\n  RoleAssignmentsListForSubscriptionResponse,\n  RoleAssignmentsListForResourceGroupNextOptionalParams,\n  RoleAssignmentsListForResourceGroupOptionalParams,\n  RoleAssignmentsListForResourceGroupResponse,\n  RoleAssignmentsListForResourceNextOptionalParams,\n  RoleAssignmentsListForResourceOptionalParams,\n  RoleAssignmentsListForResourceResponse,\n  RoleAssignmentsListForScopeNextOptionalParams,\n  RoleAssignmentsListForScopeOptionalParams,\n  RoleAssignmentsListForScopeResponse,\n  RoleAssignmentsGetOptionalParams,\n  RoleAssignmentsGetResponse,\n  RoleAssignmentCreateParameters,\n  RoleAssignmentsCreateOptionalParams,\n  RoleAssignmentsCreateResponse,\n  RoleAssignmentsDeleteOptionalParams,\n  RoleAssignmentsDeleteResponse,\n  RoleAssignmentsGetByIdOptionalParams,\n  RoleAssignmentsGetByIdResponse,\n  RoleAssignmentsCreateByIdOptionalParams,\n  RoleAssignmentsCreateByIdResponse,\n  RoleAssignmentsDeleteByIdOptionalParams,\n  RoleAssignmentsDeleteByIdResponse,\n  RoleAssignmentsListForSubscriptionNextResponse,\n  RoleAssignmentsListForResourceGroupNextResponse,\n  RoleAssignmentsListForResourceNextResponse,\n  RoleAssignmentsListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleAssignments operations. */\nexport class RoleAssignmentsImpl implements RoleAssignments {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all role assignments that apply to a subscription.\n   * @param options The options parameters.\n   */\n  public listForSubscription(\n    options?: RoleAssignmentsListForSubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignment> {\n    const iter = this.listForSubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForSubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listForSubscriptionPagingPage(\n    options?: RoleAssignmentsListForSubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignment[]> {\n    let result: RoleAssignmentsListForSubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForSubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForSubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForSubscriptionPagingAll(\n    options?: RoleAssignmentsListForSubscriptionOptionalParams\n  ): AsyncIterableIterator<RoleAssignment> {\n    for await (const page of this.listForSubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all role assignments that apply to a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listForResourceGroup(\n    resourceGroupName: string,\n    options?: RoleAssignmentsListForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignment> {\n    const iter = this.listForResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: RoleAssignmentsListForResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignment[]> {\n    let result: RoleAssignmentsListForResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: RoleAssignmentsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<RoleAssignment> {\n    for await (const page of this.listForResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all role assignments that apply to a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param resourceType The resource type name. For example the type name of a web app is 'sites' (from\n   *                     Microsoft.Web/sites).\n   * @param resourceName The resource name.\n   * @param options The options parameters.\n   */\n  public listForResource(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    resourceType: string,\n    resourceName: string,\n    options?: RoleAssignmentsListForResourceOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignment> {\n    const iter = this.listForResourcePagingAll(\n      resourceGroupName,\n      resourceProviderNamespace,\n      resourceType,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForResourcePagingPage(\n          resourceGroupName,\n          resourceProviderNamespace,\n          resourceType,\n          resourceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForResourcePagingPage(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    resourceType: string,\n    resourceName: string,\n    options?: RoleAssignmentsListForResourceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignment[]> {\n    let result: RoleAssignmentsListForResourceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForResource(\n        resourceGroupName,\n        resourceProviderNamespace,\n        resourceType,\n        resourceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForResourceNext(\n        resourceGroupName,\n        resourceProviderNamespace,\n        resourceType,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForResourcePagingAll(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    resourceType: string,\n    resourceName: string,\n    options?: RoleAssignmentsListForResourceOptionalParams\n  ): AsyncIterableIterator<RoleAssignment> {\n    for await (const page of this.listForResourcePagingPage(\n      resourceGroupName,\n      resourceProviderNamespace,\n      resourceType,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all role assignments that apply to a scope.\n   * @param scope The scope of the operation or resource. Valid scopes are: subscription (format:\n   *              '/subscriptions/{subscriptionId}'), resource group (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleAssignmentsListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignment> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleAssignmentsListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignment[]> {\n    let result: RoleAssignmentsListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleAssignmentsListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleAssignment> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all role assignments that apply to a subscription.\n   * @param options The options parameters.\n   */\n  private _listForSubscription(\n    options?: RoleAssignmentsListForSubscriptionOptionalParams\n  ): Promise<RoleAssignmentsListForSubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listForSubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * List all role assignments that apply to a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroup(\n    resourceGroupName: string,\n    options?: RoleAssignmentsListForResourceGroupOptionalParams\n  ): Promise<RoleAssignmentsListForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * List all role assignments that apply to a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param resourceType The resource type name. For example the type name of a web app is 'sites' (from\n   *                     Microsoft.Web/sites).\n   * @param resourceName The resource name.\n   * @param options The options parameters.\n   */\n  private _listForResource(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    resourceType: string,\n    resourceName: string,\n    options?: RoleAssignmentsListForResourceOptionalParams\n  ): Promise<RoleAssignmentsListForResourceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        resourceType,\n        resourceName,\n        options\n      },\n      listForResourceOperationSpec\n    );\n  }\n\n  /**\n   * Get a role assignment by scope and name.\n   * @param scope The scope of the operation or resource. Valid scopes are: subscription (format:\n   *              '/subscriptions/{subscriptionId}'), resource group (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'\n   * @param roleAssignmentName The name of the role assignment. It can be any valid GUID.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleAssignmentName: string,\n    options?: RoleAssignmentsGetOptionalParams\n  ): Promise<RoleAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a role assignment by scope and name.\n   * @param scope The scope of the operation or resource. Valid scopes are: subscription (format:\n   *              '/subscriptions/{subscriptionId}'), resource group (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'\n   * @param roleAssignmentName The name of the role assignment. It can be any valid GUID.\n   * @param parameters Parameters for the role assignment.\n   * @param options The options parameters.\n   */\n  create(\n    scope: string,\n    roleAssignmentName: string,\n    parameters: RoleAssignmentCreateParameters,\n    options?: RoleAssignmentsCreateOptionalParams\n  ): Promise<RoleAssignmentsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Delete a role assignment by scope and name.\n   * @param scope The scope of the operation or resource. Valid scopes are: subscription (format:\n   *              '/subscriptions/{subscriptionId}'), resource group (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'\n   * @param roleAssignmentName The name of the role assignment. It can be any valid GUID.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    roleAssignmentName: string,\n    options?: RoleAssignmentsDeleteOptionalParams\n  ): Promise<RoleAssignmentsDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * List all role assignments that apply to a scope.\n   * @param scope The scope of the operation or resource. Valid scopes are: subscription (format:\n   *              '/subscriptions/{subscriptionId}'), resource group (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleAssignmentsListForScopeOptionalParams\n  ): Promise<RoleAssignmentsListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * Get a role assignment by ID.\n   * @param roleAssignmentId The fully qualified ID of the role assignment including scope, resource\n   *                         name, and resource type. Format:\n   *                         /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example:\n   *                         /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>\n   * @param options The options parameters.\n   */\n  getById(\n    roleAssignmentId: string,\n    options?: RoleAssignmentsGetByIdOptionalParams\n  ): Promise<RoleAssignmentsGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      { roleAssignmentId, options },\n      getByIdOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a role assignment by ID.\n   * @param roleAssignmentId The fully qualified ID of the role assignment including scope, resource\n   *                         name, and resource type. Format:\n   *                         /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example:\n   *                         /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>\n   * @param parameters Parameters for the role assignment.\n   * @param options The options parameters.\n   */\n  createById(\n    roleAssignmentId: string,\n    parameters: RoleAssignmentCreateParameters,\n    options?: RoleAssignmentsCreateByIdOptionalParams\n  ): Promise<RoleAssignmentsCreateByIdResponse> {\n    return this.client.sendOperationRequest(\n      { roleAssignmentId, parameters, options },\n      createByIdOperationSpec\n    );\n  }\n\n  /**\n   * Delete a role assignment by ID.\n   * @param roleAssignmentId The fully qualified ID of the role assignment including scope, resource\n   *                         name, and resource type. Format:\n   *                         /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example:\n   *                         /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>\n   * @param options The options parameters.\n   */\n  deleteById(\n    roleAssignmentId: string,\n    options?: RoleAssignmentsDeleteByIdOptionalParams\n  ): Promise<RoleAssignmentsDeleteByIdResponse> {\n    return this.client.sendOperationRequest(\n      { roleAssignmentId, options },\n      deleteByIdOperationSpec\n    );\n  }\n\n  /**\n   * ListForSubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListForSubscription method.\n   * @param options The options parameters.\n   */\n  private _listForSubscriptionNext(\n    nextLink: string,\n    options?: RoleAssignmentsListForSubscriptionNextOptionalParams\n  ): Promise<RoleAssignmentsListForSubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listForSubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: RoleAssignmentsListForResourceGroupNextOptionalParams\n  ): Promise<RoleAssignmentsListForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param resourceType The resource type name. For example the type name of a web app is 'sites' (from\n   *                     Microsoft.Web/sites).\n   * @param resourceName The resource name.\n   * @param nextLink The nextLink from the previous successful call to the ListForResource method.\n   * @param options The options parameters.\n   */\n  private _listForResourceNext(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    resourceType: string,\n    resourceName: string,\n    nextLink: string,\n    options?: RoleAssignmentsListForResourceNextOptionalParams\n  ): Promise<RoleAssignmentsListForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        resourceType,\n        resourceName,\n        nextLink,\n        options\n      },\n      listForResourceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the operation or resource. Valid scopes are: subscription (format:\n   *              '/subscriptions/{subscriptionId}'), resource group (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format:\n   *              '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleAssignmentsListForScopeNextOptionalParams\n  ): Promise<RoleAssignmentsListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForSubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.filter1,\n    Parameters.tenantId\n  ],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.filter1,\n    Parameters.tenantId\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.filter1,\n    Parameters.tenantId\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.resourceType,\n    Parameters.resourceName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.tenantId],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    201: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.tenantId],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/roleAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.filter1,\n    Parameters.tenantId,\n    Parameters.skipToken\n  ],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{roleAssignmentId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.tenantId],\n  urlParameters: [Parameters.$host, Parameters.roleAssignmentId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{roleAssignmentId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    201: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.roleAssignmentId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{roleAssignmentId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignment\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.tenantId],\n  urlParameters: [Parameters.$host, Parameters.roleAssignmentId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForSubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.resourceType,\n    Parameters.resourceName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Permissions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  Permission,\n  PermissionsListForResourceGroupNextOptionalParams,\n  PermissionsListForResourceGroupOptionalParams,\n  PermissionsListForResourceGroupResponse,\n  PermissionsListForResourceNextOptionalParams,\n  PermissionsListForResourceOptionalParams,\n  PermissionsListForResourceResponse,\n  PermissionsListForResourceGroupNextResponse,\n  PermissionsListForResourceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Permissions operations. */\nexport class PermissionsImpl implements Permissions {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class Permissions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all permissions the caller has for a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listForResourceGroup(\n    resourceGroupName: string,\n    options?: PermissionsListForResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Permission> {\n    const iter = this.listForResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: PermissionsListForResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Permission[]> {\n    let result: PermissionsListForResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: PermissionsListForResourceGroupOptionalParams\n  ): AsyncIterableIterator<Permission> {\n    for await (const page of this.listForResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all permissions the caller has for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get the permissions for.\n   * @param options The options parameters.\n   */\n  public listForResource(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: PermissionsListForResourceOptionalParams\n  ): PagedAsyncIterableIterator<Permission> {\n    const iter = this.listForResourcePagingAll(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForResourcePagingPage(\n          resourceGroupName,\n          resourceProviderNamespace,\n          parentResourcePath,\n          resourceType,\n          resourceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForResourcePagingPage(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: PermissionsListForResourceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Permission[]> {\n    let result: PermissionsListForResourceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForResource(\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForResourceNext(\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForResourcePagingAll(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: PermissionsListForResourceOptionalParams\n  ): AsyncIterableIterator<Permission> {\n    for await (const page of this.listForResourcePagingPage(\n      resourceGroupName,\n      resourceProviderNamespace,\n      parentResourcePath,\n      resourceType,\n      resourceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all permissions the caller has for a resource group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroup(\n    resourceGroupName: string,\n    options?: PermissionsListForResourceGroupOptionalParams\n  ): Promise<PermissionsListForResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listForResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets all permissions the caller has for a resource.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get the permissions for.\n   * @param options The options parameters.\n   */\n  private _listForResource(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    options?: PermissionsListForResourceOptionalParams\n  ): Promise<PermissionsListForResourceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        options\n      },\n      listForResourceOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListForResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listForResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PermissionsListForResourceGroupNextOptionalParams\n  ): Promise<PermissionsListForResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listForResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForResourceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceProviderNamespace The namespace of the resource provider.\n   * @param parentResourcePath The parent resource identity.\n   * @param resourceType The resource type of the resource.\n   * @param resourceName The name of the resource to get the permissions for.\n   * @param nextLink The nextLink from the previous successful call to the ListForResource method.\n   * @param options The options parameters.\n   */\n  private _listForResourceNext(\n    resourceGroupName: string,\n    resourceProviderNamespace: string,\n    parentResourcePath: string,\n    resourceType: string,\n    resourceName: string,\n    nextLink: string,\n    options?: PermissionsListForResourceNextOptionalParams\n  ): Promise<PermissionsListForResourceNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceProviderNamespace,\n        parentResourcePath,\n        resourceType,\n        resourceName,\n        nextLink,\n        options\n      },\n      listForResourceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PermissionGetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PermissionGetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PermissionGetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForResourceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PermissionGetResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.resourceGroupName,\n    Parameters.resourceProviderNamespace,\n    Parameters.parentResourcePath,\n    Parameters.resourceType,\n    Parameters.resourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleDefinitions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleDefinition,\n  RoleDefinitionsListNextOptionalParams,\n  RoleDefinitionsListOptionalParams,\n  RoleDefinitionsListResponse,\n  RoleDefinitionsDeleteOptionalParams,\n  RoleDefinitionsDeleteResponse,\n  RoleDefinitionsGetOptionalParams,\n  RoleDefinitionsGetResponse,\n  RoleDefinitionsCreateOrUpdateOptionalParams,\n  RoleDefinitionsCreateOrUpdateResponse,\n  RoleDefinitionsGetByIdOptionalParams,\n  RoleDefinitionsGetByIdResponse,\n  RoleDefinitionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleDefinitions operations. */\nexport class RoleDefinitionsImpl implements RoleDefinitions {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleDefinitions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all role definitions that are applicable at scope and above.\n   * @param scope The scope of the role definition.\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: RoleDefinitionsListOptionalParams\n  ): PagedAsyncIterableIterator<RoleDefinition> {\n    const iter = this.listPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    scope: string,\n    options?: RoleDefinitionsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleDefinition[]> {\n    let result: RoleDefinitionsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    scope: string,\n    options?: RoleDefinitionsListOptionalParams\n  ): AsyncIterableIterator<RoleDefinition> {\n    for await (const page of this.listPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Deletes a role definition.\n   * @param scope The scope of the role definition.\n   * @param roleDefinitionId The ID of the role definition to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    roleDefinitionId: string,\n    options?: RoleDefinitionsDeleteOptionalParams\n  ): Promise<RoleDefinitionsDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleDefinitionId, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Get role definition by name (GUID).\n   * @param scope The scope of the role definition.\n   * @param roleDefinitionId The ID of the role definition.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleDefinitionId: string,\n    options?: RoleDefinitionsGetOptionalParams\n  ): Promise<RoleDefinitionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleDefinitionId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a role definition.\n   * @param scope The scope of the role definition.\n   * @param roleDefinitionId The ID of the role definition.\n   * @param roleDefinition The values for the role definition.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    scope: string,\n    roleDefinitionId: string,\n    roleDefinition: RoleDefinition,\n    options?: RoleDefinitionsCreateOrUpdateOptionalParams\n  ): Promise<RoleDefinitionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleDefinitionId, roleDefinition, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get all role definitions that are applicable at scope and above.\n   * @param scope The scope of the role definition.\n   * @param options The options parameters.\n   */\n  private _list(\n    scope: string,\n    options?: RoleDefinitionsListOptionalParams\n  ): Promise<RoleDefinitionsListResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a role definition by ID.\n   * @param roleId The fully qualified role definition ID. Use the format,\n   *               /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for\n   *               subscription level role definitions, or\n   *               /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant level role\n   *               definitions.\n   * @param options The options parameters.\n   */\n  getById(\n    roleId: string,\n    options?: RoleDefinitionsGetByIdOptionalParams\n  ): Promise<RoleDefinitionsGetByIdResponse> {\n    return this.client.sendOperationRequest(\n      { roleId, options },\n      getByIdOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param scope The scope of the role definition.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleDefinitionsListNextOptionalParams\n  ): Promise<RoleDefinitionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleDefinition\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleDefinitionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleDefinition\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleDefinitionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoleDefinition\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.roleDefinition,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleDefinitionId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/roleDefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleDefinitionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.filter],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/{roleId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleDefinition\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.roleId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleDefinitionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EligibleChildResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  EligibleChildResource,\n  EligibleChildResourcesGetNextOptionalParams,\n  EligibleChildResourcesGetOptionalParams,\n  EligibleChildResourcesGetResponse,\n  EligibleChildResourcesGetNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EligibleChildResources operations. */\nexport class EligibleChildResourcesImpl implements EligibleChildResources {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class EligibleChildResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the child resources of a resource on which user has eligible access\n   * @param scope The scope of the role management policy.\n   * @param options The options parameters.\n   */\n  public list(\n    scope: string,\n    options?: EligibleChildResourcesGetOptionalParams\n  ): PagedAsyncIterableIterator<EligibleChildResource> {\n    const iter = this.getPagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.getPagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *getPagingPage(\n    scope: string,\n    options?: EligibleChildResourcesGetOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EligibleChildResource[]> {\n    let result: EligibleChildResourcesGetResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._get(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._getNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *getPagingAll(\n    scope: string,\n    options?: EligibleChildResourcesGetOptionalParams\n  ): AsyncIterableIterator<EligibleChildResource> {\n    for await (const page of this.getPagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the child resources of a resource on which user has eligible access\n   * @param scope The scope of the role management policy.\n   * @param options The options parameters.\n   */\n  private _get(\n    scope: string,\n    options?: EligibleChildResourcesGetOptionalParams\n  ): Promise<EligibleChildResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * GetNext\n   * @param scope The scope of the role management policy.\n   * @param nextLink The nextLink from the previous successful call to the Get method.\n   * @param options The options parameters.\n   */\n  private _getNext(\n    scope: string,\n    nextLink: string,\n    options?: EligibleChildResourcesGetNextOptionalParams\n  ): Promise<EligibleChildResourcesGetNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      getNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/eligibleChildResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EligibleChildResourcesListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EligibleChildResourcesListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleAssignmentSchedules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleAssignmentSchedule,\n  RoleAssignmentSchedulesListForScopeNextOptionalParams,\n  RoleAssignmentSchedulesListForScopeOptionalParams,\n  RoleAssignmentSchedulesListForScopeResponse,\n  RoleAssignmentSchedulesGetOptionalParams,\n  RoleAssignmentSchedulesGetResponse,\n  RoleAssignmentSchedulesListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleAssignmentSchedules operations. */\nexport class RoleAssignmentSchedulesImpl implements RoleAssignmentSchedules {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleAssignmentSchedules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role assignment schedules for a resource scope.\n   * @param scope The scope of the role assignments schedules.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleAssignmentSchedulesListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignmentSchedule> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleAssignmentSchedulesListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignmentSchedule[]> {\n    let result: RoleAssignmentSchedulesListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleAssignmentSchedulesListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleAssignmentSchedule> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the specified role assignment schedule for a resource scope\n   * @param scope The scope of the role assignment schedule.\n   * @param roleAssignmentScheduleName The name (guid) of the role assignment schedule to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleAssignmentScheduleName: string,\n    options?: RoleAssignmentSchedulesGetOptionalParams\n  ): Promise<RoleAssignmentSchedulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentScheduleName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets role assignment schedules for a resource scope.\n   * @param scope The scope of the role assignments schedules.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleAssignmentSchedulesListForScopeOptionalParams\n  ): Promise<RoleAssignmentSchedulesListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role assignments schedules.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleAssignmentSchedulesListForScopeNextOptionalParams\n  ): Promise<RoleAssignmentSchedulesListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentSchedule\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentScheduleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleAssignmentScheduleInstances } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleAssignmentScheduleInstance,\n  RoleAssignmentScheduleInstancesListForScopeNextOptionalParams,\n  RoleAssignmentScheduleInstancesListForScopeOptionalParams,\n  RoleAssignmentScheduleInstancesListForScopeResponse,\n  RoleAssignmentScheduleInstancesGetOptionalParams,\n  RoleAssignmentScheduleInstancesGetResponse,\n  RoleAssignmentScheduleInstancesListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleAssignmentScheduleInstances operations. */\nexport class RoleAssignmentScheduleInstancesImpl\n  implements RoleAssignmentScheduleInstances {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleAssignmentScheduleInstances class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role assignment schedule instances of a role assignment schedule.\n   * @param scope The scope of the role assignment schedule.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleAssignmentScheduleInstancesListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignmentScheduleInstance> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleAssignmentScheduleInstancesListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignmentScheduleInstance[]> {\n    let result: RoleAssignmentScheduleInstancesListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleAssignmentScheduleInstancesListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleAssignmentScheduleInstance> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets role assignment schedule instances of a role assignment schedule.\n   * @param scope The scope of the role assignment schedule.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleAssignmentScheduleInstancesListForScopeOptionalParams\n  ): Promise<RoleAssignmentScheduleInstancesListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified role assignment schedule instance.\n   * @param scope The scope of the role assignments schedules.\n   * @param roleAssignmentScheduleInstanceName The name (hash of schedule name + time) of the role\n   *                                           assignment schedule to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleAssignmentScheduleInstanceName: string,\n    options?: RoleAssignmentScheduleInstancesGetOptionalParams\n  ): Promise<RoleAssignmentScheduleInstancesGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentScheduleInstanceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role assignment schedule.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleAssignmentScheduleInstancesListForScopeNextOptionalParams\n  ): Promise<RoleAssignmentScheduleInstancesListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleInstanceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleInstance\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentScheduleInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleInstanceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleAssignmentScheduleRequests } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleAssignmentScheduleRequest,\n  RoleAssignmentScheduleRequestsListForScopeNextOptionalParams,\n  RoleAssignmentScheduleRequestsListForScopeOptionalParams,\n  RoleAssignmentScheduleRequestsListForScopeResponse,\n  RoleAssignmentScheduleRequestsCreateOptionalParams,\n  RoleAssignmentScheduleRequestsCreateResponse,\n  RoleAssignmentScheduleRequestsGetOptionalParams,\n  RoleAssignmentScheduleRequestsGetResponse,\n  RoleAssignmentScheduleRequestsCancelOptionalParams,\n  RoleAssignmentScheduleRequestsValidateOptionalParams,\n  RoleAssignmentScheduleRequestsValidateResponse,\n  RoleAssignmentScheduleRequestsListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleAssignmentScheduleRequests operations. */\nexport class RoleAssignmentScheduleRequestsImpl\n  implements RoleAssignmentScheduleRequests {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleAssignmentScheduleRequests class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role assignment schedule requests for a scope.\n   * @param scope The scope of the role assignments schedule requests.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleAssignmentScheduleRequestsListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleAssignmentScheduleRequest> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleAssignmentScheduleRequestsListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleAssignmentScheduleRequest[]> {\n    let result: RoleAssignmentScheduleRequestsListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleAssignmentScheduleRequestsListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleAssignmentScheduleRequest> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a role assignment schedule request.\n   * @param scope The scope of the role assignment schedule request to create. The scope can be any REST\n   *              resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription,\n   *              '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and\n   *              '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n   *              for a resource.\n   * @param roleAssignmentScheduleRequestName A GUID for the role assignment to create. The name must be\n   *                                          unique and different for each role assignment.\n   * @param parameters Parameters for the role assignment schedule request.\n   * @param options The options parameters.\n   */\n  create(\n    scope: string,\n    roleAssignmentScheduleRequestName: string,\n    parameters: RoleAssignmentScheduleRequest,\n    options?: RoleAssignmentScheduleRequestsCreateOptionalParams\n  ): Promise<RoleAssignmentScheduleRequestsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentScheduleRequestName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Get the specified role assignment schedule request.\n   * @param scope The scope of the role assignment schedule request.\n   * @param roleAssignmentScheduleRequestName The name (guid) of the role assignment schedule request to\n   *                                          get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleAssignmentScheduleRequestName: string,\n    options?: RoleAssignmentScheduleRequestsGetOptionalParams\n  ): Promise<RoleAssignmentScheduleRequestsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentScheduleRequestName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets role assignment schedule requests for a scope.\n   * @param scope The scope of the role assignments schedule requests.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleAssignmentScheduleRequestsListForScopeOptionalParams\n  ): Promise<RoleAssignmentScheduleRequestsListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a pending role assignment schedule request.\n   * @param scope The scope of the role assignment request to cancel.\n   * @param roleAssignmentScheduleRequestName The name of the role assignment request to cancel.\n   * @param options The options parameters.\n   */\n  cancel(\n    scope: string,\n    roleAssignmentScheduleRequestName: string,\n    options?: RoleAssignmentScheduleRequestsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentScheduleRequestName, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * Validates a new role assignment schedule request.\n   * @param scope The scope of the role assignment request to validate.\n   * @param roleAssignmentScheduleRequestName The name of the role assignment request to validate.\n   * @param parameters Parameters for the role assignment schedule request.\n   * @param options The options parameters.\n   */\n  validate(\n    scope: string,\n    roleAssignmentScheduleRequestName: string,\n    parameters: RoleAssignmentScheduleRequest,\n    options?: RoleAssignmentScheduleRequestsValidateOptionalParams\n  ): Promise<RoleAssignmentScheduleRequestsValidateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleAssignmentScheduleRequestName, parameters, options },\n      validateOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role assignments schedule requests.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleAssignmentScheduleRequestsListForScopeNextOptionalParams\n  ): Promise<RoleAssignmentScheduleRequestsListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoleAssignmentScheduleRequest\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleRequest\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleRequestListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleRequest\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleAssignmentScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleAssignmentScheduleRequestListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleEligibilitySchedules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleEligibilitySchedule,\n  RoleEligibilitySchedulesListForScopeNextOptionalParams,\n  RoleEligibilitySchedulesListForScopeOptionalParams,\n  RoleEligibilitySchedulesListForScopeResponse,\n  RoleEligibilitySchedulesGetOptionalParams,\n  RoleEligibilitySchedulesGetResponse,\n  RoleEligibilitySchedulesListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleEligibilitySchedules operations. */\nexport class RoleEligibilitySchedulesImpl implements RoleEligibilitySchedules {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleEligibilitySchedules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role eligibility schedules for a resource scope.\n   * @param scope The scope of the role eligibility schedules.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleEligibilitySchedulesListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleEligibilitySchedule> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleEligibilitySchedulesListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleEligibilitySchedule[]> {\n    let result: RoleEligibilitySchedulesListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleEligibilitySchedulesListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleEligibilitySchedule> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the specified role eligibility schedule for a resource scope\n   * @param scope The scope of the role eligibility schedule.\n   * @param roleEligibilityScheduleName The name (guid) of the role eligibility schedule to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleEligibilityScheduleName: string,\n    options?: RoleEligibilitySchedulesGetOptionalParams\n  ): Promise<RoleEligibilitySchedulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleEligibilityScheduleName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets role eligibility schedules for a resource scope.\n   * @param scope The scope of the role eligibility schedules.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleEligibilitySchedulesListForScopeOptionalParams\n  ): Promise<RoleEligibilitySchedulesListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role eligibility schedules.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleEligibilitySchedulesListForScopeNextOptionalParams\n  ): Promise<RoleEligibilitySchedulesListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilitySchedule\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleEligibilityScheduleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleEligibilityScheduleInstances } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleEligibilityScheduleInstance,\n  RoleEligibilityScheduleInstancesListForScopeNextOptionalParams,\n  RoleEligibilityScheduleInstancesListForScopeOptionalParams,\n  RoleEligibilityScheduleInstancesListForScopeResponse,\n  RoleEligibilityScheduleInstancesGetOptionalParams,\n  RoleEligibilityScheduleInstancesGetResponse,\n  RoleEligibilityScheduleInstancesListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleEligibilityScheduleInstances operations. */\nexport class RoleEligibilityScheduleInstancesImpl\n  implements RoleEligibilityScheduleInstances {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleEligibilityScheduleInstances class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role eligibility schedule instances of a role eligibility schedule.\n   * @param scope The scope of the role eligibility schedule.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleEligibilityScheduleInstancesListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleEligibilityScheduleInstance> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleEligibilityScheduleInstancesListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleEligibilityScheduleInstance[]> {\n    let result: RoleEligibilityScheduleInstancesListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleEligibilityScheduleInstancesListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleEligibilityScheduleInstance> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets role eligibility schedule instances of a role eligibility schedule.\n   * @param scope The scope of the role eligibility schedule.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleEligibilityScheduleInstancesListForScopeOptionalParams\n  ): Promise<RoleEligibilityScheduleInstancesListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified role eligibility schedule instance.\n   * @param scope The scope of the role eligibility schedules.\n   * @param roleEligibilityScheduleInstanceName The name (hash of schedule name + time) of the role\n   *                                            eligibility schedule to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleEligibilityScheduleInstanceName: string,\n    options?: RoleEligibilityScheduleInstancesGetOptionalParams\n  ): Promise<RoleEligibilityScheduleInstancesGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleEligibilityScheduleInstanceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role eligibility schedule.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleEligibilityScheduleInstancesListForScopeNextOptionalParams\n  ): Promise<RoleEligibilityScheduleInstancesListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleInstanceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleInstance\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleEligibilityScheduleInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleInstanceListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleEligibilityScheduleRequests } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleEligibilityScheduleRequest,\n  RoleEligibilityScheduleRequestsListForScopeNextOptionalParams,\n  RoleEligibilityScheduleRequestsListForScopeOptionalParams,\n  RoleEligibilityScheduleRequestsListForScopeResponse,\n  RoleEligibilityScheduleRequestsCreateOptionalParams,\n  RoleEligibilityScheduleRequestsCreateResponse,\n  RoleEligibilityScheduleRequestsGetOptionalParams,\n  RoleEligibilityScheduleRequestsGetResponse,\n  RoleEligibilityScheduleRequestsCancelOptionalParams,\n  RoleEligibilityScheduleRequestsValidateOptionalParams,\n  RoleEligibilityScheduleRequestsValidateResponse,\n  RoleEligibilityScheduleRequestsListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleEligibilityScheduleRequests operations. */\nexport class RoleEligibilityScheduleRequestsImpl\n  implements RoleEligibilityScheduleRequests {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleEligibilityScheduleRequests class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role eligibility schedule requests for a scope.\n   * @param scope The scope of the role eligibility schedule requests.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleEligibilityScheduleRequestsListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleEligibilityScheduleRequest> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleEligibilityScheduleRequestsListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleEligibilityScheduleRequest[]> {\n    let result: RoleEligibilityScheduleRequestsListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleEligibilityScheduleRequestsListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleEligibilityScheduleRequest> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a role eligibility schedule request.\n   * @param scope The scope of the role eligibility schedule request to create. The scope can be any REST\n   *              resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription,\n   *              '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and\n   *              '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'\n   *              for a resource.\n   * @param roleEligibilityScheduleRequestName The name of the role eligibility to create. It can be any\n   *                                           valid GUID.\n   * @param parameters Parameters for the role eligibility schedule request.\n   * @param options The options parameters.\n   */\n  create(\n    scope: string,\n    roleEligibilityScheduleRequestName: string,\n    parameters: RoleEligibilityScheduleRequest,\n    options?: RoleEligibilityScheduleRequestsCreateOptionalParams\n  ): Promise<RoleEligibilityScheduleRequestsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleEligibilityScheduleRequestName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Get the specified role eligibility schedule request.\n   * @param scope The scope of the role eligibility schedule request.\n   * @param roleEligibilityScheduleRequestName The name (guid) of the role eligibility schedule request\n   *                                           to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleEligibilityScheduleRequestName: string,\n    options?: RoleEligibilityScheduleRequestsGetOptionalParams\n  ): Promise<RoleEligibilityScheduleRequestsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleEligibilityScheduleRequestName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets role eligibility schedule requests for a scope.\n   * @param scope The scope of the role eligibility schedule requests.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleEligibilityScheduleRequestsListForScopeOptionalParams\n  ): Promise<RoleEligibilityScheduleRequestsListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a pending role eligibility schedule request.\n   * @param scope The scope of the role eligibility request to cancel.\n   * @param roleEligibilityScheduleRequestName The name of the role eligibility request to cancel.\n   * @param options The options parameters.\n   */\n  cancel(\n    scope: string,\n    roleEligibilityScheduleRequestName: string,\n    options?: RoleEligibilityScheduleRequestsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, roleEligibilityScheduleRequestName, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * Validates a new role eligibility schedule request.\n   * @param scope The scope of the role eligibility request to validate.\n   * @param roleEligibilityScheduleRequestName The name of the role eligibility request to validate.\n   * @param parameters Parameters for the role eligibility schedule request.\n   * @param options The options parameters.\n   */\n  validate(\n    scope: string,\n    roleEligibilityScheduleRequestName: string,\n    parameters: RoleEligibilityScheduleRequest,\n    options?: RoleEligibilityScheduleRequestsValidateOptionalParams\n  ): Promise<RoleEligibilityScheduleRequestsValidateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleEligibilityScheduleRequestName, parameters, options },\n      validateOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role eligibility schedule requests.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleEligibilityScheduleRequestsListForScopeNextOptionalParams\n  ): Promise<RoleEligibilityScheduleRequestsListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoleEligibilityScheduleRequest\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleEligibilityScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleRequest\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleEligibilityScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleRequestListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.filter, Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleEligibilityScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleRequest\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleEligibilityScheduleRequestName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleEligibilityScheduleRequestListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleManagementPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleManagementPolicy,\n  RoleManagementPoliciesListForScopeNextOptionalParams,\n  RoleManagementPoliciesListForScopeOptionalParams,\n  RoleManagementPoliciesListForScopeResponse,\n  RoleManagementPoliciesGetOptionalParams,\n  RoleManagementPoliciesGetResponse,\n  RoleManagementPoliciesUpdateOptionalParams,\n  RoleManagementPoliciesUpdateResponse,\n  RoleManagementPoliciesDeleteOptionalParams,\n  RoleManagementPoliciesListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleManagementPolicies operations. */\nexport class RoleManagementPoliciesImpl implements RoleManagementPolicies {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleManagementPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role management policies for a resource scope.\n   * @param scope The scope of the role management policy.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleManagementPoliciesListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleManagementPolicy> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleManagementPoliciesListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleManagementPolicy[]> {\n    let result: RoleManagementPoliciesListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleManagementPoliciesListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleManagementPolicy> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the specified role management policy for a resource scope\n   * @param scope The scope of the role management policy.\n   * @param roleManagementPolicyName The name (guid) of the role management policy to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleManagementPolicyName: string,\n    options?: RoleManagementPoliciesGetOptionalParams\n  ): Promise<RoleManagementPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleManagementPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update a role management policy\n   * @param scope The scope of the role management policy to upsert.\n   * @param roleManagementPolicyName The name (guid) of the role management policy to upsert.\n   * @param parameters Parameters for the role management policy.\n   * @param options The options parameters.\n   */\n  update(\n    scope: string,\n    roleManagementPolicyName: string,\n    parameters: RoleManagementPolicy,\n    options?: RoleManagementPoliciesUpdateOptionalParams\n  ): Promise<RoleManagementPoliciesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleManagementPolicyName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete a role management policy\n   * @param scope The scope of the role management policy to upsert.\n   * @param roleManagementPolicyName The name (guid) of the role management policy to upsert.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    roleManagementPolicyName: string,\n    options?: RoleManagementPoliciesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, roleManagementPolicyName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets role management policies for a resource scope.\n   * @param scope The scope of the role management policy.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleManagementPoliciesListForScopeOptionalParams\n  ): Promise<RoleManagementPoliciesListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role management policy.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleManagementPoliciesListForScopeNextOptionalParams\n  ): Promise<RoleManagementPoliciesListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicy\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleManagementPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicy\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleManagementPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleManagementPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path: \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicyListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RoleManagementPolicyAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AuthorizationManagementClient } from \"../authorizationManagementClient\";\nimport {\n  RoleManagementPolicyAssignment,\n  RoleManagementPolicyAssignmentsListForScopeNextOptionalParams,\n  RoleManagementPolicyAssignmentsListForScopeOptionalParams,\n  RoleManagementPolicyAssignmentsListForScopeResponse,\n  RoleManagementPolicyAssignmentsGetOptionalParams,\n  RoleManagementPolicyAssignmentsGetResponse,\n  RoleManagementPolicyAssignmentsCreateOptionalParams,\n  RoleManagementPolicyAssignmentsCreateResponse,\n  RoleManagementPolicyAssignmentsDeleteOptionalParams,\n  RoleManagementPolicyAssignmentsListForScopeNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RoleManagementPolicyAssignments operations. */\nexport class RoleManagementPolicyAssignmentsImpl\n  implements RoleManagementPolicyAssignments {\n  private readonly client: AuthorizationManagementClient;\n\n  /**\n   * Initialize a new instance of the class RoleManagementPolicyAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AuthorizationManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets role management assignment policies for a resource scope.\n   * @param scope The scope of the role management policy.\n   * @param options The options parameters.\n   */\n  public listForScope(\n    scope: string,\n    options?: RoleManagementPolicyAssignmentsListForScopeOptionalParams\n  ): PagedAsyncIterableIterator<RoleManagementPolicyAssignment> {\n    const iter = this.listForScopePagingAll(scope, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForScopePagingPage(scope, options, settings);\n      }\n    };\n  }\n\n  private async *listForScopePagingPage(\n    scope: string,\n    options?: RoleManagementPolicyAssignmentsListForScopeOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RoleManagementPolicyAssignment[]> {\n    let result: RoleManagementPolicyAssignmentsListForScopeResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForScope(scope, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForScopeNext(scope, continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForScopePagingAll(\n    scope: string,\n    options?: RoleManagementPolicyAssignmentsListForScopeOptionalParams\n  ): AsyncIterableIterator<RoleManagementPolicyAssignment> {\n    for await (const page of this.listForScopePagingPage(scope, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the specified role management policy assignment for a resource scope\n   * @param scope The scope of the role management policy.\n   * @param roleManagementPolicyAssignmentName The name of format {guid_guid} the role management policy\n   *                                           assignment to get.\n   * @param options The options parameters.\n   */\n  get(\n    scope: string,\n    roleManagementPolicyAssignmentName: string,\n    options?: RoleManagementPolicyAssignmentsGetOptionalParams\n  ): Promise<RoleManagementPolicyAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleManagementPolicyAssignmentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a role management policy assignment\n   * @param scope The scope of the role management policy assignment to upsert.\n   * @param roleManagementPolicyAssignmentName The name of format {guid_guid} the role management policy\n   *                                           assignment to upsert.\n   * @param parameters Parameters for the role management policy assignment.\n   * @param options The options parameters.\n   */\n  create(\n    scope: string,\n    roleManagementPolicyAssignmentName: string,\n    parameters: RoleManagementPolicyAssignment,\n    options?: RoleManagementPolicyAssignmentsCreateOptionalParams\n  ): Promise<RoleManagementPolicyAssignmentsCreateResponse> {\n    return this.client.sendOperationRequest(\n      { scope, roleManagementPolicyAssignmentName, parameters, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Delete a role management policy assignment\n   * @param scope The scope of the role management policy assignment to delete.\n   * @param roleManagementPolicyAssignmentName The name of format {guid_guid} the role management policy\n   *                                           assignment to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    scope: string,\n    roleManagementPolicyAssignmentName: string,\n    options?: RoleManagementPolicyAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { scope, roleManagementPolicyAssignmentName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets role management assignment policies for a resource scope.\n   * @param scope The scope of the role management policy.\n   * @param options The options parameters.\n   */\n  private _listForScope(\n    scope: string,\n    options?: RoleManagementPolicyAssignmentsListForScopeOptionalParams\n  ): Promise<RoleManagementPolicyAssignmentsListForScopeResponse> {\n    return this.client.sendOperationRequest(\n      { scope, options },\n      listForScopeOperationSpec\n    );\n  }\n\n  /**\n   * ListForScopeNext\n   * @param scope The scope of the role management policy.\n   * @param nextLink The nextLink from the previous successful call to the ListForScope method.\n   * @param options The options parameters.\n   */\n  private _listForScopeNext(\n    scope: string,\n    nextLink: string,\n    options?: RoleManagementPolicyAssignmentsListForScopeNextOptionalParams\n  ): Promise<RoleManagementPolicyAssignmentsListForScopeNextResponse> {\n    return this.client.sendOperationRequest(\n      { scope, nextLink, options },\n      listForScopeNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicyAssignment\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleManagementPolicyAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.RoleManagementPolicyAssignment\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleManagementPolicyAssignmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.scope,\n    Parameters.roleManagementPolicyAssignmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForScopeNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RoleManagementPolicyAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink, Parameters.scope],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  ClassicAdministratorsImpl,\n  GlobalAdministratorImpl,\n  DenyAssignmentsImpl,\n  ProviderOperationsMetadataOperationsImpl,\n  RoleAssignmentsImpl,\n  PermissionsImpl,\n  RoleDefinitionsImpl,\n  EligibleChildResourcesImpl,\n  RoleAssignmentSchedulesImpl,\n  RoleAssignmentScheduleInstancesImpl,\n  RoleAssignmentScheduleRequestsImpl,\n  RoleEligibilitySchedulesImpl,\n  RoleEligibilityScheduleInstancesImpl,\n  RoleEligibilityScheduleRequestsImpl,\n  RoleManagementPoliciesImpl,\n  RoleManagementPolicyAssignmentsImpl\n} from \"./operations\";\nimport {\n  ClassicAdministrators,\n  GlobalAdministrator,\n  DenyAssignments,\n  ProviderOperationsMetadataOperations,\n  RoleAssignments,\n  Permissions,\n  RoleDefinitions,\n  EligibleChildResources,\n  RoleAssignmentSchedules,\n  RoleAssignmentScheduleInstances,\n  RoleAssignmentScheduleRequests,\n  RoleEligibilitySchedules,\n  RoleEligibilityScheduleInstances,\n  RoleEligibilityScheduleRequests,\n  RoleManagementPolicies,\n  RoleManagementPolicyAssignments\n} from \"./operationsInterfaces\";\nimport { AuthorizationManagementClientOptionalParams } from \"./models\";\n\nexport class AuthorizationManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the AuthorizationManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: AuthorizationManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AuthorizationManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-authorization/9.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.classicAdministrators = new ClassicAdministratorsImpl(this);\n    this.globalAdministrator = new GlobalAdministratorImpl(this);\n    this.denyAssignments = new DenyAssignmentsImpl(this);\n    this.providerOperationsMetadataOperations = new ProviderOperationsMetadataOperationsImpl(\n      this\n    );\n    this.roleAssignments = new RoleAssignmentsImpl(this);\n    this.permissions = new PermissionsImpl(this);\n    this.roleDefinitions = new RoleDefinitionsImpl(this);\n    this.eligibleChildResources = new EligibleChildResourcesImpl(this);\n    this.roleAssignmentSchedules = new RoleAssignmentSchedulesImpl(this);\n    this.roleAssignmentScheduleInstances = new RoleAssignmentScheduleInstancesImpl(\n      this\n    );\n    this.roleAssignmentScheduleRequests = new RoleAssignmentScheduleRequestsImpl(\n      this\n    );\n    this.roleEligibilitySchedules = new RoleEligibilitySchedulesImpl(this);\n    this.roleEligibilityScheduleInstances = new RoleEligibilityScheduleInstancesImpl(\n      this\n    );\n    this.roleEligibilityScheduleRequests = new RoleEligibilityScheduleRequestsImpl(\n      this\n    );\n    this.roleManagementPolicies = new RoleManagementPoliciesImpl(this);\n    this.roleManagementPolicyAssignments = new RoleManagementPolicyAssignmentsImpl(\n      this\n    );\n  }\n\n  classicAdministrators: ClassicAdministrators;\n  globalAdministrator: GlobalAdministrator;\n  denyAssignments: DenyAssignments;\n  providerOperationsMetadataOperations: ProviderOperationsMetadataOperations;\n  roleAssignments: RoleAssignments;\n  permissions: Permissions;\n  roleDefinitions: RoleDefinitions;\n  eligibleChildResources: EligibleChildResources;\n  roleAssignmentSchedules: RoleAssignmentSchedules;\n  roleAssignmentScheduleInstances: RoleAssignmentScheduleInstances;\n  roleAssignmentScheduleRequests: RoleAssignmentScheduleRequests;\n  roleEligibilitySchedules: RoleEligibilitySchedules;\n  roleEligibilityScheduleInstances: RoleEligibilityScheduleInstances;\n  roleEligibilityScheduleRequests: RoleEligibilityScheduleRequests;\n  roleManagementPolicies: RoleManagementPolicies;\n  roleManagementPolicyAssignments: RoleManagementPolicyAssignments;\n}\n"],"names":["KnownPrincipalType","KnownAssignmentType","KnownMemberType","KnownStatus","KnownRequestType","KnownType","KnownRoleManagementPolicyRuleType","KnownApprovalMode","KnownUserType","KnownEnablementRules","KnownNotificationDeliveryMechanism","KnownNotificationLevel","KnownRecipientType","RoleAssignmentCreateParametersMapper","RoleDefinitionMapper","RoleAssignmentScheduleRequestMapper","RoleEligibilityScheduleRequestMapper","RoleManagementPolicyMapper","RoleManagementPolicyAssignmentMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.ClassicAdministratorListResult","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.accept","Parameters.nextLink","listForResourceOperationSpec","listForResourceGroupOperationSpec","getOperationSpec","getByIdOperationSpec","listForScopeOperationSpec","listForResourceNextOperationSpec","listForResourceGroupNextOperationSpec","listForScopeNextOperationSpec","Mappers.DenyAssignmentListResult","Parameters.apiVersion1","Parameters.filter","Parameters.resourceGroupName","Parameters.resourceProviderNamespace","Parameters.parentResourcePath","Parameters.resourceType","Parameters.resourceName","Mappers.DenyAssignment","Parameters.scope","Parameters.denyAssignmentId","Parameters.denyAssignmentId1","Mappers.ProviderOperationsMetadata","Parameters.expand","Mappers.ProviderOperationsMetadataListResult","createOperationSpec","deleteOperationSpec","Mappers.RoleAssignmentListResult","Parameters.filter1","Parameters.tenantId","Parameters.resourceName1","Mappers.RoleAssignment","Parameters.roleAssignmentName","Parameters.parameters","Parameters.contentType","Parameters.skipToken","Parameters.roleAssignmentId","Mappers.PermissionGetResult","Mappers.RoleDefinition","Parameters.roleDefinitionId","Parameters.roleDefinition","Mappers.RoleDefinitionListResult","Parameters.roleId","Mappers.EligibleChildResourcesListResult","Mappers.CloudError","Parameters.apiVersion2","Mappers.RoleAssignmentSchedule","Parameters.roleAssignmentScheduleName","Mappers.RoleAssignmentScheduleListResult","Mappers.RoleAssignmentScheduleInstanceListResult","Mappers.RoleAssignmentScheduleInstance","Parameters.roleAssignmentScheduleInstanceName","cancelOperationSpec","validateOperationSpec","Mappers.RoleAssignmentScheduleRequest","Parameters.parameters1","Parameters.roleAssignmentScheduleRequestName","Mappers.RoleAssignmentScheduleRequestListResult","Mappers.RoleEligibilitySchedule","Parameters.roleEligibilityScheduleName","Mappers.RoleEligibilityScheduleListResult","Mappers.RoleEligibilityScheduleInstanceListResult","Mappers.RoleEligibilityScheduleInstance","Parameters.roleEligibilityScheduleInstanceName","Mappers.RoleEligibilityScheduleRequest","Parameters.parameters2","Parameters.roleEligibilityScheduleRequestName","Mappers.RoleEligibilityScheduleRequestListResult","Mappers.RoleManagementPolicy","Parameters.roleManagementPolicyName","Parameters.parameters3","Mappers.RoleManagementPolicyListResult","Mappers.RoleManagementPolicyAssignment","Parameters.roleManagementPolicyAssignmentName","Parameters.parameters4","Mappers.RoleManagementPolicyAssignmentListResult","coreRestPipeline"],"mappings":"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"}